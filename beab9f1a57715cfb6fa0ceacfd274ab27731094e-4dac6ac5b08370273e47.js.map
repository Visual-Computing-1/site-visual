{"version":3,"file":"beab9f1a57715cfb6fa0ceacfd274ab27731094e-4dac6ac5b08370273e47.js","mappings":"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","sources":["webpack://usaco-guide/./node_modules/dom-helpers/esm/removeClass.js","webpack://usaco-guide/./node_modules/react-transition-group/esm/config.js","webpack://usaco-guide/./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://usaco-guide/./node_modules/react-transition-group/esm/Transition.js","webpack://usaco-guide/./node_modules/react-transition-group/esm/CSSTransition.js","webpack://usaco-guide/./node_modules/dom-helpers/esm/addClass.js","webpack://usaco-guide/./node_modules/dom-helpers/esm/hasClass.js","webpack://usaco-guide/./src/components/Transition.tsx","webpack://usaco-guide/./src/models/module.ts"],"sourcesContent":["function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/*eslint-disable */\r\nimport * as React from 'react';\r\nimport { useContext, useEffect, useRef } from 'react';\r\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group';\r\n\r\nconst TransitionContext = React.createContext({\r\n  parent: {},\r\n});\r\n\r\nfunction useIsInitialRender() {\r\n  const isInitialRender = useRef(true);\r\n  useEffect(() => {\r\n    isInitialRender.current = false;\r\n  }, []);\r\n  return isInitialRender.current;\r\n}\r\n\r\nfunction CSSTransition({\r\n  show,\r\n  enter = '',\r\n  enterFrom = '',\r\n  enterTo = '',\r\n  leave = '',\r\n  leaveFrom = '',\r\n  leaveTo = '',\r\n  appear,\r\n  children,\r\n  isParent,\r\n  timeout,\r\n}) {\r\n  const enterClasses = enter.split(' ').filter(s => s.length);\r\n  const enterFromClasses = enterFrom.split(' ').filter(s => s.length);\r\n  const enterToClasses = enterTo.split(' ').filter(s => s.length);\r\n  const leaveClasses = leave.split(' ').filter(s => s.length);\r\n  const leaveFromClasses = leaveFrom.split(' ').filter(s => s.length);\r\n  const leaveToClasses = leaveTo.split(' ').filter(s => s.length);\r\n\r\n  function addClasses(node, classes) {\r\n    classes.length && node.classList.add(...classes);\r\n  }\r\n\r\n  function removeClasses(node, classes) {\r\n    classes.length && node.classList.remove(...classes);\r\n  }\r\n\r\n  return (\r\n    <ReactCSSTransition\r\n      appear={appear}\r\n      unmountOnExit\r\n      in={show}\r\n      addEndListener={\r\n        isParent && timeout\r\n          ? undefined\r\n          : (node, done) => {\r\n              node.addEventListener(\r\n                'transitionend',\r\n                e => {\r\n                  if (node === e.target) done();\r\n                },\r\n                false\r\n              );\r\n            }\r\n      }\r\n      timeout={isParent ? timeout : undefined}\r\n      onEnter={node => {\r\n        addClasses(node, [...enterClasses, ...enterFromClasses]);\r\n      }}\r\n      onEntering={node => {\r\n        removeClasses(node, enterFromClasses);\r\n        addClasses(node, enterToClasses);\r\n      }}\r\n      onEntered={node => {\r\n        removeClasses(node, [...enterToClasses, ...enterClasses]);\r\n      }}\r\n      onExit={node => {\r\n        addClasses(node, [...leaveClasses, ...leaveFromClasses]);\r\n      }}\r\n      onExiting={node => {\r\n        removeClasses(node, leaveFromClasses);\r\n        addClasses(node, leaveToClasses);\r\n      }}\r\n      onExited={node => {\r\n        removeClasses(node, [...leaveToClasses, ...leaveClasses]);\r\n      }}\r\n    >\r\n      {children}\r\n    </ReactCSSTransition>\r\n  );\r\n}\r\n\r\nfunction Transition({ show, appear, ...rest }: any) {\r\n  const { parent }: { parent: any } = useContext(TransitionContext);\r\n  const isInitialRender = useIsInitialRender();\r\n  const isChild = show === undefined;\r\n\r\n  if (isChild) {\r\n    return (\r\n      <CSSTransition\r\n        appear={parent.appear || !parent.isInitialRender}\r\n        show={parent.show}\r\n        isParent={false}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TransitionContext.Provider\r\n      value={{\r\n        parent: {\r\n          show,\r\n          isInitialRender,\r\n          appear,\r\n        },\r\n      }}\r\n    >\r\n      <CSSTransition appear={appear} show={show} isParent={true} {...rest} />\r\n    </TransitionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Transition;\r\n","import { SectionID } from '../../content/ordering';\r\n\r\nexport type MarkdownLayoutSidebarModuleLinkInfo = {\r\n  id: string;\r\n  section: SectionID;\r\n  title: string;\r\n  url: string;\r\n};\r\n\r\nexport class ModuleLinkInfo {\r\n  public url: string;\r\n\r\n  constructor(\r\n    public id: string,\r\n    public section: string,\r\n    public title: string,\r\n    public description?: string,\r\n    public frequency?: ModuleFrequency,\r\n    public isIncomplete?: boolean,\r\n    public probs?: any,\r\n    public gitAuthorTime?: any\r\n  ) {\r\n    if (this.id === 'using-this-guide') {\r\n      // The \"Using This Guide\" module is complete already, but it contains an <IncompleteModule> tag\r\n      // We want to ignore it and manually mark it as complete\r\n      this.isIncomplete = false;\r\n    }\r\n    this.url = `/${section}/${id}`;\r\n  }\r\n}\r\n\r\nexport type ModuleFrequency = null | 0 | 1 | 2 | 3 | 4;\r\n\r\nexport type TOCHeading = {\r\n  depth: number;\r\n  value: string;\r\n  slug: string;\r\n};\r\n\r\nexport type TableOfContents = {\r\n  cpp: TOCHeading[];\r\n  java: TOCHeading[];\r\n  py: TOCHeading[];\r\n};\r\n\r\nexport class ModuleInfo extends ModuleLinkInfo {\r\n  constructor(\r\n    public id: string,\r\n    public section: string,\r\n    public title: string,\r\n    public body: any,\r\n    public author: string,\r\n    public contributors: string,\r\n    public prerequisites: string[],\r\n    public description: string,\r\n    public frequency: ModuleFrequency,\r\n    public toc: TableOfContents,\r\n    public fileRelativePath: string,\r\n    public gitAuthorTime: any\r\n  ) {\r\n    super(id, section, title);\r\n  }\r\n}\r\n\r\nexport type ModuleProgress =\r\n  | 'Not Started'\r\n  | 'Reading'\r\n  | 'Practicing'\r\n  | 'Complete'\r\n  | 'Skipped'\r\n  | 'Ignored';\r\n\r\nexport const ModuleProgressOptions: ModuleProgress[] = [\r\n  'Not Started',\r\n  'Reading',\r\n  'Practicing',\r\n  'Complete',\r\n  'Skipped',\r\n  'Ignored',\r\n];\r\n"],"names":["replaceClassName","origClass","classToRemove","replace","RegExp","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","TransitionGroupContext","Provider","value","noop","contextType","defaultProps","removeClass","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","length","args","Array","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","TransitionContext","React","parent","show","enterFrom","enterTo","leave","leaveFrom","leaveTo","isParent","enterClasses","filter","s","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","addClasses","addEventListener","e","target","rest","useContext","isInitialRender","useRef","useEffect","useIsInitialRender","ModuleLinkInfo","id","section","title","description","frequency","isIncomplete","probs","gitAuthorTime","url","ModuleInfo","body","author","contributors","prerequisites","toc","fileRelativePath","ModuleProgressOptions"],"sourceRoot":""}