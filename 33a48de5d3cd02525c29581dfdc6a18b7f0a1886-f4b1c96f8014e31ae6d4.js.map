{"version":3,"file":"33a48de5d3cd02525c29581dfdc6a18b7f0a1886-f4b1c96f8014e31ae6d4.js","mappings":"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","sources":["webpack://usaco-guide/./src/components/ButtonGroup.tsx","webpack://usaco-guide/./src/components/ProblemSuggestionModal.tsx","webpack://usaco-guide/./src/hooks/useProblemSuggestionAction.tsx","webpack://usaco-guide/./src/context/ProblemSuggestionModalContext.tsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nexport default function ButtonGroup({\r\n  options,\r\n  value,\r\n  onChange,\r\n  labelMap,\r\n  disabled,\r\n}: {\r\n  options: string[];\r\n  value: string;\r\n  onChange: (string) => void;\r\n  labelMap?: { [key: string]: string };\r\n  disabled?: boolean;\r\n}): JSX.Element {\r\n  const leftButtonClasses = 'rounded-l-md';\r\n  const middleButtonClasses = '-ml-px';\r\n  const rightButtonClasses = '-ml-px rounded-r-md';\r\n  const baseClasses =\r\n    'relative inline-flex items-center px-4 py-2 border text-sm leading-5 font-medium focus:z-10 focus:outline-none focus:border-blue-300 dark:focus:border-blue-600 focus:shadow-outline-blue transition ease-in-out duration-150';\r\n  const activeClasses = 'border-blue-600 bg-blue-600 text-white';\r\n  const inactiveClasses =\r\n    'border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-200 hover:text-gray-500 dark:hover:text-gray-100 active:bg-gray-100 active:text-gray-700';\r\n\r\n  return (\r\n    <span className=\"relative z-0 inline-flex shadow-sm rounded-md\">\r\n      {options.map((option, index) => (\r\n        <button\r\n          type=\"button\"\r\n          className={classNames(baseClasses, {\r\n            [leftButtonClasses]: index === 0,\r\n            [middleButtonClasses]: index !== 0 && index !== options.length - 1,\r\n            [rightButtonClasses]: index === options.length - 1,\r\n            [activeClasses]: option === value,\r\n            [inactiveClasses]: option !== value,\r\n          })}\r\n          disabled={disabled}\r\n          onClick={() => onChange(option)}\r\n          key={option}\r\n        >\r\n          {labelMap ? labelMap[option] : option}\r\n        </button>\r\n      ))}\r\n    </span>\r\n  );\r\n}\r\n","import { Transition } from '@headlessui/react';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { SECTION_LABELS } from '../../content/ordering';\r\nimport { useDarkMode } from '../context/DarkModeContext';\r\nimport { EditorContext } from '../context/EditorContext';\r\nimport MarkdownLayoutContext from '../context/MarkdownLayoutContext';\r\nimport useProblemSuggestionAction from '../hooks/useProblemSuggestionAction';\r\nimport { ModuleInfo } from '../models/module';\r\nimport {\r\n  autoGenerateSolutionMetadata,\r\n  generateProblemUniqueId,\r\n  ProblemMetadata,\r\n  PROBLEM_DIFFICULTY_OPTIONS,\r\n  probSources,\r\n} from '../models/problem';\r\nimport ButtonGroup from './ButtonGroup';\r\n\r\nexport default function ProblemSuggestionModal({\r\n  isOpen,\r\n  onClose,\r\n  listName,\r\n}: {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  listName: string;\r\n}): JSX.Element {\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  const [difficulty, setDifficulty] = React.useState(null);\r\n  const [tags, setTags] = React.useState('');\r\n  const [additionalNotes, setAdditionalNotes] = React.useState('');\r\n  const [source, setSource] = React.useState('');\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [createdIssueLink, setCreatedIssueLink] = React.useState(null);\r\n\r\n  const submitSuggestion = useProblemSuggestionAction();\r\n  const editorActions = useContext(EditorContext);\r\n  const inEditor = editorActions.inEditor;\r\n\r\n  // will be null if in editor\r\n  const markdownLayoutInfo = useContext(\r\n    MarkdownLayoutContext\r\n  )?.markdownLayoutInfo;\r\n\r\n  const darkMode = useDarkMode();\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      setName('');\r\n      setLink('');\r\n      setDifficulty(null);\r\n      setTags('');\r\n      setAdditionalNotes('');\r\n      setLoading(false);\r\n      setCreatedIssueLink(null);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (!difficulty) {\r\n      alert('Please set the problem difficulty.');\r\n      return;\r\n    }\r\n    if (!source) {\r\n      alert('Please set the problem source.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    // is there a better way to do this? this just identifies the table based on the permalink of the first problem of the table.\r\n    const problemTableLink =\r\n      window.location.href.split(/[?#]/)[0] + '#problemlist-' + listName;\r\n\r\n    if (editorActions.inEditor) {\r\n      const tagsArr = tags\r\n        .split(',')\r\n        .map(tag => tag.trim())\r\n        .filter(tag => tag.length > 0);\r\n      let generatedProblemId = '';\r\n      try {\r\n        generatedProblemId = generateProblemUniqueId(source, name, link);\r\n      } catch (e) {\r\n        console.log(e);\r\n        alert(\r\n          'Error generating problem ID from URL. Check console for details.'\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const problemToAdd: ProblemMetadata = {\r\n        uniqueId: generatedProblemId,\r\n        name,\r\n        url: link,\r\n        source,\r\n        difficulty,\r\n        isStarred: false,\r\n        tags: tagsArr,\r\n        solutionMetadata: autoGenerateSolutionMetadata(source, name, link) || {\r\n          kind: 'none',\r\n        },\r\n      };\r\n      editorActions.addProblem(listName, problemToAdd);\r\n      setLoading(false);\r\n      onClose();\r\n      return;\r\n    }\r\n    const moduleName = `${\r\n      SECTION_LABELS[(markdownLayoutInfo as ModuleInfo).section]\r\n    } - ${markdownLayoutInfo.title}`;\r\n\r\n    submitSuggestion({\r\n      name,\r\n      link,\r\n      difficulty,\r\n      tags,\r\n      additionalNotes,\r\n      problemTableLink,\r\n      problemListName: listName,\r\n      moduleName,\r\n      filePath: (markdownLayoutInfo as ModuleInfo).fileRelativePath,\r\n      section: (markdownLayoutInfo as ModuleInfo).section,\r\n      source,\r\n    })\r\n      .then(response => {\r\n        setCreatedIssueLink(response.data);\r\n      })\r\n      .catch(e => {\r\n        alert('Problem Suggestion Error: ' + e.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n  const getLabel = source => {\r\n    const map = {\r\n      'Old Bronze': 'Old USACO Bronze (Before Dec 2015)',\r\n      'Old Silver': 'Old USACO Silver (Before Dec 2015)',\r\n      'Old Gold': 'Old USACO Gold (Before Dec 2015)',\r\n      Report: 'Informes',\r\n      Bronze: 'Recent USACO Bronze (Dec 2015 and Later)',\r\n      Silver: 'Recent USACO Silver (Dec 2015 and Later)',\r\n      Gold: 'Recent USACO Gold (Dec 2015 and Later)',\r\n      Plat: 'USACO Platinum',\r\n      AC: 'AtCoder',\r\n      CC: 'CodeChef',\r\n      CF: 'Codeforces',\r\n      CSA: 'CS Academy',\r\n      FHC: 'Facebook HackerCup',\r\n      HR: 'HackerRank',\r\n      LC: 'LeetCode',\r\n      POI: 'Polish Olympiad in Informatics',\r\n      SOJ: 'Sphere Online Judge',\r\n      TLX: 'tlx.toki.id',\r\n      YS: 'YS (judge.yosupo.jp)',\r\n    };\r\n    if (map[source]) return map[source];\r\n    return source;\r\n  };\r\n  const sourceOptions = [\r\n    ...Object.keys(probSources).map(source => ({\r\n      label: getLabel(source),\r\n      value: source,\r\n    })),\r\n    {\r\n      label: 'Other',\r\n      value: 'other',\r\n    },\r\n  ];\r\n\r\n  const form = (\r\n    <>\r\n      <div>\r\n        <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n          Problem Name\r\n        </label>\r\n        <div className=\"mt-2 relative rounded-md shadow-sm\">\r\n          {/* Remount component to trigger autofocus when opening modal */}\r\n          {isOpen ? (\r\n            <input\r\n              autoFocus\r\n              type=\"text\"\r\n              className=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-900 dark:border-gray-700\"\r\n              placeholder=\"Ex: Steeplechase (Please do NOT include the source)\"\r\n              value={name}\r\n              disabled={loading}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              className=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-900 dark:border-gray-700\"\r\n              placeholder=\"Ex: USACO December 2012 Silver - Steeplechase\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n              disabled={loading}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n          Problem Link\r\n        </label>\r\n        <div className=\"mt-2 relative rounded-md shadow-sm\">\r\n          <input\r\n            type=\"url\"\r\n            className=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-900 dark:border-gray-700\"\r\n            placeholder=\"https://...\"\r\n            value={link}\r\n            onChange={e => setLink(e.target.value)}\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n          Problem Source\r\n        </label>\r\n        <div className=\"mt-2 relative rounded-md shadow-sm\">\r\n          <Select\r\n            options={sourceOptions}\r\n            value={sourceOptions.find(s => s.value == source)}\r\n            onChange={o => setSource(o.value)}\r\n            className={'mt-1 block w-full text-sm tw-forms-disable'}\r\n            isDisabled={loading}\r\n            styles={\r\n              !darkMode\r\n                ? undefined\r\n                : {\r\n                    control: provided => ({\r\n                      ...provided,\r\n                      backgroundColor: '#111827',\r\n                      borderColor: '#374151',\r\n                    }),\r\n                    menuList: provided => ({\r\n                      ...provided,\r\n                      borderColor: '#374151',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '6px',\r\n                    }),\r\n                    menu: provided => ({\r\n                      ...provided,\r\n                      backgroundColor: '#111827',\r\n                    }),\r\n                    indicatorSeparator: provided => ({\r\n                      ...provided,\r\n                      backgroundColor: '#374151',\r\n                    }),\r\n                    indicatorsContainer: provided => ({\r\n                      ...provided,\r\n                      color: '#374151',\r\n                    }),\r\n                    singleValue: provided => ({\r\n                      ...provided,\r\n                      color: 'rgba(255, 255, 255, 0.87)',\r\n                    }),\r\n                    input: provided => ({\r\n                      ...provided,\r\n                      color: 'rgba(255, 255, 255, 0.87)',\r\n                    }),\r\n                    option: (provided, { isFocused, isSelected }) => ({\r\n                      ...provided,\r\n                      ...(isFocused\r\n                        ? {\r\n                            backgroundColor: '#4d94ff',\r\n                          }\r\n                        : isSelected\r\n                        ? { backgroundColor: '#0063e6' }\r\n                        : {}),\r\n                    }),\r\n                  }\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n          Problem Difficulty\r\n        </label>\r\n        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n          Relative to the module\r\n        </p>\r\n        <div className=\"w-full overflow-x-auto mt-2 py-1 px-1 -mx-1\">\r\n          <ButtonGroup\r\n            options={PROBLEM_DIFFICULTY_OPTIONS}\r\n            value={difficulty}\r\n            onChange={x => setDifficulty(x)}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n          {!inEditor && 'Suggested '}Tags (separated with comma and space)\r\n        </label>\r\n        <div className=\"mt-2 relative rounded-md shadow-sm\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-900 dark:border-gray-700\"\r\n            placeholder=\"DP, Dijkstra\"\r\n            value={tags}\r\n            onChange={e => setTags(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      {!inEditor && (\r\n        <div>\r\n          <label className=\"block font-medium text-gray-700 dark:text-gray-200\">\r\n            Additional Notes\r\n          </label>\r\n          <div>\r\n            <p className=\"mb-3 text-sm text-gray-500 dark:text-gray-400\">\r\n              In case there's anything else you want to let us know.\r\n            </p>\r\n            <div className=\"rounded-md shadow-sm\">\r\n              <textarea\r\n                rows={3}\r\n                className=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md transition sm:leading-5 dark:bg-gray-900 dark:border-gray-700\"\r\n                value={additionalNotes}\r\n                onChange={e => setAdditionalNotes(e.target.value)}\r\n                placeholder=\"Optional. Links to solutions or reasons to add the problem would be helpful. Markdown is supported.\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const successMessage = (\r\n    <div className=\"rounded-md bg-green-50 dark:bg-green-800 p-4\">\r\n      <div className=\"flex\">\r\n        <div className=\"flex-shrink-0\">\r\n          <svg\r\n            className=\"h-5 w-5 text-green-400\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className=\"ml-3\">\r\n          <h3 className=\"text-sm leading-5 font-medium text-green-800 dark:text-dark-high-emphasis\">\r\n            Problem Suggestion Submitted!\r\n          </h3>\r\n          <div className=\"mt-2 text-sm leading-5 text-green-700 dark:text-dark-high-emphasis\">\r\n            <p>\r\n              Thanks for helping to improve the USACO Guide. You can track the\r\n              progress of your suggestion here:{' '}\r\n              <a\r\n                href={createdIssueLink}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"underline text-black dark:text-white\"\r\n              >\r\n                {createdIssueLink}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Transition\r\n      show={isOpen}\r\n      className=\"fixed z-30 inset-0 h-full overflow-y-auto\"\r\n    >\r\n      <form\r\n        className=\"flex items-end justify-center min-h-full pt-4 px-4 pb-12 text-center sm:block\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Transition.Child\r\n          className=\"fixed inset-0 transition-opacity\"\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"absolute inset-0 bg-gray-500 dark:bg-gray-900 opacity-75\" />\r\n        </Transition.Child>\r\n        <span\r\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          &#8203;\r\n        </span>\r\n\r\n        <Transition.Child\r\n          className=\"w-full inline-block align-bottom rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-3xl sm:w-full\"\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n          leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-labelledby=\"modal-headline\"\r\n        >\r\n          <div className=\"bg-white dark:bg-dark-surface px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onClose()}\r\n                className=\"bg-white dark:bg-dark-surface rounded-md text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 focus:outline-none\"\r\n              >\r\n                <span className=\"sr-only\">Close</span>\r\n                {/* Heroicon name: x */}\r\n                <svg\r\n                  className=\"h-6 w-6\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            <h3\r\n              className=\"text-lg leading-6 font-medium text-gray-900 dark:text-gray-100\"\r\n              id=\"modal-headline\"\r\n            >\r\n              {inEditor ? 'Add a Problem' : 'Suggest a Problem'}\r\n            </h3>\r\n            {inEditor ? (\r\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                You're in the editor, so the problem will be automatically added\r\n                to problems.json.\r\n              </p>\r\n            ) : (\r\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                Help us improve the USACO Guide by suggesting a problem to add!\r\n                <br />\r\n                This will be submitted as a public{' '}\r\n                <a\r\n                  href=\"https://github.com/Visual-Computing-1/visual-site/pulls\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"text-blue-600 dark:text-blue-300 underline\"\r\n                >\r\n                  Github pull request\r\n                </a>\r\n                .\r\n              </p>\r\n            )}\r\n            <div className=\"mt-6 space-y-6\">\r\n              {createdIssueLink ? successMessage : form}\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gray-50 dark:bg-gray-900 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            {createdIssueLink ? (\r\n              <span className=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => onClose()}\r\n                  className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-blue-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n                >\r\n                  Done\r\n                </button>\r\n              </span>\r\n            ) : (\r\n              <>\r\n                <span className=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={\r\n                      'inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 text-base leading-6 font-medium text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5 ' +\r\n                      (loading ? 'bg-blue-400' : 'bg-blue-600')\r\n                    }\r\n                    disabled={loading}\r\n                  >\r\n                    {inEditor\r\n                      ? 'Add Problem'\r\n                      : loading\r\n                      ? 'Submitting...'\r\n                      : 'Submit Suggestion'}\r\n                  </button>\r\n                </span>\r\n                <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={\r\n                      'inline-flex justify-center w-full rounded-md border border-gray-300 dark:border-gray-600 px-4 py-2 dark:bg-gray-800 text-base leading-6 font-medium text-gray-700 dark:text-gray-200 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5 ' +\r\n                      (loading ? 'bg-gray-100' : 'bg-white')\r\n                    }\r\n                    onClick={() => onClose()}\r\n                    disabled={loading}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Transition.Child>\r\n      </form>\r\n    </Transition>\r\n  );\r\n}\r\n","import { getFunctions, httpsCallable } from 'firebase/functions';\r\nimport { useCallback } from 'react';\r\nimport { useFirebaseApp } from './useFirebase';\r\n\r\nexport default function useProblemSuggestionAction() {\r\n  const firebaseApp = useFirebaseApp();\r\n\r\n  return useCallback(\r\n    async ({\r\n      name,\r\n      link,\r\n      difficulty,\r\n      tags,\r\n      additionalNotes,\r\n      problemTableLink,\r\n      moduleName,\r\n      section,\r\n      problemListName,\r\n      source,\r\n      filePath,\r\n    }) => {\r\n      if (!source) {\r\n        throw new Error(\r\n          \"Please select a source (You can select 'other' if you can't find the correct source)\"\r\n        );\r\n      }\r\n      if (!difficulty) {\r\n        throw new Error('Please select a difficulty');\r\n      }\r\n      if (!firebaseApp) {\r\n        throw new Error('Too fast! Please wait ten seconds and try again.');\r\n      }\r\n      const submitProblemSuggestion = httpsCallable(\r\n        getFunctions(firebaseApp),\r\n        'submitProblemSuggestion'\r\n      );\r\n      return submitProblemSuggestion({\r\n        name,\r\n        link,\r\n        difficulty,\r\n        tags,\r\n        additionalNotes,\r\n        problemTableLink,\r\n        moduleName,\r\n        section,\r\n        problemListName,\r\n        source,\r\n        filePath,\r\n      });\r\n    },\r\n    [firebaseApp]\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { createContext, useContext, useState } from 'react';\r\nimport ProblemSuggestionModal from '../components/ProblemSuggestionModal';\r\nimport { EditorContext } from './EditorContext';\r\nimport UserDataContext from './UserDataContext/UserDataContext';\r\n\r\nconst ProblemSuggestionModalContext = createContext<{\r\n  openProblemSuggestionModal: (listName: string) => void;\r\n}>({\r\n  openProblemSuggestionModal: (listName: string) => {\r\n    // Do Nothing\r\n  },\r\n});\r\n\r\nexport default ProblemSuggestionModalContext;\r\n\r\nexport const ProblemSuggestionModalProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [listName, setListName] = useState<string>(null);\r\n  const { firebaseUser } = useContext(UserDataContext);\r\n  const { inEditor } = useContext(EditorContext);\r\n  const openProblemSuggestionModal = (listName: string) => {\r\n    if (!firebaseUser && !inEditor) {\r\n      alert('You need to be signed in to suggest problems!');\r\n      return;\r\n    }\r\n    setListName(listName);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen) document.body.classList.add('overflow-hidden');\r\n    else document.body.classList.remove('overflow-hidden');\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <ProblemSuggestionModalContext.Provider\r\n      value={{\r\n        openProblemSuggestionModal,\r\n      }}\r\n    >\r\n      {children}\r\n\r\n      <ProblemSuggestionModal\r\n        listName={listName}\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n      />\r\n    </ProblemSuggestionModalContext.Provider>\r\n  );\r\n};\r\n"],"names":["ButtonGroup","options","value","onChange","labelMap","disabled","className","map","option","index","type","classNames","length","onClick","key","ProblemSuggestionModal","firebaseApp","isOpen","onClose","listName","React","name","setName","link","setLink","difficulty","setDifficulty","tags","setTags","additionalNotes","setAdditionalNotes","source","setSource","loading","setLoading","createdIssueLink","setCreatedIssueLink","submitSuggestion","useFirebaseApp","useCallback","problemTableLink","moduleName","section","problemListName","filePath","Error","submitProblemSuggestion","httpsCallable","getFunctions","editorActions","useContext","EditorContext","inEditor","markdownLayoutInfo","MarkdownLayoutContext","darkMode","useDarkMode","getLabel","Report","Bronze","Silver","Gold","Plat","AC","CC","CF","CSA","FHC","HR","LC","POI","SOJ","TLX","YS","sourceOptions","Object","keys","probSources","label","form","autoFocus","placeholder","e","target","required","find","s","o","isDisabled","styles","control","provided","backgroundColor","borderColor","menuList","borderWidth","borderRadius","menu","indicatorSeparator","indicatorsContainer","color","singleValue","input","isFocused","isSelected","undefined","PROBLEM_DIFFICULTY_OPTIONS","x","rows","successMessage","viewBox","fill","fillRule","d","clipRule","href","rel","show","onSubmit","event","preventDefault","window","location","split","tagsArr","tag","trim","filter","generatedProblemId","generateProblemUniqueId","console","log","alert","problemToAdd","uniqueId","url","isStarred","solutionMetadata","autoGenerateSolutionMetadata","kind","addProblem","SECTION_LABELS","title","fileRelativePath","then","response","data","catch","message","finally","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","role","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","id","ProblemSuggestionModalContext","createContext","openProblemSuggestionModal","ProblemSuggestionModalProvider","children","useState","setIsOpen","setListName","firebaseUser","UserDataContext","document","body","classList","add","remove","Provider"],"sourceRoot":""}