{"version":3,"file":"d0a57e9f8420a1847a76f8f21c3d32ff6e0bdd1f-d854288769a71e630939.js","mappings":"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","sources":["webpack://usaco-guide/./node_modules/prism-react-renderer/themes/vsDark/index.js","webpack://usaco-guide/./src/components/markdown/CodeBlock/SyntaxHighlighting/Highlight.js","webpack://usaco-guide/./src/components/markdown/CodeBlock/SyntaxHighlighting/prism.js","webpack://usaco-guide/./src/components/markdown/CodeBlock/CodeBlock.tsx","webpack://usaco-guide/./src/components/markdown/Spoiler.tsx"],"sourcesContent":["// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\nexport default theme;","/* eslint-disable */\r\n\r\n// taken from https://github.com/FormidableLabs/prism-react-renderer\r\n// really dumb issue: when importing from node_modules, gatsby/webpack doesn't tree-shake properly...\r\n\r\nimport { Component } from 'react';\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true,\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends =\r\n    Object.assign ||\r\n    function (target) {\r\n      for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n\r\n      return target;\r\n    };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\r\n\r\nvar normalizeEmptyLines = function (line) {\r\n  if (line.length === 0) {\r\n    line.push({\r\n      types: ['plain'],\r\n      content: '',\r\n      empty: true,\r\n    });\r\n  } else if (line.length === 1 && line[0].content === '') {\r\n    line[0].empty = true;\r\n  }\r\n};\r\n\r\nvar appendTypes = function (types, add) {\r\n  var typesSize = types.length;\r\n\r\n  if (typesSize > 0 && types[typesSize - 1] === add) {\r\n    return types;\r\n  }\r\n\r\n  return types.concat(add);\r\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\r\n// strings into tokens as well. Tokens can become recursive in some cases,\r\n// which means that their types are concatenated. Plain-string tokens however\r\n// are always of type \"plain\".\r\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\r\n// how nested Prism's tokens can become\r\n\r\nexport var normalizeTokens = function (tokens) {\r\n  var typeArrStack = [[]];\r\n  var tokenArrStack = [tokens];\r\n  var tokenArrIndexStack = [0];\r\n  var tokenArrSizeStack = [tokens.length];\r\n  var i = 0;\r\n  var stackIndex = 0;\r\n  var currentLine = [];\r\n  var acc = [currentLine];\r\n\r\n  while (stackIndex > -1) {\r\n    while (\r\n      (i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]\r\n    ) {\r\n      var content = void 0;\r\n      var types = typeArrStack[stackIndex];\r\n      var tokenArr = tokenArrStack[stackIndex];\r\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\r\n\r\n      if (typeof token === 'string') {\r\n        types = stackIndex > 0 ? types : ['plain'];\r\n        content = token;\r\n      } else {\r\n        types = appendTypes(types, token.type);\r\n\r\n        if (token.alias) {\r\n          types = appendTypes(types, token.alias);\r\n        }\r\n\r\n        content = token.content;\r\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\r\n\r\n      if (typeof content !== 'string') {\r\n        stackIndex++;\r\n        typeArrStack.push(types);\r\n        tokenArrStack.push(content);\r\n        tokenArrIndexStack.push(0);\r\n        tokenArrSizeStack.push(content.length);\r\n        continue;\r\n      } // Split by newlines\r\n\r\n      var splitByNewlines = content.split(newlineRe);\r\n      var newlineCount = splitByNewlines.length;\r\n      currentLine.push({\r\n        types: types,\r\n        content: splitByNewlines[0],\r\n      }); // Create a new line for each string on a new line\r\n\r\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\r\n        normalizeEmptyLines(currentLine);\r\n        acc.push((currentLine = []));\r\n        currentLine.push({\r\n          types: types,\r\n          content: splitByNewlines[i$1],\r\n        });\r\n      }\r\n    } // Decreate the stack depth\r\n\r\n    stackIndex--;\r\n    typeArrStack.pop();\r\n    tokenArrStack.pop();\r\n    tokenArrIndexStack.pop();\r\n    tokenArrSizeStack.pop();\r\n  }\r\n\r\n  normalizeEmptyLines(currentLine);\r\n  return acc;\r\n};\r\n\r\nvar themeToDict = function (theme, language) {\r\n  var plain = theme.plain; // $FlowFixMe\r\n\r\n  var base = Object.create(null);\r\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\r\n    var languages = themeEntry.languages;\r\n    var style = themeEntry.style;\r\n\r\n    if (languages && !languages.includes(language)) {\r\n      return acc;\r\n    }\r\n\r\n    themeEntry.types.forEach(function (type) {\r\n      // $FlowFixMe\r\n      var accStyle = _extends({}, acc[type], style);\r\n\r\n      acc[type] = accStyle;\r\n    });\r\n    return acc;\r\n  }, base); // $FlowFixMe\r\n\r\n  themeDict.root = plain; // $FlowFixMe\r\n\r\n  themeDict.plain = _extends({}, plain, {\r\n    backgroundColor: null,\r\n  });\r\n  return themeDict;\r\n};\r\n\r\nfunction objectWithoutProperties(obj, exclude) {\r\n  var target = {};\r\n\r\n  for (var k in obj)\r\n    if (\r\n      Object.prototype.hasOwnProperty.call(obj, k) &&\r\n      exclude.indexOf(k) === -1\r\n    )\r\n      target[k] = obj[k];\r\n\r\n  return target;\r\n}\r\n\r\nvar Highlight =\r\n  /*@__PURE__*/\r\n  (function (Component) {\r\n    function Highlight() {\r\n      var this$1 = this;\r\n      var args = [],\r\n        len = arguments.length;\r\n\r\n      while (len--) args[len] = arguments[len];\r\n\r\n      Component.apply(this, args);\r\n\r\n      _defineProperty(this, 'getThemeDict', function (props) {\r\n        if (\r\n          this$1.themeDict !== undefined &&\r\n          props.theme === this$1.prevTheme &&\r\n          props.language === this$1.prevLanguage\r\n        ) {\r\n          return this$1.themeDict;\r\n        }\r\n\r\n        this$1.prevTheme = props.theme;\r\n        this$1.prevLanguage = props.language;\r\n        var themeDict = props.theme\r\n          ? themeToDict(props.theme, props.language)\r\n          : undefined;\r\n        return (this$1.themeDict = themeDict);\r\n      });\r\n\r\n      _defineProperty(this, 'getLineProps', function (ref) {\r\n        var key = ref.key;\r\n        var className = ref.className;\r\n        var style = ref.style;\r\n        var rest$1 = objectWithoutProperties(ref, [\r\n          'key',\r\n          'className',\r\n          'style',\r\n          'line',\r\n        ]);\r\n        var rest = rest$1;\r\n\r\n        var output = _extends({}, rest, {\r\n          className: 'token-line',\r\n          style: undefined,\r\n          key: undefined,\r\n        });\r\n\r\n        var themeDict = this$1.getThemeDict(this$1.props);\r\n\r\n        if (themeDict !== undefined) {\r\n          output.style = themeDict.plain;\r\n        }\r\n\r\n        if (style !== undefined) {\r\n          output.style =\r\n            output.style !== undefined\r\n              ? _extends({}, output.style, style)\r\n              : style;\r\n        }\r\n\r\n        if (key !== undefined) {\r\n          output.key = key;\r\n        }\r\n\r\n        if (className) {\r\n          output.className += ' ' + className;\r\n        }\r\n\r\n        return output;\r\n      });\r\n\r\n      _defineProperty(this, 'getStyleForToken', function (ref) {\r\n        var types = ref.types;\r\n        var empty = ref.empty;\r\n        var typesSize = types.length;\r\n        var themeDict = this$1.getThemeDict(this$1.props);\r\n\r\n        if (themeDict === undefined) {\r\n          return undefined;\r\n        } else if (typesSize === 1 && types[0] === 'plain') {\r\n          return empty\r\n            ? {\r\n                display: 'inline-block',\r\n              }\r\n            : undefined;\r\n        } else if (typesSize === 1 && !empty) {\r\n          return themeDict[types[0]];\r\n        }\r\n\r\n        var baseStyle = empty\r\n          ? {\r\n              display: 'inline-block',\r\n            }\r\n          : {}; // $FlowFixMe\r\n\r\n        var typeStyles = types.map(function (type) {\r\n          return themeDict[type];\r\n        });\r\n        return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\r\n      });\r\n\r\n      _defineProperty(this, 'getTokenProps', function (ref) {\r\n        var key = ref.key;\r\n        var className = ref.className;\r\n        var style = ref.style;\r\n        var token = ref.token;\r\n        var rest$1 = objectWithoutProperties(ref, [\r\n          'key',\r\n          'className',\r\n          'style',\r\n          'token',\r\n        ]);\r\n        var rest = rest$1;\r\n\r\n        var output = _extends({}, rest, {\r\n          className: 'token ' + token.types.join(' '),\r\n          children: token.content,\r\n          style: this$1.getStyleForToken(token),\r\n          key: undefined,\r\n        });\r\n\r\n        if (style !== undefined) {\r\n          output.style =\r\n            output.style !== undefined\r\n              ? _extends({}, output.style, style)\r\n              : style;\r\n        }\r\n\r\n        if (key !== undefined) {\r\n          output.key = key;\r\n        }\r\n\r\n        if (className) {\r\n          output.className += ' ' + className;\r\n        }\r\n\r\n        return output;\r\n      });\r\n    }\r\n\r\n    if (Component) Highlight.__proto__ = Component;\r\n    Highlight.prototype = Object.create(Component && Component.prototype);\r\n    Highlight.prototype.constructor = Highlight;\r\n\r\n    Highlight.prototype.render = function render() {\r\n      var ref = this.props;\r\n      var Prism = ref.Prism;\r\n      var language = ref.language;\r\n      var code = ref.code;\r\n      var children = ref.children;\r\n      var themeDict = this.getThemeDict(this.props);\r\n      var grammar = Prism.languages[language];\r\n      var mixedTokens =\r\n        grammar !== undefined\r\n          ? Prism.tokenize(code, grammar, language)\r\n          : [code];\r\n      var tokens = normalizeTokens(mixedTokens);\r\n      return children({\r\n        tokens: tokens,\r\n        className: 'prism-code language-' + language,\r\n        style: themeDict !== undefined ? themeDict.root : {},\r\n        getLineProps: this.getLineProps,\r\n        getTokenProps: this.getTokenProps,\r\n      });\r\n    };\r\n\r\n    return Highlight;\r\n  })(Component);\r\n\r\nexport default Highlight;\r\n// export { defaultProps };\r\n","/* eslint-disable */\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n\r\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\r\n\r\n/**\r\n * me (thecodingwizard):\r\n * - added C++, Java, Python syntax highlighting manually\r\n * - oops this is really dumb but I couldn't get tree-shaking to work properly when importing from node_modules >:-(\r\n */\r\n\r\nvar Prism = (function () {\r\n  // Private helper vars\r\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\r\n  var uniqueId = 0;\r\n\r\n  var _ = {\r\n    util: {\r\n      encode: function (tokens) {\r\n        if (tokens instanceof Token) {\r\n          return new Token(\r\n            tokens.type,\r\n            _.util.encode(tokens.content),\r\n            tokens.alias\r\n          );\r\n        } else if (_.util.type(tokens) === 'Array') {\r\n          return tokens.map(_.util.encode);\r\n        } else {\r\n          return tokens\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/\\u00a0/g, ' ');\r\n        }\r\n      },\r\n\r\n      type: function (o) {\r\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n      },\r\n\r\n      objId: function (obj) {\r\n        if (!obj['__id']) {\r\n          Object.defineProperty(obj, '__id', { value: ++uniqueId });\r\n        }\r\n        return obj['__id'];\r\n      },\r\n\r\n      // Deep clone a language definition (e.g. to extend it)\r\n      clone: function (o, visited) {\r\n        var type = _.util.type(o);\r\n        visited = visited || {};\r\n\r\n        switch (type) {\r\n          case 'Object':\r\n            if (visited[_.util.objId(o)]) {\r\n              return visited[_.util.objId(o)];\r\n            }\r\n            var clone = {};\r\n            visited[_.util.objId(o)] = clone;\r\n\r\n            for (var key in o) {\r\n              if (o.hasOwnProperty(key)) {\r\n                clone[key] = _.util.clone(o[key], visited);\r\n              }\r\n            }\r\n\r\n            return clone;\r\n\r\n          case 'Array':\r\n            if (visited[_.util.objId(o)]) {\r\n              return visited[_.util.objId(o)];\r\n            }\r\n            var clone = [];\r\n            visited[_.util.objId(o)] = clone;\r\n\r\n            o.forEach(function (v, i) {\r\n              clone[i] = _.util.clone(v, visited);\r\n            });\r\n\r\n            return clone;\r\n        }\r\n\r\n        return o;\r\n      },\r\n    },\r\n\r\n    languages: {\r\n      extend: function (id, redef) {\r\n        var lang = _.util.clone(_.languages[id]);\r\n\r\n        for (var key in redef) {\r\n          lang[key] = redef[key];\r\n        }\r\n\r\n        return lang;\r\n      },\r\n\r\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\r\n      insertBefore: function (inside, before, insert, root) {\r\n        root = root || _.languages;\r\n        var grammar = root[inside];\r\n\r\n        if (arguments.length == 2) {\r\n          insert = arguments[1];\r\n\r\n          for (var newToken in insert) {\r\n            if (insert.hasOwnProperty(newToken)) {\r\n              grammar[newToken] = insert[newToken];\r\n            }\r\n          }\r\n\r\n          return grammar;\r\n        }\r\n\r\n        var ret = {};\r\n\r\n        for (var token in grammar) {\r\n          if (grammar.hasOwnProperty(token)) {\r\n            if (token == before) {\r\n              for (var newToken in insert) {\r\n                if (insert.hasOwnProperty(newToken)) {\r\n                  ret[newToken] = insert[newToken];\r\n                }\r\n              }\r\n            }\r\n\r\n            ret[token] = grammar[token];\r\n          }\r\n        }\r\n\r\n        // Update references in other language definitions\r\n        _.languages.DFS(_.languages, function (key, value) {\r\n          if (value === root[inside] && key != inside) {\r\n            this[key] = ret;\r\n          }\r\n        });\r\n\r\n        return (root[inside] = ret);\r\n      },\r\n\r\n      // Traverse a language definition with Depth First Search\r\n      DFS: function (o, callback, type, visited) {\r\n        visited = visited || {};\r\n        for (var i in o) {\r\n          if (o.hasOwnProperty(i)) {\r\n            callback.call(o, i, o[i], type || i);\r\n\r\n            if (\r\n              _.util.type(o[i]) === 'Object' &&\r\n              !visited[_.util.objId(o[i])]\r\n            ) {\r\n              visited[_.util.objId(o[i])] = true;\r\n              _.languages.DFS(o[i], callback, null, visited);\r\n            } else if (\r\n              _.util.type(o[i]) === 'Array' &&\r\n              !visited[_.util.objId(o[i])]\r\n            ) {\r\n              visited[_.util.objId(o[i])] = true;\r\n              _.languages.DFS(o[i], callback, i, visited);\r\n            }\r\n          }\r\n        }\r\n      },\r\n    },\r\n\r\n    plugins: {},\r\n\r\n    highlight: function (text, grammar, language) {\r\n      var env = {\r\n        code: text,\r\n        grammar: grammar,\r\n        language: language,\r\n      };\r\n      env.tokens = _.tokenize(env.code, env.grammar);\r\n      return Token.stringify(_.util.encode(env.tokens), env.language);\r\n    },\r\n\r\n    matchGrammar: function (\r\n      text,\r\n      strarr,\r\n      grammar,\r\n      index,\r\n      startPos,\r\n      oneshot,\r\n      target\r\n    ) {\r\n      var Token = _.Token;\r\n\r\n      for (var token in grammar) {\r\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n          continue;\r\n        }\r\n\r\n        if (token == target) {\r\n          return;\r\n        }\r\n\r\n        var patterns = grammar[token];\r\n        patterns = _.util.type(patterns) === 'Array' ? patterns : [patterns];\r\n\r\n        for (var j = 0; j < patterns.length; ++j) {\r\n          var pattern = patterns[j],\r\n            inside = pattern.inside,\r\n            lookbehind = !!pattern.lookbehind,\r\n            greedy = !!pattern.greedy,\r\n            lookbehindLength = 0,\r\n            alias = pattern.alias;\r\n\r\n          if (greedy && !pattern.pattern.global) {\r\n            // Without the global flag, lastIndex won't work\r\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\r\n            pattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\r\n          }\r\n\r\n          pattern = pattern.pattern || pattern;\r\n\r\n          // Don’t cache length as it changes during the loop\r\n          for (\r\n            var i = index, pos = startPos;\r\n            i < strarr.length;\r\n            pos += strarr[i].length, ++i\r\n          ) {\r\n            var str = strarr[i];\r\n\r\n            if (strarr.length > text.length) {\r\n              // Something went terribly wrong, ABORT, ABORT!\r\n              return;\r\n            }\r\n\r\n            if (str instanceof Token) {\r\n              continue;\r\n            }\r\n\r\n            if (greedy && i != strarr.length - 1) {\r\n              pattern.lastIndex = pos;\r\n              var match = pattern.exec(text);\r\n              if (!match) {\r\n                break;\r\n              }\r\n\r\n              var from = match.index + (lookbehind ? match[1].length : 0),\r\n                to = match.index + match[0].length,\r\n                k = i,\r\n                p = pos;\r\n\r\n              for (\r\n                var len = strarr.length;\r\n                k < len &&\r\n                (p < to || (!strarr[k].type && !strarr[k - 1].greedy));\r\n                ++k\r\n              ) {\r\n                p += strarr[k].length;\r\n                // Move the index i to the element in strarr that is closest to from\r\n                if (from >= p) {\r\n                  ++i;\r\n                  pos = p;\r\n                }\r\n              }\r\n\r\n              // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\r\n              if (strarr[i] instanceof Token) {\r\n                continue;\r\n              }\r\n\r\n              // Number of tokens to delete and replace with the new match\r\n              delNum = k - i;\r\n              str = text.slice(pos, p);\r\n              match.index -= pos;\r\n            } else {\r\n              pattern.lastIndex = 0;\r\n\r\n              var match = pattern.exec(str),\r\n                delNum = 1;\r\n            }\r\n\r\n            if (!match) {\r\n              if (oneshot) {\r\n                break;\r\n              }\r\n\r\n              continue;\r\n            }\r\n\r\n            if (lookbehind) {\r\n              lookbehindLength = match[1] ? match[1].length : 0;\r\n            }\r\n\r\n            var from = match.index + lookbehindLength,\r\n              match = match[0].slice(lookbehindLength),\r\n              to = from + match.length,\r\n              before = str.slice(0, from),\r\n              after = str.slice(to);\r\n\r\n            var args = [i, delNum];\r\n\r\n            if (before) {\r\n              ++i;\r\n              pos += before.length;\r\n              args.push(before);\r\n            }\r\n\r\n            var wrapped = new Token(\r\n              token,\r\n              inside ? _.tokenize(match, inside) : match,\r\n              alias,\r\n              match,\r\n              greedy\r\n            );\r\n\r\n            args.push(wrapped);\r\n\r\n            if (after) {\r\n              args.push(after);\r\n            }\r\n\r\n            Array.prototype.splice.apply(strarr, args);\r\n\r\n            if (delNum != 1)\r\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\r\n\r\n            if (oneshot) break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    hooks: {\r\n      add: function () {},\r\n    },\r\n\r\n    tokenize: function (text, grammar, language) {\r\n      var strarr = [text];\r\n\r\n      var rest = grammar.rest;\r\n\r\n      if (rest) {\r\n        for (var token in rest) {\r\n          grammar[token] = rest[token];\r\n        }\r\n\r\n        delete grammar.rest;\r\n      }\r\n\r\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\r\n\r\n      return strarr;\r\n    },\r\n  };\r\n\r\n  var Token = (_.Token = function (type, content, alias, matchedStr, greedy) {\r\n    this.type = type;\r\n    this.content = content;\r\n    this.alias = alias;\r\n    // Copy of the full string this token was created from\r\n    this.length = (matchedStr || '').length | 0;\r\n    this.greedy = !!greedy;\r\n  });\r\n\r\n  Token.stringify = function (o, language, parent) {\r\n    if (typeof o == 'string') {\r\n      return o;\r\n    }\r\n\r\n    if (_.util.type(o) === 'Array') {\r\n      return o\r\n        .map(function (element) {\r\n          return Token.stringify(element, language, o);\r\n        })\r\n        .join('');\r\n    }\r\n\r\n    var env = {\r\n      type: o.type,\r\n      content: Token.stringify(o.content, language, parent),\r\n      tag: 'span',\r\n      classes: ['token', o.type],\r\n      attributes: {},\r\n      language: language,\r\n      parent: parent,\r\n    };\r\n\r\n    if (o.alias) {\r\n      var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n      Array.prototype.push.apply(env.classes, aliases);\r\n    }\r\n\r\n    var attributes = Object.keys(env.attributes)\r\n      .map(function (name) {\r\n        return (\r\n          name +\r\n          '=\"' +\r\n          (env.attributes[name] || '').replace(/\"/g, '&quot;') +\r\n          '\"'\r\n        );\r\n      })\r\n      .join(' ');\r\n\r\n    return (\r\n      '<' +\r\n      env.tag +\r\n      ' class=\"' +\r\n      env.classes.join(' ') +\r\n      '\"' +\r\n      (attributes ? ' ' + attributes : '') +\r\n      '>' +\r\n      env.content +\r\n      '</' +\r\n      env.tag +\r\n      '>'\r\n    );\r\n  };\r\n\r\n  return _;\r\n})();\r\n\r\n/* \"prismjs/components/prism-clike\" */\r\nPrism.languages.clike = {\r\n  comment: [\r\n    {\r\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      lookbehind: true,\r\n    },\r\n    {\r\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n    },\r\n  ],\r\n  string: {\r\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    greedy: true,\r\n  },\r\n  'class-name': {\r\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\r\n    lookbehind: true,\r\n    inside: {\r\n      punctuation: /[.\\\\]/,\r\n    },\r\n  },\r\n  keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n  boolean: /\\b(?:true|false)\\b/,\r\n  function: /\\w+(?=\\()/,\r\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\r\n  punctuation: /[{}[\\];(),.:]/,\r\n};\r\n\r\n/* \"prismjs/components/prism-c\" */\r\n\r\nPrism.languages.c = Prism.languages.extend('clike', {\r\n  'class-name': {\r\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\r\n    lookbehind: true,\r\n  },\r\n  keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\r\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\r\n  number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i,\r\n});\r\nPrism.languages.insertBefore('c', 'string', {\r\n  macro: {\r\n    // allow for multiline macro definitions\r\n    // spaces after the # character compile fine with gcc\r\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n    lookbehind: true,\r\n    alias: 'property',\r\n    inside: {\r\n      // highlight the path of the include statement as a string\r\n      string: {\r\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\r\n        lookbehind: true,\r\n      },\r\n      // highlight macro directives as keywords\r\n      directive: {\r\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\r\n        lookbehind: true,\r\n        alias: 'keyword',\r\n      },\r\n    },\r\n  },\r\n  // highlight predefined macros as constants\r\n  constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/,\r\n});\r\ndelete Prism.languages.c['boolean'];\r\n/* \"prismjs/components/prism-cpp\" */\r\n\r\nPrism.languages.cpp = Prism.languages.extend('c', {\r\n  'class-name': {\r\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\r\n    lookbehind: true,\r\n  },\r\n  keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\r\n  number: {\r\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\r\n    greedy: true,\r\n  },\r\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\r\n  boolean: /\\b(?:true|false)\\b/,\r\n});\r\nPrism.languages.insertBefore('cpp', 'string', {\r\n  'raw-string': {\r\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\r\n    alias: 'string',\r\n    greedy: true,\r\n  },\r\n});\r\n\r\n/* \"prismjs/components/prism-java\" */\r\n\r\n(function (Prism) {\r\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\r\n\r\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\r\n  Prism.languages.java = Prism.languages.extend('clike', {\r\n    'class-name': [\r\n      className, // variables and parameters\r\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n      /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/,\r\n    ],\r\n    keyword: keywords,\r\n    function: [\r\n      Prism.languages.clike.function,\r\n      {\r\n        pattern: /(\\:\\:)[a-z_]\\w*/,\r\n        lookbehind: true,\r\n      },\r\n    ],\r\n    number: /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\r\n    operator: {\r\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\r\n      lookbehind: true,\r\n    },\r\n  });\r\n  Prism.languages.insertBefore('java', 'class-name', {\r\n    annotation: {\r\n      alias: 'punctuation',\r\n      pattern: /(^|[^.])@\\w+/,\r\n      lookbehind: true,\r\n    },\r\n    namespace: {\r\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /\\./,\r\n      },\r\n    },\r\n    generics: {\r\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\r\n      inside: {\r\n        'class-name': className,\r\n        keyword: keywords,\r\n        punctuation: /[<>(),.:]/,\r\n        operator: /[?&|]/,\r\n      },\r\n    },\r\n  });\r\n})(Prism);\r\n/* \"prismjs/components/prism-python\" */\r\n\r\nPrism.languages.python = {\r\n  comment: {\r\n    pattern: /(^|[^\\\\])#.*/,\r\n    lookbehind: true,\r\n  },\r\n  'string-interpolation': {\r\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\r\n    greedy: true,\r\n    inside: {\r\n      interpolation: {\r\n        // \"{\" <expression> <Optional \"!s\", \"!r\", or \"!a\"> <Optional \":\" format specifier> \"}\"\r\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'format-spec': {\r\n            pattern: /(:)[^:(){}]+(?=}$)/,\r\n            lookbehind: true,\r\n          },\r\n          'conversion-option': {\r\n            pattern: /![sra](?=[:}]$)/,\r\n            alias: 'punctuation',\r\n          },\r\n          rest: null,\r\n        },\r\n      },\r\n      string: /[\\s\\S]+/,\r\n    },\r\n  },\r\n  'triple-quoted-string': {\r\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\r\n    greedy: true,\r\n    alias: 'string',\r\n  },\r\n  string: {\r\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\r\n    greedy: true,\r\n  },\r\n  function: {\r\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\r\n    lookbehind: true,\r\n  },\r\n  'class-name': {\r\n    pattern: /(\\bclass\\s+)\\w+/i,\r\n    lookbehind: true,\r\n  },\r\n  decorator: {\r\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\r\n    lookbehind: true,\r\n    alias: ['annotation', 'punctuation'],\r\n    inside: {\r\n      punctuation: /\\./,\r\n    },\r\n  },\r\n  keyword: /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\r\n  builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\r\n  boolean: /\\b(?:True|False|None)\\b/,\r\n  number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\r\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n  punctuation: /[{}[\\];(),.:]/,\r\n};\r\nPrism.languages.python['string-interpolation'].inside[\r\n  'interpolation'\r\n].inside.rest = Prism.languages.python;\r\nPrism.languages.py = Prism.languages.python;\r\n\r\nexport default Prism;\r\n","// todo: switch to https://github.com/react-syntax-highlighter/react-syntax-highlighter\r\n\r\n// File taken from https://github.com/FormidableLabs/prism-react-renderer/issues/54\r\n\r\nimport vsDark from 'prism-react-renderer/themes/vsDark';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SpoilerContext } from '../Spoiler';\r\nimport Highlight from './SyntaxHighlighting/Highlight';\r\nimport Prism from './SyntaxHighlighting/prism';\r\n\r\nconst Line = styled.div`\r\n  display: table-row;\r\n`;\r\n\r\nconst LineNo = styled.span`\r\n  display: table-cell;\r\n  white-space: nowrap;\r\n  text-align: right;\r\n  user-select: none;\r\n  opacity: 0.5;\r\n  &::before {\r\n    content: attr(data-line-number);\r\n  }\r\n`;\r\n\r\nconst LineSnip = styled.span`\r\n  display: table-cell;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  width: 1em;\r\n  padding-right: 0.5em;\r\n`;\r\n\r\nconst CodeSnipButtonIcon = styled.svg`\r\n  color: rgba(156, 220, 254, 0.3);\r\n  &:hover {\r\n    color: rgba(156, 220, 254, 0.7);\r\n  }\r\n`;\r\n\r\nconst LineContent = styled.span`\r\n  display: table-cell;\r\n`;\r\n\r\nconst CodeSnippetLineContent = styled(LineContent)`\r\n  color: #00bb00a0; // any better color?\r\n  &:hover > span {\r\n    color: #00bb00c0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CopyButton = styled.button`\r\n  padding: 1.6px 8px 1.6px 8px;\r\n  color: black;\r\n  background-color: hsla(240, 20%, 88%, 1);\r\n  position: absolute;\r\n  top: 0px;\r\n  right: calc(var(--right-offset) + var(--left-offset));\r\n  z-index: 99;\r\n  border-radius: 0px 0px 4px 4px;\r\n  font-size: 12px;\r\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\r\n    'Liberation Mono', 'Courier New', monospace;\r\n  /* copy from tailwind defaults */\r\n  &:hover {\r\n    background-color: hsla(240, 20%, 75%, 1);\r\n  }\r\n  /* -mx-4 sm:-mx-6 md:mx-0 */\r\n  --left-offset: -4 * 0.25rem;\r\n  @media (min-width: 640px) {\r\n    --left-offset: -6 * 0.25rem;\r\n  }\r\n  @media (min-width: 768px) {\r\n    --left-offset: 0rem;\r\n  }\r\n`;\r\n\r\nconst RelativeDiv = styled.div`\r\n  position: relative;\r\n  isolation: isolate;\r\n`;\r\n\r\nconst CodeSnipButton = ({\r\n  snipID,\r\n  showSnip,\r\n  onShowSnipChange,\r\n  buttonDir,\r\n}: {\r\n  snipID: number;\r\n  showSnip: boolean;\r\n  onShowSnipChange: (snipID: number, showSnip: boolean) => void;\r\n  buttonDir: 'Up' | 'Down' | 'Left' | 'Right';\r\n}) => {\r\n  return (\r\n    <CodeSnipButtonIcon\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      stroke=\"currentColor\"\r\n      className={\r\n        'transform transition translate-y-0.5 h-4 cursor-pointer' +\r\n        (buttonDir == 'Up'\r\n          ? ' rotate-180'\r\n          : buttonDir == 'Down'\r\n          ? ''\r\n          : buttonDir == 'Left'\r\n          ? ' rotate-90'\r\n          : buttonDir == 'Right'\r\n          ? ' -rotate-90'\r\n          : '')\r\n      }\r\n      onClick={() => onShowSnipChange(snipID, !showSnip)}\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={3}\r\n        d=\"M17 10l-5 5-5-5\"\r\n      />\r\n    </CodeSnipButtonIcon>\r\n  );\r\n};\r\n\r\nclass CodeBlock extends React.Component<\r\n  {\r\n    children: string;\r\n    className: string;\r\n  },\r\n  {\r\n    collapsed: boolean;\r\n    codeSnipShow: boolean[];\r\n  }\r\n> {\r\n  codeSnips = [];\r\n  static contextType = SpoilerContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      collapsed: true,\r\n      codeSnipShow: this.calculateCodeSnipShow(),\r\n    };\r\n\r\n    this.setCodeSnipShow = this.setCodeSnipShow.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.children !== prevProps.children) {\r\n      this.codeSnips = [];\r\n      const codeSnipShow = this.calculateCodeSnipShow();\r\n      this.setState({ codeSnipShow });\r\n    }\r\n  }\r\n\r\n  calculateCodeSnipShow() {\r\n    let i = 0;\r\n    let prev = -1;\r\n    let prevVal = '';\r\n    let prevIndentation = '';\r\n    const codeSnipShowDefault = [];\r\n    const code = this.getCode();\r\n    for (const line of code.split('\\n')) {\r\n      if (prev == -1) {\r\n        const found = line.match(/^(\\s*).*?BeginCodeSnip{(.*?)}/); // BeginCodeSnip{...}\r\n        if (found != null) {\r\n          prev = i;\r\n          prevVal = found[2]; // stuff inside curly brackets\r\n          prevIndentation = found[1]; // stuff before //BeginCodeSnip...\r\n        }\r\n      } else {\r\n        const found = line.match(/EndCodeSnip/);\r\n        if (found != null) {\r\n          //assert(end - prev > 1);\r\n          this.codeSnips.push({\r\n            begin: prev,\r\n            end: i,\r\n            value: prevVal,\r\n            indentation: prevIndentation,\r\n          }); // inclusive bounds\r\n          codeSnipShowDefault.push(false);\r\n          prev = -1;\r\n        }\r\n      }\r\n      ++i;\r\n    }\r\n    return codeSnipShowDefault;\r\n  }\r\n\r\n  getCode() {\r\n    return this.props.children.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\r\n  }\r\n\r\n  setCollapsed(_collapsed): void {\r\n    this.setState({ collapsed: _collapsed });\r\n  }\r\n\r\n  setCodeSnipShow(id, val): void {\r\n    this.setState(state => {\r\n      const codeSnipShow = state.codeSnipShow;\r\n      codeSnipShow[id] = val;\r\n      return { codeSnipShow: codeSnipShow };\r\n    });\r\n  }\r\n\r\n  renderTokens(tokens, maxLines, getLineProps, getTokenProps): JSX.Element {\r\n    const codeSnips = this.codeSnips;\r\n    let curSnip = 0;\r\n    let delta = 1;\r\n    return tokens.map((line, i) => {\r\n      if (maxLines == 0) return null;\r\n      if (line.length === 1 && line[0].content === '') line[0].content = '\\n';\r\n      if (curSnip < codeSnips.length && i >= codeSnips[curSnip].begin) {\r\n        // inside code snip\r\n        if (i == codeSnips[curSnip].begin) {\r\n          delta -= 1;\r\n          if (!this.state.codeSnipShow[curSnip]) {\r\n            --maxLines;\r\n            return (\r\n              // press to show code snip\r\n              <Line key={i} {...getLineProps({ line, key: i })}>\r\n                <LineNo data-line-number={'..'} />\r\n                <LineSnip>\r\n                  <CodeSnipButton\r\n                    onShowSnipChange={this.setCodeSnipShow}\r\n                    snipID={curSnip}\r\n                    showSnip={false}\r\n                    buttonDir={'Right'}\r\n                  />{' '}\r\n                  {/*this.state.codeSnipShow[curSnip] is false*/}\r\n                </LineSnip>\r\n                <CodeSnippetLineContent\r\n                  onClick={this.setCodeSnipShow.bind(this, curSnip, true)}\r\n                >\r\n                  {codeSnips[curSnip].indentation}\r\n                  <span>\r\n                    Code Snippet\r\n                    {codeSnips[curSnip].value\r\n                      ? `: ${codeSnips[curSnip].value}`\r\n                      : ''}{' '}\r\n                    (Click to expand)\r\n                  </span>\r\n                </CodeSnippetLineContent>\r\n              </Line>\r\n            );\r\n          } else return null; // or nothing\r\n        } else if (i == codeSnips[curSnip].end) {\r\n          delta -= 1;\r\n          ++curSnip;\r\n          return null;\r\n        } else if (!this.state.codeSnipShow[curSnip]) return null;\r\n      }\r\n\r\n      //proceed as normal: (show must == true)\r\n      const isFirst =\r\n        curSnip < codeSnips.length && i == codeSnips[curSnip].begin + 1;\r\n      const isLast =\r\n        curSnip < codeSnips.length && i == codeSnips[curSnip].end - 1;\r\n      --maxLines;\r\n      return (\r\n        <Line key={i} {...getLineProps({ line, key: i })}>\r\n          <LineNo data-line-number={i + delta} />\r\n          {isFirst || isLast ? (\r\n            <LineSnip>\r\n              <CodeSnipButton\r\n                onShowSnipChange={this.setCodeSnipShow}\r\n                snipID={curSnip}\r\n                showSnip={true}\r\n                buttonDir={\r\n                  isFirst\r\n                    ? 'Down'\r\n                    : 'Up' /*isFirst: down; isLast: up. This is so poorly implemented .-.*/\r\n                }\r\n              />{' '}\r\n              {/*this.state.codeSnipShow[curSnip] is true*/}\r\n            </LineSnip>\r\n          ) : (\r\n            <LineSnip />\r\n          )}\r\n          <LineContent>\r\n            {line.map((token, key) => {\r\n              token.content = token.content.replace(/ {4}/g, '\\t');\r\n              return <span key={key} {...getTokenProps({ token, key })} />;\r\n            })}\r\n          </LineContent>\r\n        </Line>\r\n      );\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const code = this.getCode();\r\n    const className = this.props.className;\r\n    const linesOfCode =\r\n      code.split('\\n').length +\r\n      1 -\r\n      this.codeSnips.reduce((acc, cur) => acc + (cur.end - cur.begin), 0);\r\n    const isCodeBlockExpandable =\r\n      !this.context.expandCodeBlock && linesOfCode > 15;\r\n    let language = className?.replace(/language-/, '');\r\n    if (language == 'py') language = 'python';\r\n    if (!['cpp', 'java', 'python'].includes(language)) {\r\n      // no styling, just a regular pre tag\r\n      return (\r\n        <pre className=\"-mx-4 sm:-mx-6 md:mx-0 md:rounded bg-gray-100 p-4 mb-4 whitespace-pre-wrap break-all dark:bg-gray-900\">\r\n          {code}\r\n        </pre>\r\n      );\r\n    }\r\n    /*const [codeSnips, setCodeSnips] = useState(\r\n      for(let line of children.trim().split(\"\\n\"))\r\n      {\r\n      }\r\n    );*/\r\n\r\n    // console.warn() if line length is > 80. uncomment to enable\r\n    // Warning: Performance will be negatively impacted! Make sure to comment out before pushing\r\n    // You may want to comment out pages/editor.tsx (see file for instructions) to speed up build times\r\n    // let tooLong = false;\r\n    // for (let line of children.trim().split(\"\\n\")) {\r\n    //   if (line.length > 80) {\r\n    //     tooLong = true;\r\n    //     console.error(line + \"               ---- too long! (\" + line.length + \" chars)\")\r\n    //   }\r\n    // }\r\n\r\n    const collapsed = this.state.collapsed;\r\n    const rightOffset = String(language.length * 8 + 40) + 'px';\r\n    return (\r\n      <RelativeDiv>\r\n        <CopyButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(code);\r\n          }}\r\n          style={{\r\n            '--right-offset': rightOffset,\r\n          }}\r\n          className=\"focus:outline-none\"\r\n        >\r\n          Copy\r\n        </CopyButton>\r\n        <Highlight\r\n          Prism={Prism as any}\r\n          code={code}\r\n          language={language}\r\n          theme={vsDark}\r\n        >\r\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n            <div className=\"gatsby-highlight\" data-language={language}>\r\n              <pre\r\n                className={\r\n                  '-mx-4 sm:-mx-6 md:mx-0 md:rounded whitespace-pre-wrap break-all p-4 mb-4 relative ' +\r\n                  className\r\n                }\r\n                style={{ ...style }}\r\n              >\r\n                {isCodeBlockExpandable && collapsed && tokens.length > 15\r\n                  ? this.renderTokens(tokens, 10, getLineProps, getTokenProps)\r\n                  : this.renderTokens(tokens, -1, getLineProps, getTokenProps)}\r\n                {tokens.length > 15 && !collapsed && <div className=\"h-8\" />}\r\n                {isCodeBlockExpandable && tokens.length > 15 && (\r\n                  <div\r\n                    className={\r\n                      (collapsed ? 'h-full' : 'h-12') +\r\n                      ' absolute inset-x-0 bottom-0 flex items-end justify-center group cursor-pointer lg:rounded-b'\r\n                    }\r\n                    onClick={() => this.setCollapsed(!collapsed)}\r\n                  >\r\n                    <div\r\n                      className={\r\n                        (collapsed ? 'h-20' : 'h-12') +\r\n                        ' absolute inset-x-0 bottom-0 flex items-end justify-center'\r\n                      }\r\n                      style={\r\n                        collapsed && isCodeBlockExpandable\r\n                          ? {\r\n                              background:\r\n                                'linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)',\r\n                            }\r\n                          : null\r\n                      }\r\n                    >\r\n                      <svg\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        className={\r\n                          'text-white w-6 h-6 transform group-hover:-translate-y-2 transition mb-2 ' +\r\n                          (collapsed ? '' : 'rotate-180')\r\n                        }\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M19 9l-7 7-7-7\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </pre>\r\n            </div>\r\n          )}\r\n        </Highlight>\r\n      </RelativeDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React from 'react';\r\n\r\nexport interface SpoilerProps {\r\n  title: string;\r\n  /**\r\n   * Whether or not the spoiler should start expanded.\r\n   * Defaults to false.\r\n   */\r\n  startExpanded?: boolean;\r\n}\r\n\r\nexport const SpoilerContext = React.createContext<{\r\n  /**\r\n   * If true, code blocks should be expanded by default. This is the case if\r\n   * the spoiler's only child is a code block, which means that the code block\r\n   * should just always be expanded.\r\n   */\r\n  expandCodeBlock: boolean;\r\n}>({\r\n  expandCodeBlock: false,\r\n});\r\n\r\nconst Spoiler: React.FC<SpoilerProps> = ({\r\n  children,\r\n  title,\r\n  startExpanded = false,\r\n}) => {\r\n  const [show, setShow] = React.useState(startExpanded);\r\n\r\n  let expandCodeBlock = false;\r\n  const arrChildren = React.Children.toArray(children);\r\n  if (\r\n    arrChildren.length === 1 &&\r\n    (arrChildren[0] as any).type?.name === 'pre'\r\n  ) {\r\n    expandCodeBlock = true;\r\n  } else if (\r\n    arrChildren.length === 1 &&\r\n    (arrChildren[0] as any).type?.name === 'LanguageSection'\r\n  ) {\r\n    // note: this should ideally check each language section to make sure it only has one child\r\n    expandCodeBlock = true;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`bg-gray-50 border border-gray-100 dark:border-transparent dark:bg-gray-800 dark:bg-opacity-50 rounded-md mb-4`}\r\n    >\r\n      <p\r\n        className=\"p-4 flex items-start\"\r\n        onClick={e => {\r\n          setShow(!show);\r\n        }}\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        {show && (\r\n          <svg\r\n            className=\"h-6 w-6 text-gray-500 mr-4\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        )}\r\n        {!show && (\r\n          <svg\r\n            className=\"h-6 w-6 text-gray-500 mr-4\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        )}\r\n        <span className=\"flex-1\">{title}</span>\r\n      </p>\r\n\r\n      {show && (\r\n        <div className=\"p-4 spoiler-body bg-white dark:bg-dark-surface dark:bg-opacity-40 no-y-margin\">\r\n          <SpoilerContext.Provider value={{ expandCodeBlock }}>\r\n            {children}\r\n          </SpoilerContext.Provider>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spoiler;\r\n"],"names":["plain","color","backgroundColor","styles","types","style","languages","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","newlineRe","normalizeEmptyLines","line","push","content","empty","appendTypes","add","typesSize","concat","themeToDict","theme","language","base","create","themeDict","reduce","acc","themeEntry","includes","forEach","type","accStyle","root","objectWithoutProperties","exclude","k","indexOf","uniqueId","_","Token","Highlight","Component","this$1","args","len","props","undefined","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","map","token","join","children","getStyleForToken","__proto__","constructor","render","Prism","code","grammar","tokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","alias","splitByNewlines","split","newlineCount","i$1","pop","normalizeTokens","tokenize","getLineProps","getTokenProps","util","encode","replace","o","toString","match","objId","clone","visited","v","extend","id","redef","lang","insertBefore","inside","before","insert","newToken","ret","DFS","callback","plugins","highlight","text","env","stringify","matchGrammar","strarr","index","startPos","oneshot","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","pos","str","lastIndex","exec","from","to","p","delNum","slice","after","wrapped","Array","splice","hooks","rest","matchedStr","parent","element","tag","classes","attributes","aliases","keys","name","clike","comment","string","punctuation","keyword","boolean","function","number","operator","c","macro","directive","constant","cpp","keywords","java","annotation","namespace","generics","python","interpolation","decorator","builtin","py","Line","styled","LineNo","LineSnip","CodeSnipButtonIcon","LineContent","CodeSnippetLineContent","CopyButton","RelativeDiv","CodeSnipButton","snipID","showSnip","onShowSnipChange","buttonDir","fill","viewBox","stroke","onClick","strokeLinecap","strokeLinejoin","strokeWidth","d","CodeBlock","codeSnips","state","collapsed","codeSnipShow","calculateCodeSnipShow","setCodeSnipShow","bind","componentDidUpdate","prevProps","setState","prev","prevVal","prevIndentation","codeSnipShowDefault","getCode","found","begin","end","indentation","setCollapsed","_collapsed","val","renderTokens","maxLines","curSnip","delta","isFirst","isLast","linesOfCode","cur","isCodeBlockExpandable","context","expandCodeBlock","rightOffset","String","navigator","clipboard","writeText","vsDark","background","React","contextType","SpoilerContext","title","startExpanded","show","setShow","arrChildren","e","marginBottom","fillRule","clipRule","Provider"],"sourceRoot":""}