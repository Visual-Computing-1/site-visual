{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/bronze/rect-geo",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*Unfortunately, C++ doesn't have a built in rectangle `struct` or `class`, so you need to write the functions yourself. Here is the code from the official analysis (modified slightly):*/\n/*Unfortunately, Python doesn't have a built in rectangle class, so you need to write the class yourself.*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"rect-geo\", title = \"Rectangle Geometry\", author = \"Darren Yao, Michael Cao, Benjamin Qi, Ben Dodge\", contributors = \"Allen Li, Andrew Wang, Dong Liu, Ryan Chou\", description = \"Problems involving rectangles whose sides are parallel to the coordinate axes.\", frequency = 2, prerequisites = [\"time-comp\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    ol: \"ol\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Info: _missingComponent(\"Info\"),\n    Optional: _missingComponent(\"Optional\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {Resources, Resource, HeaderLink, FocusProblem, MATHSPAN, Spoiler, LanguageSection, CPPSection, JavaSection, PySection, MATHDIV, Info, Optional, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"7.1 - Rectangle Geometry\",\n        children: _jsx(_components.p, {\n          children: \"module is based off this\"\n        })\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"Most problems in this category include only two or three squares or rectangles,\\r\\nin which case you can simply draw out cases on paper. This should logically lead\\r\\nto a solution.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---fence-painting\",\n      children: [_jsx(_components.a, {\n        href: \"#example---fence-painting\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Fence Painting\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"fence\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"slow-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#slow-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Slow Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\text{max coordinate})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mtext>max coordinate</mtext><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\text{max coordinate})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">max coordinate</span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"Since all the intervals lie between the range, \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[0, 100]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mn>0</mn><mo separator=\\\"true\\\">,</mo><mn>100</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[0, 100]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">0</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">100</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \", we can mark each\\r\\ninterval of length \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" contained within each interval as painted using a loop.\\r\\nThen the answer will be the number of marked intervals.\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAX_POS = 100;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"paint.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"paint.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint a, b, c, d;\\r\\n\\tcin >> a >> b >> c >> d;\\r\\n\\r\\n\\tvector<bool> painted(MAX_POS + 1);\\r\\n\\tfor (int i = a; i < b; i++) {\\r\\n\\t\\tpainted[i] = true;\\r\\n\\t}\\r\\n\\tfor (int i = c; i < d; i++) {\\r\\n\\t\\tpainted[i] = true;\\r\\n\\t}\\r\\n\\r\\n\\tint total = 0;\\r\\n\\tfor (bool i : painted) {\\r\\n\\t\\ttotal += i;\\r\\n\\t}\\r\\n\\r\\n\\tcout << total << endl;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Paint {\\r\\n\\tstatic final int MAX_POS = 100;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"paint\\\");\\r\\n\\t\\tint a = io.nextInt();\\r\\n\\t\\tint b = io.nextInt();\\r\\n\\t\\tint c = io.nextInt();\\r\\n\\t\\tint d = io.nextInt();\\r\\n\\r\\n\\t\\tboolean[] painted = new boolean[MAX_POS + 1];\\r\\n\\t\\tfor (int i = a; i < b; i++) {\\r\\n\\t\\t\\tpainted[i] = true;\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = c; i < d; i++) {\\r\\n\\t\\t\\tpainted[i] = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint total = 0;\\r\\n\\t\\tfor (boolean i : painted) {\\r\\n\\t\\t\\ttotal += i ? 1 : 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(total);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"import sys\\r\\n\\r\\nMAX_POS = 100\\r\\n\\r\\nsys.stdin = open(\\\"paint.in\\\", \\\"r\\\")\\r\\nsys.stdout = open(\\\"paint.out\\\", \\\"w\\\")\\r\\n\\r\\na, b = map(int, input().split())\\r\\nc, d = map(int, input().split())\\r\\n\\r\\npainted = [False for _ in range(MAX_POS + 1)]\\r\\nfor i in range(a, b):\\r\\n\\tpainted[i] = True\\r\\nfor i in range(c, d):\\r\\n\\tpainted[i] = True\\r\\n\\r\\nprint(sum(painted))\\n\"\n            })\n          })\n        })]\n      }), _jsxs(_components.p, {\n        children: [\"However, this solution would not work for higher constraints (ex. if the\\r\\ncoordinates were up to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"10^9\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \").\"]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"fast-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#fast-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Fast Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsx(_components.p, {\n        children: \"Calculate the answer by adding the original lengths and subtracting the\\r\\nintersection length.\"\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"(b-a)+(d-c)-\\\\text{intersection}([a,b],[c,d])\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo stretchy=\\\"false\\\">)</mo><mo>+</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><mo>−</mo><mi>c</mi><mo stretchy=\\\"false\\\">)</mo><mo>−</mo><mtext>intersection</mtext><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(b-a)+(d-c)-\\\\text{intersection}([a,b],[c,d])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">intersection</span></span><span class=\\\"mopen\\\">([</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">])</span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [\"The\\r\\n\", _jsx(_components.a, {\n          href: \"http://www.usaco.org/current/data/sol_paint_bronze_dec15.html\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"official analysis\"\n        }), \"\\r\\nsplits computing the intersection length into several cases. However, we do it\\r\\nmore simply here. An interval \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[x,x+1]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo separator=\\\"true\\\">,</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[x,x+1]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" is contained within both \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[a,b]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[a,b]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" and\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[c,d]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[c,d]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" if \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a\\\\le x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a\\\\le x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \", \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"c\\\\le x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c\\\\le x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \", \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x<b\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x&lt;b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5782em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n        }), \", and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x<d\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mi>d</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x&lt;d</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5782em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span></span></span></span>\"\n        }), \". In other words,\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\max(a,c)\\\\le x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>c</mi><mo stretchy=\\\"false\\\">)</mo><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(a,c)\\\\le x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x<\\\\min(b,d)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>b</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">x&lt;\\\\min(b,d)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5782em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \". So the length of the intersection is\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\min(b,d)-\\\\max(a,c)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>b</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">)</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>c</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\min(b,d)-\\\\max(a,c)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \" if this quantity is positive and zero otherwise!\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"paint.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"paint.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint a, b, c, d;\\r\\n\\tcin >> a >> b >> c >> d;\\r\\n\\r\\n\\tint total = (b - a) + (d - c);  // the sum of the two intervals\\r\\n\\tint intersection = max(min(b, d) - max(a, c), 0);  // subtract the intersection\\r\\n\\tint ans = total - intersection;\\r\\n\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Paint {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"paint\\\");\\r\\n\\t\\tint a = io.nextInt();\\r\\n\\t\\tint b = io.nextInt();\\r\\n\\t\\tint c = io.nextInt();\\r\\n\\t\\tint d = io.nextInt();\\r\\n\\r\\n\\t\\t// the sum of the two intervals\\r\\n\\t\\tint total = (b - a) + (d - c);\\r\\n\\t\\t// subtract the intersection\\r\\n\\t\\tint intersection = Math.max(Math.min(b, d) - Math.max(a, c), 0);\\r\\n\\t\\tint union = total - intersection;\\r\\n\\r\\n\\t\\tio.println(union);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"import sys\\r\\n\\r\\nsys.stdin = open(\\\"paint.in\\\", \\\"r\\\")\\r\\nsys.stdout = open(\\\"paint.out\\\", \\\"w\\\")\\r\\n\\r\\na, b = map(int, input().split())\\r\\nc, d = map(int, input().split())\\r\\ntotal = (b - a) + (d - c)  # the sum of the two intervals\\r\\nintersection = max(min(b, d) - max(a, c), 0)  # subtract the intersection\\r\\nunion = total - intersection\\r\\n\\r\\nprint(union)\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---blocked-billboard\",\n      children: [_jsx(_components.a, {\n        href: \"#example---blocked-billboard\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Blocked Billboard\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Think of this as the 2D analog of the previous example.\"\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"sam\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"slow-solution-1\",\n      children: [_jsx(_components.a, {\n        href: \"#slow-solution-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Slow Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}((\\\\text{max coordinate})^2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">(</mo><mtext>max coordinate</mtext><msup><mo stretchy=\\\"false\\\">)</mo><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}((\\\\text{max coordinate})^2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">((</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">max coordinate</span></span><span class=\\\"mclose\\\"><span class=\\\"mclose\\\">)</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"Since all coordinates are in the range \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[-1000,1000]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mo>−</mo><mn>1000</mn><mo separator=\\\"true\\\">,</mo><mn>1000</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[-1000,1000]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">−</span><span class=\\\"mord\\\">1000</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1000</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \", we can simply go through\\r\\neach of the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2000^2\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>200</mn><msup><mn>0</mn><mn>2</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2000^2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">200</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \" possible visible squares and check which ones are visible\\r\\nusing nested for loops.\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAX_POS = 2000;\\r\\nbool visible[MAX_POS][MAX_POS];\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"billboard.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"billboard.out\\\", \\\"w\\\", stdout);\\r\\n\\tfor (int i = 0; i < 3; ++i) {\\r\\n\\t\\tint x1, y1, x2, y2;\\r\\n\\t\\tcin >> x1 >> y1 >> x2 >> y2;\\r\\n\\t\\t// make all the coordinates positive\\r\\n\\t\\tx1 += MAX_POS / 2;\\r\\n\\t\\ty1 += MAX_POS / 2;\\r\\n\\t\\tx2 += MAX_POS / 2;\\r\\n\\t\\ty2 += MAX_POS / 2;\\r\\n\\t\\tfor (int x = x1; x < x2; x++) {\\r\\n\\t\\t\\tfor (int y = y1; y < y2; y++) {\\r\\n\\t\\t\\t\\tvisible[x][y] =  i < 2;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tint ans = 0;\\r\\n\\tfor (int x = 0; x < MAX_POS; x++) {\\r\\n\\t\\tfor (int y = 0; y < MAX_POS; y++) {\\r\\n\\t\\t\\tans += visible[x][y];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Billboard {\\r\\n\\tprivate static final int MAX_POS = 2000;\\r\\n\\t\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"billboard\\\");\\r\\n\\t\\tint visible[][] = new int[MAX_POS][MAX_POS];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < 3; ++i) {\\r\\n\\t\\t\\tint x1 = io.nextInt();\\r\\n\\t\\t\\tint y1 = io.nextInt();\\r\\n\\t\\t\\tint x2 = io.nextInt();\\r\\n\\t\\t\\tint y2 = io.nextInt();\\r\\n\\t\\t\\tx1 += MAX_POS / 2;\\r\\n\\t\\t\\ty1 += MAX_POS / 2;\\r\\n\\t\\t\\tx2 += MAX_POS / 2;\\r\\n\\t\\t\\ty2 += MAX_POS / 2;\\r\\n\\t\\t\\tfor (int x = x1; x < x2; x++) {\\r\\n\\t\\t\\t\\tfor (int y = y1; y < y2; y++) {\\r\\n\\t\\t\\t\\t\\tvisible[x][y] = i < 2 ? 1 : 0;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint ans = 0;\\r\\n\\t\\tfor (int x = 0; x < 2000; ++x) {\\r\\n\\t\\t\\tfor (int y = 0; y < 2000; ++y) {\\r\\n\\t\\t\\t\\tans += visible[x][y];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(ans);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          })\n        }), _jsxs(PySection, {\n          children: [_jsxs(_components.p, {\n            children: [\"Code runs marginally faster in Python\\r\\n\", _jsx(_components.a, {\n              href: \"https://stackoverflow.com/questions/11241523\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: \"when placed in a function\"\n            }), \",\\r\\nso we can use this to get all 10 test cases. When taken out of\\r\\nthe function, the code passes only 9 test cases.\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"import sys\\r\\n\\r\\nMAX_POS = 2000\\r\\n\\r\\n\\r\\ndef main():\\r\\n\\tsys.stdin = open(\\\"billboard.in\\\", \\\"r\\\")\\r\\n\\tsys.stdout = open(\\\"billboard.out\\\", \\\"w\\\")\\r\\n\\r\\n\\tvisible = [[False for _ in range(MAX_POS)] for _ in range(MAX_POS)]\\r\\n\\r\\n\\tfor i in range(3):\\r\\n\\t\\tx1, y1, x2, y2 = map(int, input().split())\\r\\n\\t\\tx1 += MAX_POS // 2\\r\\n\\t\\ty1 += MAX_POS // 2\\r\\n\\t\\tx2 += MAX_POS // 2\\r\\n\\t\\ty2 += MAX_POS // 2\\r\\n\\t\\tfor x in range(x1, x2):\\r\\n\\t\\t\\tfor y in range(y1, y2):\\r\\n\\t\\t\\t\\tvisible[x][y] = i < 2\\r\\n\\r\\n\\tans = 0\\r\\n\\tfor x in range(MAX_POS):\\r\\n\\t\\tfor y in range(MAX_POS):\\r\\n\\t\\t\\tans += visible[x][y]\\r\\n\\tprint(ans)\\r\\n\\r\\n\\r\\nmain()\\n\"\n            })\n          })]\n        })]\n      }), _jsxs(_components.p, {\n        children: [\"Of course, this wouldn't suffice if the coordinates were changed to be up to\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"10^9\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \".\"]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"fast-solution-1\",\n      children: [_jsx(_components.a, {\n        href: \"#fast-solution-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Fast Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"http://www.usaco.org/current/data/sol_billboard_bronze_dec17.html\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Official Analysis\"\n        })\n      }), _jsxs(LanguageSection, {\n        children: [_jsxs(JavaSection, {\n          children: [_jsxs(_components.p, {\n            children: [\"Creating a class \", _jsx(_components.code, {\n              children: \"Rect\"\n            }), \" to represent a rectangle makes the code easier\\r\\nto understand.\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\nclass Rect {\\r\\n\\tint x1, y1, x2, y2;\\r\\n\\tint area() { return (y2 - y1) * (x2 - x1); }\\r\\n}\\r\\n\\r\\npublic class Billboard {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"billboard\\\");\\r\\n\\t\\t\\r\\n\\t\\tRect a = new Rect(), b = new Rect(), t = new Rect();\\r\\n\\t\\ta.x1 = io.nextInt(); a.y1 = io.nextInt();\\r\\n\\t\\ta.x2 = io.nextInt(); a.y2 = io.nextInt();\\r\\n\\t\\tb.x1 = io.nextInt(); b.y1 = io.nextInt();\\r\\n\\t\\tb.x2 = io.nextInt(); b.y2 = io.nextInt();\\r\\n\\t\\tt.x1 = io.nextInt(); t.y1 = io.nextInt();\\r\\n\\t\\tt.x2 = io.nextInt(); t.y2 = io.nextInt();\\r\\n\\r\\n\\t\\tio.println(a.area() + b.area() - intersect(a, t) - intersect(b, t));\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic int intersect(Rect p, Rect q) {\\r\\n\\t\\tint xOverlap = Math.max(0, Math.min(p.x2, q.x2) - Math.max(p.x1, q.x1));\\r\\n\\t\\tint yOverlap = Math.max(0, Math.min(p.y2, q.y2) - Math.max(p.y1, q.y1));\\r\\n\\t\\treturn xOverlap * yOverlap;\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          }), _jsxs(_components.h4, {\n            id: \"alternative-implementation\",\n            children: [_jsx(_components.a, {\n              href: \"#alternative-implementation\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"Alternative Implementation\"]\n          }), _jsxs(_components.p, {\n            children: [\"We can also use the built-in\\r\\n\", _jsx(_components.a, {\n              href: \"https://docs.oracle.com/javase/8/docs/api/java/awt/Rectangle.html\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: _jsx(_components.code, {\n                children: \"Rectangle\"\n              })\n            }), \"\\r\\nclass. To create a new rectangle, use the following constructor:\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"/*\\r\\n * Creates a rectangle with upper-left corner at (x,y)\\r\\n * with a specified width and height.\\r\\n */\\r\\nRectangle newRect = new Rectangle(x, y, width, height);\\n\"\n            })\n          }), _jsxs(_components.p, {\n            children: [\"The \", _jsx(_components.code, {\n              children: \"Rectangle\"\n            }), \" class supports numerous useful methods, including the following:\"]\n          }), _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"firstRect.intersects(secondRect)\"\n              }), \" checks if two rectangles intersect.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"firstRect.union(secondRect)\"\n              }), \" returns a rectangle representing the union of\\r\\ntwo rectangles.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"firstRect.contains(x, y)\"\n              }), \" checks whether the integer point \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"(x,y)\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>x</mi><mo separator=\\\"true\\\">,</mo><mi>y</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(x,y)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n              }), \" exists in\\r\\nfirstRect.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"firstRect.intersection(secondRect)\"\n              }), \" returns a rectangle representing the\\r\\nintersection of two rectangles.\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"rect.isEmpty()\"\n              }), \" checks whether \", _jsx(_components.code, {\n                children: \"rect\"\n              }), \" is empty.\"]\n            }), \"\\n\"]\n          }), _jsx(_components.p, {\n            children: \"This class can often lessen the implementation needed in some bronze problems\\r\\nand CodeForces problems.\"\n          }), _jsxs(Info, {\n            title: \"Important Note About Java Coordinates\",\n            children: [_jsxs(_components.p, {\n              children: [_jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"y\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n              }), \"-\", _jsx(_components.a, {\n                href: \"https://docs.oracle.com/javase/tutorial/2d/overview/coordinate.html\",\n                target: \"_blank\",\n                rel: \"nofollow noopener noreferrer\",\n                children: \"coordinates\"\n              }), \"\\r\\nin Java increase from top to bottom, not bottom to top! This is why we consider\\r\\nthe top-left \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"y\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n              }), \"-coordinate of each rectangle in the solution below to be \", _jsx(_components.code, {\n                children: \"-y2\"\n              }), \"\\r\\ninstead of \", _jsx(_components.code, {\n                children: \"y2\"\n              }), \".\"]\n            }), _jsxs(_components.p, {\n              children: [\"Alternatively, you can think of \", _jsx(_components.code, {\n                children: \"newRect\"\n              }), \" as creating a rectangle with\\r\\n\", _jsx(_components.em, {\n                children: \"lower-left\"\n              }), \" corner at \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"(x,y)\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>x</mi><mo separator=\\\"true\\\">,</mo><mi>y</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(x,y)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n              }), \" and work with Cartesian coordinates instead. So\\r\\nthe solution below will work if all occurences of \", _jsx(_components.code, {\n                children: \"-y2\"\n              }), \" are replaced with \", _jsx(_components.code, {\n                children: \"y1\"\n              }), \".\"]\n            })]\n          }), _jsxs(_components.p, {\n            children: [\"With Built-in \", _jsx(_components.code, {\n              children: \"Rectangle\"\n            }), \" class:\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.awt.Rectangle;\\r\\nimport java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Billboard {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"billboard\\\");\\r\\n\\r\\n\\t\\tint x1, y1, x2, y2;\\r\\n\\t\\tx1 = io.nextInt(); y1 = io.nextInt();\\r\\n\\t\\tx2 = io.nextInt(); y2 = io.nextInt();\\r\\n\\t\\tRectangle firstRect = new Rectangle(x1, -y2, x2 - x1, y2 - y1);\\r\\n\\t\\t\\r\\n\\t\\tx1 = io.nextInt(); y1 = io.nextInt();\\r\\n\\t\\tx2 = io.nextInt(); y2 = io.nextInt();\\r\\n\\t\\tRectangle secondRect = new Rectangle(x1, -y2, x2 - x1, y2 - y1);\\r\\n\\r\\n\\t\\tx1 = io.nextInt(); y1 = io.nextInt();\\r\\n\\t\\tx2 = io.nextInt(); y2 = io.nextInt();\\r\\n\\t\\tRectangle truck = new Rectangle(x1, -y2, x2 - x1, y2 - y1);\\r\\n\\r\\n\\t\\tlong firstIntersect = getArea(firstRect.intersection(truck));\\r\\n\\t\\tlong secondIntersect = getArea(secondRect.intersection(truck));\\r\\n\\r\\n\\t\\tio.println(getArea(firstRect) + getArea(secondRect)\\r\\n\\t\\t\\t\\t\\t\\t- firstIntersect - secondIntersect);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tpublic static long getArea(Rectangle r) {\\r\\n\\t\\treturn r.isEmpty() ? 0 : (long) r.getHeight() * (long) r.getWidth();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          }), _jsx(Optional, {\n            children: _jsxs(_components.p, {\n              children: [_jsx(_components.a, {\n                href: \"https://docs.oracle.com/javase/7/docs/api/java/awt/geom/Area.html\",\n                target: \"_blank\",\n                rel: \"nofollow noopener noreferrer\",\n                children: \"java.awt.geom.Area\"\n              }), \"\\r\\nwill allow you to calculate the union, intersection, difference, or exclusive or\\r\\nof arbitrary polygons (and more). See\\r\\n\", _jsx(_components.a, {\n                href: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/geometry%20(13)/Polygons/PolyUnion.java\",\n                target: \"_blank\",\n                rel: \"nofollow noopener noreferrer\",\n                children: \"here\"\n              }), \"\\r\\nfor an example of usage.\"]\n            })\n          })]\n        }), _jsxs(CPPSection, {\n          children: [_jsxs(_components.p, {\n            children: [\"Note how creating a struct \", _jsx(_components.code, {\n              children: \"Rect\"\n            }), \" to represent a rectangle makes the code easier\\r\\nto understand.\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nstruct Rect {\\r\\n\\tint x1, y1, x2, y2;\\r\\n\\tint area() {\\r\\n\\t\\treturn (y2 - y1) * (x2 - x1); \\r\\n\\t}\\r\\n};\\r\\n\\r\\nint intersect(Rect p, Rect q) {\\r\\n\\tint xOverlap = max(0, min(p.x2, q.x2) - max(p.x1, q.x1));\\r\\n\\tint yOverlap = max(0, min(p.y2, q.y2) - max(p.y1, q.y1));\\r\\n\\treturn xOverlap * yOverlap;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"billboard.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"billboard.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tRect a, b, t;  // billboards a, b, and the truck\\r\\n\\tcin >> a.x1 >> a.y1 >> a.x2 >> a.y2;\\r\\n\\tcin >> b.x1 >> b.y1 >> b.x2 >> b.y2;\\r\\n\\tcin >> t.x1 >> t.y1 >> t.x2 >> t.y2;\\r\\n\\tcout << a.area() + b.area() - intersect(a, t) - intersect(b, t) << endl;\\r\\n}\\n\"\n            })\n          })]\n        }), _jsxs(PySection, {\n          children: [_jsxs(_components.p, {\n            children: [\"Note how creating a class \", _jsx(_components.code, {\n              children: \"Rect\"\n            }), \" to represent a rectangle makes the code easier\\r\\nto understand.\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"import sys\\r\\n\\r\\nclass Rect:\\r\\n\\tdef __init__(self):\\r\\n\\t\\tself.x1, self.y1, self.x2, self.y2 = map(int, input().split())\\r\\n\\r\\n\\tdef area(self):\\r\\n\\t\\treturn (self.y2 - self.y1) * (self.x2 - self.x1)\\r\\n\\r\\ndef intersect(p, q):\\r\\n\\tx_overlap = max(0, min(p.x2, q.x2) - max(p.x1, q.x1))\\r\\n\\ty_overlap = max(0, min(p.y2, q.y2) - max(p.y1, q.y1))\\r\\n\\treturn x_overlap * y_overlap\\r\\n\\r\\nsys.stdin = open(\\\"billboard.in\\\", \\\"r\\\")\\r\\nsys.stdout = open(\\\"billboard.out\\\", \\\"w\\\")\\r\\n\\r\\nrects = []\\r\\nfor _ in range(3):\\r\\n\\trects.append(Rect())\\r\\n\\r\\nprint(rects[0].area() + rects[1].area() - intersect(rects[0], rects[2]) - intersect(rects[1], rects[2]))\\n\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"common-formulas\",\n      children: [_jsx(_components.a, {\n        href: \"#common-formulas\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Common Formulas\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Certain tasks show up often in rectangle geometry problems. For example, many problems\\r\\ninvolve finding the overlapping area of two or more rectangles based on their coordinate points,\\r\\nor determining whether two rectangles intersect. Here, we'll discuss these formulas.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note that these formulas only apply to rectangles which have sides parallel to the coordinate axes.\"\n    }), \"\\n\", _jsx(Info, {\n      title: \"Coordinates\",\n      children: _jsxs(_components.p, {\n        children: [\"A rectangle can be represented with \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n        }), \" points: its top right corner and bottom left corner. We'll label these points \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"tr\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">tr</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n        }), \" (top right) and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"bl\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">bl</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n        }), \" (bottom left).\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-area\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-area\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding area\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The formula for finding the area of an individual rectangle is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w \\\\cdot l\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w \\\\cdot l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4445em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{length}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">length</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{length}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">length</span></span></span></span></span>\"\n      }), \" is the length of the vertical sides, and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{width}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">width</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{width}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">width</span></span></span></span></span>\"\n      }), \" is the length of the horizontal sides.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{width} = \\\\texttt{tr}_x - \\\\texttt{bl}_x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">width</mtext><mo>=</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><mi>x</mi></msub><mo>−</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><mi>x</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{width} = \\\\texttt{tr}_x - \\\\texttt{bl}_x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">width</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7611em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{length} = \\\\texttt{tr}_y - \\\\texttt{bl}_y\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">length</mtext><mo>=</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><mi>y</mi></msub><mo>−</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><mi>y</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{length} = \\\\texttt{tr}_y - \\\\texttt{bl}_y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">length</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8694em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8972em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{area} = \\\\texttt{width} \\\\cdot \\\\texttt{length}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">area</mtext><mo>=</mo><mtext mathvariant=\\\"monospace\\\">width</mtext><mo>⋅</mo><mtext mathvariant=\\\"monospace\\\">length</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{area} = \\\\texttt{width} \\\\cdot \\\\texttt{length}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">area</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">width</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">length</span></span></span></span></span>\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"long long area(int bl_x, int bl_y, int tr_x, int tr_y) {\\r\\n\\tlong long length = tr_y - bl_y;\\r\\n\\tlong long width = tr_x - bl_x;\\r\\n\\treturn length * width;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"int area(int bl_x, int bl_y, int tr_x, int tr_y) {\\r\\n\\tint length = tr_y - bl_y;\\r\\n\\tint width = tr_x - bl_x;\\r\\n\\treturn length * width;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"def area(bl_x: int, bl_y: int, tr_x: int, tr_y: int) -> int:\\r\\n\\tlength = tr_y - bl_y\\r\\n\\twidth = tr_x - bl_x\\r\\n\\treturn length * width\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"checking-if-two-rectangles-intersect\",\n      children: [_jsx(_components.a, {\n        href: \"#checking-if-two-rectangles-intersect\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Checking if two rectangles intersect\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Given two rectangles \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \", there are only two cases where they do not intersect:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{tr}_{a_y}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>a</mi><mi>y</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{tr}_{a_y}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9009em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\leq\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{bl}_{b_y}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>b</mi><mi>y</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{bl}_{b_y}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9584em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" or \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{bl}_{a_y}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>a</mi><mi>y</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{bl}_{a_y}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9584em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\geq\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\geq</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≥</span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{tr}_{b_y}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>b</mi><mi>y</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{tr}_{b_y}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9009em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{bl}_{a_x}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>a</mi><mi>x</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{bl}_{a_x}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8612em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\geq\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\geq</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≥</span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{tr}_{b_x}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>b</mi><mi>x</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{tr}_{b_x}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8037em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" or \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{tr}_{a_x}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>a</mi><mi>x</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{tr}_{a_x}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8037em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\leq\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{bl}_{b_x}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>b</mi><mi>x</mi></msub></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{bl}_{b_x}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8612em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In all other cases, the rectangles intersect.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"bool intersect(vector<int> s1, vector<int> s2) {\\r\\n\\tint bl_a_x = s1[0], bl_a_y = s1[1], tr_a_x = s1[2], tr_a_y = s1[3];\\r\\n\\tint bl_b_x = s2[0], bl_b_y = s2[1], tr_b_x = s2[2], tr_b_y = s2[3];\\r\\n\\t\\r\\n\\t// no overlap\\r\\n\\tif (bl_a_x >= tr_b_x || tr_a_x <= bl_b_x \\r\\n\\t\\t\\t|| bl_a_y >= tr_b_y || tr_a_y <= bl_b_y) {\\r\\n\\t\\treturn false;\\r\\n\\t} else {\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"boolean intersect(int[] s1, int[] s2) {\\r\\n\\tint bl_a_x = s1[0], bl_a_y = s1[1], tr_a_x = s1[2], tr_a_y = s1[3];\\r\\n\\tint bl_b_x = s2[0], bl_b_y = s2[1], tr_b_x = s2[2], tr_b_y = s2[3];\\r\\n\\t\\r\\n\\t// no overlap\\r\\n\\tif (bl_a_x >= tr_b_x || tr_a_x <= bl_b_x \\r\\n\\t\\t\\t|| bl_a_y >= tr_b_y || tr_a_y <= bl_b_y) {\\r\\n\\t\\treturn false;\\r\\n\\t} else {\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"def intersect(s1, s2) -> bool:\\r\\n\\tbl_a_x, bl_a_y, tr_a_x, tr_a_y = s1[0], s1[1], s1[2], s1[3]\\r\\n\\tbl_b_x, bl_b_y, tr_b_x, tr_b_y = s2[0], s2[1], s2[2], s2[3]\\r\\n\\t\\r\\n\\t# no overlap\\r\\n\\tif (bl_a_x >= tr_b_x or tr_a_x <= bl_b_x\\r\\n\\t\\t\\tor bl_a_y >= tr_b_y or tr_a_y <= bl_b_y):\\r\\n\\t\\treturn False\\r\\n\\telse:\\r\\n\\t\\treturn True\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-area-of-intersection\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-area-of-intersection\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding area of intersection\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We'll assume that the shape formed by the intersection of two rectangles is itself a rectangle.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First, we'll find this rectangle's length and width.\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{width} = \\\\min(\\\\texttt{tr}_{a_x}, \\\\texttt{tr}_{b_x}) - \\\\max(\\\\texttt{bl}_{a_x}, \\\\texttt{bl}_{b_x})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">width</mtext><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>a</mi><mi>x</mi></msub></msub><mo separator=\\\"true\\\">,</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>b</mi><mi>x</mi></msub></msub><mo stretchy=\\\"false\\\">)</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>a</mi><mi>x</mi></msub></msub><mo separator=\\\"true\\\">,</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>b</mi><mi>x</mi></msub></msub><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{width} = \\\\min(\\\\texttt{tr}_{a_x}, \\\\texttt{tr}_{b_x}) - \\\\max(\\\\texttt{bl}_{a_x}, \\\\texttt{bl}_{b_x})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">width</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0001em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0001em;vertical-align:-0.2501em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2501em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{length} = \\\\min(\\\\texttt{tr}_{a_y}, \\\\texttt{tr}_{b_y}) - \\\\max(\\\\texttt{bl}_{a_y}, \\\\texttt{bl}_{b_y})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">length</mtext><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>a</mi><mi>y</mi></msub></msub><mo separator=\\\"true\\\">,</mo><msub><mtext mathvariant=\\\"monospace\\\">tr</mtext><msub><mi>b</mi><mi>y</mi></msub></msub><mo stretchy=\\\"false\\\">)</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>a</mi><mi>y</mi></msub></msub><mo separator=\\\"true\\\">,</mo><msub><mtext mathvariant=\\\"monospace\\\">bl</mtext><msub><mi>b</mi><mi>y</mi></msub></msub><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{length} = \\\\min(\\\\texttt{tr}_{a_y}, \\\\texttt{tr}_{b_y}) - \\\\max(\\\\texttt{bl}_{a_y}, \\\\texttt{bl}_{b_y})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">length</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0973em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">tr</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0973em;vertical-align:-0.3473em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">bl</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2819em;\\\"><span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3473em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If either of these values are negative, the rectangles do not intersect.\\r\\nIf they are zero, the rectangles intersect at a single point.\\r\\nMultiply the length and width to find the overlapping area.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-2\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"int inter_area(vector<int> s1, vector<int> s2) {\\r\\n\\tint bl_a_x = s1[0], bl_a_y = s1[1], tr_a_x = s1[2], tr_a_y = s1[3];\\r\\n\\tint bl_b_x = s2[0], bl_b_y = s2[1], tr_b_x = s2[2], tr_b_y = s2[3];\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t(min(tr_a_x, tr_b_x) - max(bl_a_x, bl_b_x)) \\r\\n\\t\\t* (min(tr_a_y, tr_b_y) - max(bl_a_y, bl_b_y))\\r\\n\\t);\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"def inter_area(s1, s2) -> int:\\r\\n\\tbl_a_x, bl_a_y, tr_a_x, tr_a_y = s1[0], s1[1], s1[2], s1[3]\\r\\n\\tbl_b_x, bl_b_y, tr_b_x, tr_b_y = s2[0], s2[1], s2[2], s2[3]\\r\\n\\t\\r\\n\\treturn (\\r\\n\\t\\t(min(tr_a_x, tr_b_x) - max(bl_a_x, bl_b_x))\\r\\n\\t\\t* (min(tr_a_y, tr_b_y) - max(bl_a_y, bl_b_y))\\r\\n\\t)\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"int interArea(int[] s1, int[] s2) {\\r\\n\\tint bl_a_x = s1[0], bl_a_y = s1[1], tr_a_x = s1[2], tr_a_y = s1[3]; \\r\\n\\tint bl_b_x = s2[0], bl_b_y = s2[1], tr_b_x = s2[2], tr_b_y = s2[3];\\r\\n\\treturn (\\r\\n\\t\\t(Math.min(tr_a_x, tr_b_x) - Math.max(bl_a_x, bl_b_x)) \\r\\n\\t\\t* (Math.min(tr_a_y, tr_b_y) - Math.max(bl_a_y, bl_b_y))\\r\\n\\t);\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"general\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  contributors,\n  description,\n  frequency,\n  prerequisites,\n  default: MDXContent\n};\n","frontmatter":{"title":"Rectangle Geometry","author":"Darren Yao, Michael Cao, Benjamin Qi, Ben Dodge","contributors":"Allen Li, Andrew Wang, Dong Liu, Ryan Chou","id":"rect-geo","prerequisites":["time-comp"],"description":"Problems involving rectangles whose sides are parallel to the coordinate axes.","frequency":2},"parent":{"name":"Rect_Geo","relativePath":"2_Bronze/Rect_Geo.mdx"},"fields":{"division":"bronze"},"toc":{"cpp":[{"depth":2,"value":"Example - Fence Painting","slug":"example---fence-painting"},{"depth":3,"value":"Slow Solution","slug":"slow-solution"},{"depth":3,"value":"Fast Solution","slug":"fast-solution"},{"depth":2,"value":"Example - Blocked Billboard","slug":"example---blocked-billboard"},{"depth":3,"value":"Slow Solution","slug":"slow-solution-1"},{"depth":3,"value":"Fast Solution","slug":"fast-solution-1"},{"depth":2,"value":"Common Formulas","slug":"common-formulas"},{"depth":3,"value":"Finding area","slug":"finding-area"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Checking if two rectangles intersect","slug":"checking-if-two-rectangles-intersect"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":3,"value":"Finding area of intersection","slug":"finding-area-of-intersection"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Example - Fence Painting","slug":"example---fence-painting"},{"depth":3,"value":"Slow Solution","slug":"slow-solution"},{"depth":3,"value":"Fast Solution","slug":"fast-solution"},{"depth":2,"value":"Example - Blocked Billboard","slug":"example---blocked-billboard"},{"depth":3,"value":"Slow Solution","slug":"slow-solution-1"},{"depth":3,"value":"Fast Solution","slug":"fast-solution-1"},{"depth":2,"value":"Common Formulas","slug":"common-formulas"},{"depth":3,"value":"Finding area","slug":"finding-area"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Checking if two rectangles intersect","slug":"checking-if-two-rectangles-intersect"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":3,"value":"Finding area of intersection","slug":"finding-area-of-intersection"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Example - Fence Painting","slug":"example---fence-painting"},{"depth":3,"value":"Slow Solution","slug":"slow-solution"},{"depth":3,"value":"Fast Solution","slug":"fast-solution"},{"depth":2,"value":"Example - Blocked Billboard","slug":"example---blocked-billboard"},{"depth":3,"value":"Slow Solution","slug":"slow-solution-1"},{"depth":3,"value":"Fast Solution","slug":"fast-solution-1"},{"depth":2,"value":"Common Formulas","slug":"common-formulas"},{"depth":3,"value":"Finding area","slug":"finding-area"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Checking if two rectangles intersect","slug":"checking-if-two-rectangles-intersect"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":3,"value":"Finding area of intersection","slug":"finding-area-of-intersection"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"fence","problems":[{"uniqueId":"usaco-567","name":"Fence Painting","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=567","source":"Bronze","difficulty":"Very Easy","isStarred":false,"tags":["Rectangle"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/bronze/rect-geo#problem-usaco-567","sketch":null}}]},{"listId":"sam","problems":[{"uniqueId":"usaco-759","name":"Blocked Billboard","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=759","source":"Bronze","difficulty":"Easy","isStarred":false,"tags":["Rectangle"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/bronze/rect-geo#problem-usaco-759","sketch":null}}]},{"listId":"general","problems":[{"uniqueId":"usaco-663","name":"Square Pasture","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=663","source":"Bronze","difficulty":"Very Easy","isStarred":false,"tags":["Rectangle"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-783","name":"Blocked Billboard II","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=783","source":"Bronze","difficulty":"Easy","isStarred":true,"tags":["Rectangle"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1216C","name":"D3C - White Sheet","url":"https://codeforces.com/contest/1216/problem/C","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Rectangle"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1555B","name":"B. Two Tables","url":"https://codeforces.com/problemset/problem/1555/B","source":"CF","difficulty":"Normal","isStarred":false,"tags":["brute force"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"rect-geo"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}