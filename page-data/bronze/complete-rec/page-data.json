{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/bronze/complete-rec",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*<Problems problems={\"ex\"} />*/\n/*For a list of $N$ elements, there are  ways to permute them, and generally we'll need to read through each permutation once to check its validity, for a time complexity of $\\mathcal{O}(N \\cdot N!)$.*/\n/*<Resources>\n<Resource source=\"GFG\" url=\"write-a-c-program-to-print-all-permutations-of-a-given-string\" title=\"Printing all Permutations of Given String\"> </Resource>\n</Resources>*/\n/*### Checking Permutations in Lexicographical Order\n\n<LanguageSection>\n\n<CPPSection>\n\n#### Method 1\n\n($\\mathcal{O}(N\\cdot N!)$ code)\n\n<IncompleteSection />\n\n#### Method 2\n\n</CPPSection>\n\n<JavaSection>\n\n```java\nimport java.util.*;\n\npublic class Test {\nstatic boolean[] used;\nstatic List<Integer> cur = new ArrayList<>();\nstatic int n;\nstatic void gen() {\nif (cur.size() == n) {\ncheck(cur); // check if current permutation is valid, or print it\nreturn;\n}\nfor (int i = 0; i < n; ++i) if (!used[i]) {\nused[i] = true; cur.add(i+1);\ngen();\nused[i] = false; cur.remove(cur.size()-1);\n}\n}\nstatic void genPerm(int _n) {\nn = _n; used = new boolean[n];\ngen();\n}\npublic static void main(String[] Args) {\ngenPerm(5);\n}\n}\n```\n\n</JavaSection>\n\n</LanguageSection>\n\n<IncompleteSection />*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"complete-rec\", title = \"Complete Search with Recursion\", author = \"Many\", contributors = \"Darren Yao, Sam Zhang, Michael Cao, Andrew Wang, Benjamin Qi, Dong Liu, Maggie Liu, Dustin Miao\", description = \"Includes generating subsets and permutations.\", frequency = 1, prerequisites = [\"intro-complete\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    Warning: _missingComponent(\"Warning\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    Info: _missingComponent(\"Info\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Problems: _missingComponent(\"Problems\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\"),\n    Quiz: _missingComponent(\"Quiz\")\n  }, _props.components), {Warning, HeaderLink, FocusProblem, Resources, Resource, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, Info, MATHDIV, Problems, IncompleteSection, Quiz, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"Although knowledge of recursion is not strictly necessary for Bronze, we think\\r\\nthat it makes more sense to include this module as part of Bronze rather than\\r\\nSilver.\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"subsets\",\n      children: [_jsx(_components.a, {\n        href: \"#subsets\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subsets\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"subset\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPH\",\n        title: \"5.1 - Generating Subsets\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"good explanation + code, no need to repeat\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---apple-division\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---apple-division\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Apple Division\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\\\\le 20\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n\\\\le 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n      }), \", we can solve the focus problem by trying all possible divisions\\r\\nof \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" apples into two sets and finding the one with the minimum difference in\\r\\nweights. Here are two ways to do this.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"generating-subsets-recursively\",\n      children: [_jsx(_components.a, {\n        href: \"#generating-subsets-recursively\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Generating Subsets Recursively\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The first method would be to write a recursive function which searches over all\\r\\npossibilities.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"At some index, we either add \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{weight}_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mtext mathvariant=\\\"monospace\\\">weight</mtext><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{weight}_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.883em;vertical-align:-0.2719em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">weight</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1897em;\\\"><span style=\\\"top:-2.4281em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2719em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" to the first set or the second\\r\\nset, storing two sums \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" with the sum of values in each set.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Then, we return the difference between the two sums once we've reached the end\\r\\nof the array.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint n; ll weights[20];\\r\\n\\r\\nll solve(int i, ll s1, ll s2){\\r\\n\\tif(i == n){\\r\\n\\t\\treturn abs(s1 - s2);\\r\\n\\t}\\r\\n\\treturn min(solve(i + 1, s1 + weights[i], s2),\\r\\n\\t\\t\\tsolve(i + 1, s1, s2 + weights[i]));\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tcin >> n;\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> weights[i];\\r\\n\\t}\\r\\n\\tcout << solve(0, 0, 0) << \\\"\\\\n\\\";\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Main {\\r\\n\\tstatic int N;\\r\\n\\tstatic int weights[];\\r\\n\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\r\\n\\t\\tN = io.nextInt();\\r\\n\\t\\tweights = new int[N];\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tweights[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(solve(0, 0, 0));\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic long solve(int index, long sum1, long sum2) {\\r\\n\\t\\tif (index == N) {\\r\\n\\t\\t\\treturn Math.abs(sum1 - sum2);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn Math.min(\\r\\n\\t\\t\\tsolve(index + 1, sum1 + weights[index], sum2),\\r\\n\\t\\t\\tsolve(index + 1, sum1, sum2 + weights[index])\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input())\\r\\np = list(map(int, input().split()))\\r\\n\\r\\ndef solve(i, s1, s2):\\r\\n\\tif i == n:\\r\\n\\t\\treturn abs(s2 - s1)\\r\\n\\treturn min(solve(i + 1, s1 + p[i], s2),\\r\\n\\t\\t\\t   solve(i + 1, s1, s2 + p[i]))\\r\\n\\r\\nprint(solve(0, 0, 0))\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"generating-subsets-with-bitmasks\",\n      children: [_jsx(_components.a, {\n        href: \"#generating-subsets-with-bitmasks\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Generating Subsets with Bitmasks\"]\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"You are not expected to know this for Bronze.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.strong, {\n        children: \"bitmask\"\n      }), \" is an integer whose binary representation is used to represent a\\r\\nsubset. For a particular bitmask, if the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \"'th bit is turned on (equal to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \"),\\r\\nwe say the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \"'th apple is in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \". Then, the rest of the apples are in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \".\\r\\nWe can iterate through all subsets \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" if we check all bitmasks ranging from\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"2^N-1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2^N-1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9247em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8413em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \". For each bitmask, find the sum of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">s_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and find the\\r\\nminimum difference between their sums.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note the fancy bitwise operations:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"1 << x\"\n        }), \" for an integer \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" is another way of writing \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2^x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \", which, in binary,\\r\\nhas only the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \"'th bit turned on.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"&\"\n        }), \" (and) operator will take two integers and return a new integer.\\r\\n\", _jsx(_components.code, {\n          children: \"a & b\"\n        }), \" for integers \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"b\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n        }), \" will return a new integer whose \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"'th bit is\\r\\nturned on if and only if the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"'th bit is turned on for both \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"b\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n        }), \".\\r\\nThus, \", _jsx(_components.code, {\n          children: \"mask & (1 << x)\"\n        }), \" will return a positive value only if the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \"'th bit is\\r\\nturned on in \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"mask\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">mask</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">ma</span><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Info, {\n      title: \"Bitwise Operations\",\n      children: _jsxs(_components.p, {\n        children: [\"Check \", _jsx(_components.a, {\n          href: \"/gold/intro-bitwise\",\n          children: \"this module\"\n        }), \" for more information.\"]\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint n; ll weights[20];\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tcin >> n;\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> weights[i];\\r\\n\\t}\\r\\n\\tll ans = (ll)1e18;\\r\\n\\tfor (int mask = 0; mask < (1 << n); mask++) {\\r\\n\\t\\tll s1 = 0, s2 = 0;\\r\\n\\t\\tfor (int j = 0; j < n; j++) {\\r\\n\\t\\t\\tif (mask & (1 << j)) { //if the j-th bit is toggled\\r\\n\\t\\t\\t\\ts1 += weights[j];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse{\\r\\n\\t\\t\\t\\ts2 += weights[j];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tans = min(ans, abs(s1 - s2));\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Main {\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\r\\n\\t\\tint N = io.nextInt();\\r\\n\\t\\tint weights[] = new int[N];\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tweights[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlong ans = Long.MAX_VALUE;\\r\\n\\t\\tfor (int bitmask = 0; bitmask < (1 << N); bitmask++) {\\r\\n\\t\\t\\tlong s1 = 0;\\r\\n\\t\\t\\tlong s2 = 0;\\r\\n\\r\\n\\t\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\t\\tif ((bitmask & (1 << i)) > 0) {\\r\\n\\t\\t\\t\\t\\ts1 += weights[i];\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\ts2 += weights[i];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tans = Math.min(ans, Math.abs(s1 - s2));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(ans);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input())\\r\\np = list(map(int, input().split()))\\r\\n\\r\\nans = float('inf')\\r\\nfor mask in range(1 << n):\\r\\n\\ts1, s2 = 0, 0\\r\\n\\tfor i in range(n):\\r\\n\\t\\tif mask & (1 << i):\\r\\n\\t\\t\\ts1 += p[i]\\r\\n\\t\\telse:\\r\\n\\t\\t\\ts2 += p[i]\\r\\n\\tans = min(ans, abs(s1 - s2))\\r\\n\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"permutations\",\n      children: [_jsx(_components.a, {\n        href: \"#permutations\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Permutations\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.strong, {\n        children: \"permutation\"\n      }), \" is a reordering of a list of elements.\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"permSam\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"lexicographical-order\",\n      children: [_jsx(_components.a, {\n        href: \"#lexicographical-order\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Lexicographical Order\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This term is mentioned quite frequently, ex. in\\r\\n\", _jsx(_components.a, {\n        href: \"http://www.usaco.org/index.php?page=viewproblem2&cpid=988\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"USACO Bronze - Photoshoot\"\n      }), \".\"]\n    }), \"\\n\", \"\\n\", _jsx(_components.p, {\n      children: \"Think about how are words ordered in a dictionary. (In fact, this is where the\\r\\nterm \\\"lexicographical\\\" comes from.)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In dictionaries, you will see that words beginning with the letter \", _jsx(_components.code, {\n        children: \"a\"\n      }), \" appears\\r\\nat the very beginning, followed by words beginning with \", _jsx(_components.code, {\n        children: \"b\"\n      }), \", and so on. If two\\r\\nwords have the same starting letter, the second letter is used to compare them;\\r\\nif both the first and second letters are the same, then use the third letter to\\r\\ncompare them, and so on until we either reach a letter that is different, or we\\r\\nreach the end of some word (in this case, the shorter word goes first).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Permutations can be placed into lexicographical order in almost the same way. We\\r\\nfirst group permutations by their first element; if the first element of two\\r\\npermutations are equal, then we compare them by the second element; if the\\r\\nsecond element is also equal, then we compare by the third element, and so on.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example, the permutations of 3 elements, in lexicographical order, are\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mo stretchy=\\\"false\\\">[</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Notice that the list starts with permutations beginning with 1 (just like a\\r\\ndictionary that starts with words beginning with \", _jsx(_components.code, {\n        children: \"a\"\n      }), \"), followed by those\\r\\nbeginning with 2 and those beginning with 3. Within the same starting element,\\r\\nthe second element is used to make comparisions.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Generally, unless you are specifically asked to find the lexicographically\\r\\nsmallest/largest solution, you do not need to worry about whether permutations\\r\\nare being generated in lexicographical order. However, the idea of\\r\\nlexicographical order does appear quite often in programming contest problems,\\r\\nand in a variety of contexts, so it is strongly recommended that you familiarize\\r\\nyourself with its definition.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some problems will ask for an ordering of elements that satisfies certain\\r\\nconditions. In these problems, if \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N \\\\leq 10\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n      }), \", we can just iterate through all\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N!=N\\\\cdot (N-1)\\\\cdot (N-2)\\\\cdots 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo stretchy=\\\"false\\\">!</mo><mo>=</mo><mi>N</mi><mo>⋅</mo><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo><mo>⋅</mo><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>−</mo><mn>2</mn><mo stretchy=\\\"false\\\">)</mo><mo>⋯</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N!=N\\\\cdot (N-1)\\\\cdot (N-2)\\\\cdots 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" permutations and check each permutation for\\r\\nvalidity.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---creating-strings-i\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---creating-strings-i\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Creating Strings I\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPH\",\n        title: \"5.2 - Generating Permutations\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"brief explanation + code for both of the methods below\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"generating-permutations-recursively\",\n      children: [_jsx(_components.a, {\n        href: \"#generating-permutations-recursively\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Generating Permutations Recursively\"]\n    }), \"\\n\", \"\\n\", _jsx(_components.p, {\n      children: \"Just a slight modification of method 1 from CPH.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We'll use the recursive function \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{search}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">search</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{search}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">search</span></span></span></span></span>\"\n      }), \" to find all the permutations\\r\\nof the string \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \". First, keep track of how many of each character there are in\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \". For each function call, add an available character to the current string,\\r\\nand call \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{search}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">search</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{search}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">search</span></span></span></span></span>\"\n      }), \" with that string. When the current string has the\\r\\nsame size as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \", we've found a permutation and can add it to the list of\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{perms}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">perms</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{perms}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6528em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">perms</span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\nusing namespace std;\\r\\n\\r\\nstring s;\\r\\nvector<string> perms;\\r\\nint char_count[26];\\r\\n\\r\\nvoid search(string curr)\\r\\n{\\r\\n\\t// we've finished creating a permutation\\r\\n\\tif (curr.size() == s.size())\\r\\n\\t{\\r\\n\\t\\tperms.push_back(curr);\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\tfor (int i = 0; i < 26; i++)\\r\\n\\t{\\r\\n\\t\\t// for all available characters\\r\\n\\t\\tif (char_count[i] > 0)\\r\\n\\t\\t{\\r\\n\\t\\t\\t// add it to the current string and search\\r\\n\\t\\t\\tchar_count[i]--;\\r\\n\\t\\t\\tsearch(curr + (char)('a' + i));\\r\\n\\t\\t\\tchar_count[i]++;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tcin >> s;\\r\\n\\tfor (char c : s)\\r\\n\\t{\\r\\n\\t\\tchar_count[c - 'a']++;\\r\\n\\t}\\r\\n\\tsearch(\\\"\\\");\\r\\n\\tcout << perms.size() << endl;\\r\\n\\tfor (string perm : perms)\\r\\n\\t{\\r\\n\\t\\tcout << perm << endl;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class CreatingStrings1\\r\\n{\\r\\n\\tstatic String s;\\r\\n\\tstatic List<String> perms = new ArrayList<String>();\\r\\n\\tstatic int[] charCount = new int[26];\\r\\n\\r\\n\\tstatic void search(String curr)\\r\\n\\t{\\r\\n\\t\\t// we've finished creating a permutation\\r\\n\\t\\tif (curr.length() == s.length())\\r\\n\\t\\t{\\r\\n\\t\\t\\tperms.add(curr);\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < 26; i++)\\r\\n\\t\\t{\\r\\n\\t\\t\\t// for all available characters\\r\\n\\t\\t\\tif (charCount[i] > 0)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t// add it to the current string and search\\r\\n\\t\\t\\t\\tcharCount[i]--;\\r\\n\\t\\t\\t\\tsearch(curr + (char)(i + 'a'));\\r\\n\\t\\t\\t\\tcharCount[i]++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException\\r\\n\\t{\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\ts = io.next();\\r\\n\\t\\tfor (int i = 0; i < s.length(); i++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tcharCount[s.charAt(i) - 'a']++;\\r\\n\\t\\t}\\r\\n\\t\\tsearch(\\\"\\\");\\r\\n\\t\\tio.println(perms.size());\\r\\n\\t\\tfor (String perm : perms)\\r\\n\\t\\t{\\r\\n\\t\\t\\tio.println(perm);\\r\\n\\t\\t}\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"s = input()\\r\\nperms = []\\r\\nchar_count = [0] * 26\\r\\n\\r\\ndef search(curr):\\r\\n\\t# we've finished creating a permutation\\r\\n\\tif len(curr) == len(s):\\r\\n\\t\\tperms.append(curr)\\r\\n\\t\\treturn\\r\\n\\tfor i in range(26):\\r\\n\\t\\t# for all available characters\\r\\n\\t\\tif char_count[i] > 0:\\r\\n\\t\\t\\t# add it to the current string and search\\r\\n\\t\\t\\tchar_count[i] -= 1\\r\\n\\t\\t\\tsearch(curr + chr(ord('a') + i))\\r\\n\\t\\t\\tchar_count[i] += 1\\r\\n\\r\\nfor c in s:\\r\\n\\tchar_count[ord(c) - ord('a')] += 1\\r\\n\\r\\nsearch(\\\"\\\")\\r\\nprint(len(perms))\\r\\nfor perm in perms:\\r\\n\\tprint(perm)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h4, {\n          id: \"generating-permutations-using-next_permutation\",\n          children: [_jsx(_components.a, {\n            href: \"#generating-permutations-using-next_permutation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Generating Permutations Using \", _jsx(_components.a, {\n            href: \"https://en.cppreference.com/w/cpp/algorithm/next_permutation\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"next_permutation\"\n            })\n          })]\n        }), _jsx(Resources, {\n          children: _jsx(Resource, {\n            source: \"Mark Nelson\",\n            title: \"Next Permutation\",\n            url: \"https://marknelson.us/posts/2002/03/01/next-permutation.html\",\n            starred: true,\n            children: _jsx(_components.p, {\n              children: \"explanation with an example\"\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Alternatively, we can just use the \", _jsx(_components.code, {\n            children: \"next_permutation()\"\n          }), \" function. This function\\r\\ntakes in a range and modifies it to the next greater permutation. If there is no\\r\\ngreater permutation, it returns false. To iterate through all permutations,\\r\\nplace it inside a \", _jsx(_components.code, {\n            children: \"do-while\"\n          }), \" loop. We are using a \", _jsx(_components.code, {\n            children: \"do-while\"\n          }), \" loop here instead\\r\\nof a typical \", _jsx(_components.code, {\n            children: \"while\"\n          }), \" loop because a \", _jsx(_components.code, {\n            children: \"while\"\n          }), \" loop would modify the smallest\\r\\npermutation before we got a chance to process it.\"]\n        }), _jsxs(_components.p, {\n          children: [\"What's going to be in the \", _jsx(_components.code, {\n            children: \"check\"\n          }), \" function depends on the problem, but it should\\r\\nverify whether the current permutation satisfies the constraints given in the\\r\\nproblem.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"do {\\r\\n\\tcheck(v); // process or check the current permutation for validity\\r\\n} while(next_permutation(v.begin(), v.end()));\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Each call to \", _jsx(_components.code, {\n            children: \"next_permutation\"\n          }), \" makes a constant number of swaps on average if\\r\\nwe go through all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N!\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo stretchy=\\\"false\\\">!</mo></mrow><annotation encoding=\\\"application/x-tex\\\">N!</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">!</span></span></span></span>\"\n          }), \" permutations of size \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n          }), \".\"]\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"One small detail is that you need to sort the string before calling\\r\\n\", _jsx(_components.code, {\n              children: \"next_permutation()\"\n            }), \" because the method generates strings in lexicographical\\r\\norder. If the string isn't sorted, then strings which are lexicographically\\r\\nsmaller than the initial string won't be generated.\"]\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\nusing namespace std;\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tstring s;\\r\\n\\tcin >> s;\\r\\n\\tvector<string> perms;\\r\\n\\tsort(s.begin(), s.end());\\r\\n\\tdo\\r\\n\\t{\\r\\n\\t\\tperms.push_back(s);\\r\\n\\t}\\r\\n\\twhile (next_permutation(s.begin(), s.end()));\\r\\n\\tcout << perms.size() << endl;\\r\\n\\tfor (string perm : perms)\\r\\n\\t{\\r\\n\\t\\tcout << perm << endl;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h4, {\n          id: \"generating-permutations-using-itertoolspermutations\",\n          children: [_jsx(_components.a, {\n            href: \"#generating-permutations-using-itertoolspermutations\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Generating Permutations Using \", _jsx(_components.a, {\n            href: \"https://docs.python.org/3/library/itertools.html#itertools.permutations\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"itertools.permutations\"\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"Since \", _jsx(_components.code, {\n            children: \"itertools.permutations\"\n          }), \" treats elements as unique based on position, not\\r\\nvalue, it returns all permutations, with repeats. Putting the returned tuples in\\r\\na set can filter out duplicates, and since tuples are returned, we need to join\\r\\nthe characters into a string.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"import itertools\\r\\ns = input()\\r\\n# perms is a sorted list of all the permutations of the given string\\r\\nperms = sorted(set(itertools.permutations(s)))\\r\\nprint(len(perms))\\r\\nfor perm in perms:\\r\\n\\tprint(\\\"\\\".join(perm))\\n\"\n          })\n        })]\n      }), _jsx(JavaSection, {})]\n    }), \"\\n\", \"\\n\", \"\\n\", _jsxs(_components.h2, {\n      id: \"backtracking\",\n      children: [_jsx(_components.a, {\n        href: \"#backtracking\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Backtracking\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"back\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"resources-1\",\n      children: [_jsx(_components.a, {\n        href: \"#resources-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"5.3 - Backtracking\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"code and explanation for focus problem\"\n        })\n      }), _jsx(Resource, {\n        source: \"CP2\",\n        title: \"3.2 - Complete Search\",\n        children: _jsx(_components.p, {\n          children: \"iterative vs recursive complete search\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---chessboard--queens\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---chessboard--queens\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Chessboard & Queens\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"using-next_permutation\",\n      children: [_jsx(_components.a, {\n        href: \"#using-next_permutation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Using \", _jsx(_components.code, {\n        children: \"next_permutation\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since no two queens can be in the same column, let's generate a permutation of\\r\\nlength \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"8\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>8</mn></mrow><annotation encoding=\\\"application/x-tex\\\">8</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">8</span></span></span></span>\"\n      }), \". Then, the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">p_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" represents the column that the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \"-th queen goes on.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By generating all permutations, we can quickly test all possible placements, and\\r\\ncount how many are valid.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To make the implementation easier, we can observe that some bottom-left to\\r\\ntop-right diagonal can be represented as all squares \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i, j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo separator=\\\"true\\\">,</mo><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i, j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \" such that\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i + j = S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>+</mo><mi>j</mi><mo>=</mo><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i + j = S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7429em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \" for some \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \". Similarly, some bottom-right to top-left diagonal can\\r\\nbe represented as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i + 7 - j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>7</mn><mo>−</mo><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i + 7 - j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7429em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \" if \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i, j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo separator=\\\"true\\\">,</mo><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i, j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \" are zero-indexed.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nbool ok[8][8];\\r\\n\\r\\nint ans = 0;\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\tstring s; cin >> s;\\r\\n\\t\\tfor (int j = 0; j < 8; j++) {\\r\\n\\t\\t\\tok[i][j] = (s[j] == '.');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tvi vals(8);\\r\\n\\r\\n\\tiota(all(vals), 0); //set vals to 0 1 ... 7\\r\\n\\r\\n\\tdo {\\r\\n\\t\\tbool works = true;\\r\\n\\t\\tbool blocked[16];\\r\\n\\t\\tfor(int i = 0; i < 8; i++){\\r\\n\\t\\t\\tif(!ok[i][vals[i]]){\\r\\n\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t//first mark all squares as not blocked\\r\\n\\t\\tmemset(blocked, false, sizeof(blocked));\\r\\n\\t\\tfor(int i = 0; i < 8; i++){\\r\\n\\t\\t\\tif(blocked[i + vals[i]]){\\r\\n\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tblocked[i + vals[i]] = true; //mark this diagonal\\r\\n\\t\\t}\\r\\n\\t\\tmemset(blocked, false, sizeof(blocked));\\r\\n\\t\\tfor(int i = 0; i < 8; i++){\\r\\n\\t\\t\\tif(blocked[i + 7 - vals[i]]){\\r\\n\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tblocked[i + 7 - vals[i]] = true;\\r\\n\\t\\t}\\r\\n\\t\\tif(works) ++ans;\\r\\n\\t} while(next_permutation(all(vals)));\\r\\n\\r\\n\\tcout << ans << '\\\\n';\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Chessboard {\\r\\n\\tpublic static boolean ok[][] = new boolean[8][8];\\r\\n\\tpublic static List<Integer> perm = new ArrayList<>();\\r\\n\\tpublic static boolean[] chosen = new boolean[8];\\r\\n\\tpublic static int ans = 0;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\t\\tString str = io.next();\\r\\n\\t\\t\\tfor (int j = 0; j < 8; j++) {\\r\\n\\t\\t\\t\\tok[i][j] = (str.charAt(j) == '.');\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tgenperm();\\r\\n\\t\\tio.println(ans);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tpublic static void genperm() {\\r\\n\\t\\tif (perm.size() == 8) {\\r\\n\\t\\t\\tboolean works = true;\\r\\n\\t\\t\\tboolean blocked[] = new boolean[16];\\r\\n\\t\\t\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\t\\t\\tif (!ok[i][perm.get(i)]) {\\r\\n\\t\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\t\\t\\tif (blocked[i + perm.get(i)]) {\\r\\n\\t\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tblocked[i + perm.get(i)] = true; //mark this diagonal\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tArrays.fill(blocked, false);\\r\\n\\t\\t\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\t\\t\\tif (blocked[i + 7 - perm.get(i)]) {\\r\\n\\t\\t\\t\\t\\tworks = false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tblocked[i + 7 - perm.get(i)] = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (works) ans++;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tfor (int i = 0; i < 8; i++) {\\r\\n\\t\\t\\t\\tif (chosen[i]) continue;\\r\\n\\t\\t\\t\\tchosen[i] = true;\\r\\n\\t\\t\\t\\tperm.add(i);\\r\\n\\t\\t\\t\\tgenperm();\\r\\n\\t\\t\\t\\tchosen[i] = false;\\r\\n\\t\\t\\t\\tperm.remove(perm.size() - 1);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"using-backtracking\",\n      children: [_jsx(_components.a, {\n        href: \"#using-backtracking\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Using Backtracking\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"According to CPH:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"A backtracking algorithm begins with an empty solution and extends the\\r\\nsolution step by step. The search recursively goes through all different ways\\r\\nhow a solution can be constructed.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since the bounds are small, we can recursively backtrack over all ways to place\\r\\nthe queens, storing the current state of the board.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Then, we can try to place a queen at all squares \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x, y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo separator=\\\"true\\\">,</mo><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x, y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n      }), \" if it isn't attacked by\\r\\na queen or blocked and recurse, before removing this queen and backtracking.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Finally, when we have placed all the queens and the board's state is valid, then\\r\\nincrement the answer.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"string g[8];\\r\\nbool sum[15], dif[15], c[8];\\r\\nint ans = 0;\\r\\n\\r\\nvoid dfs(int r) { // place queen in r-th row\\r\\n\\tif (r == 8) {\\r\\n\\t\\t++ans; // found valid placement\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\tfor (int i = 0; i < 8; ++i) {\\r\\n\\t\\tif (g[r][i] == '.' && !c[i] && !sum[i + r] && !dif[i - r + 7]) {\\r\\n\\t\\t\\tc[i] = sum[i + r] = dif[i - r + 7] = true;\\r\\n\\t\\t\\tdfs(r + 1);\\r\\n\\t\\t\\tc[i] = sum[i + r] = dif[i - r + 7] = false;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tfor (int i = 0; i < 8; ++i) cin >> g[i];\\r\\n\\tdfs(0);\\r\\n\\tcout << ans;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Main {\\r\\n\\tstatic String g[];\\r\\n\\tstatic boolean sum[], dif[], c[];\\r\\n\\tstatic int ans = 0;\\r\\n\\r\\n\\tstatic void dfs(int r) { //place queen in row r\\r\\n\\t\\tif (r == 8) {\\r\\n\\t\\t\\t++ans;\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < 8; ++i) {\\r\\n\\t\\t\\tif (g[r].charAt(i) == '.' && !c[i] && !sum[i + r] && !dif[i - r + 7]) {\\r\\n\\t\\t\\t\\tc[i] = sum[i + r] = dif[i - r + 7] = true;\\r\\n\\t\\t\\t\\tdfs(r + 1);\\r\\n\\t\\t\\t\\tc[i] = sum[i + r] = dif[i - r + 7] = false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tg = new String[8];\\r\\n\\t\\tsum = new boolean[15]; dif = new boolean[15]; c = new boolean[8];\\r\\n\\t\\tfor (int i = 0; i < 8; ++i) {\\r\\n\\t\\t\\tg[i] = io.next();\\r\\n\\t\\t}\\r\\n\\t\\tdfs(0);\\r\\n\\t\\tio.println(ans);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"g = [input() for i in range(8)]\\r\\nd1 = [0] * 15\\r\\nd2 = [0] * 15\\r\\nc = [0] * 8\\r\\nans = 0\\r\\ndef dfs(r): # place queen in r-th row\\r\\n\\tif r == 8:\\r\\n\\t\\tans += 1\\r\\n\\telse:\\r\\n\\t\\tfor i in range(8):\\r\\n\\t\\t\\tif g[r][i] == '*':\\r\\n\\t\\t\\t\\tcontinue\\r\\n\\t\\t\\tif c[i] or d1[r + i] or d2[i - r + 7]:\\r\\n\\t\\t\\t\\tcontinue\\r\\n\\t\\t\\tc[i] = d1[r + i] = d2[i - r + 7] = 1\\r\\n\\t\\t\\tdfs(r + 1)\\r\\n\\t\\t\\tc[i] = d1[r + i] = d2[i - r + 7] = 0\\r\\ndfs(0)\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"pruning\",\n      children: [_jsx(_components.a, {\n        href: \"#pruning\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Pruning\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"back2\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Both of the resources below describe this well so I won't repeat it here.\"\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"5.4 - Pruning the search\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"code and explanation for focus problem\"\n        })\n      }), _jsx(Resource, {\n        source: \"CP2\",\n        title: \"3.2 - Complete Search\",\n        children: _jsx(_components.p, {\n          children: \"pruning tips\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"None of these require pruning.\"\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"gen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find more problems at the CP2 link given above or at\\r\\n\", _jsx(_components.a, {\n        href: \"https://train.usaco.org/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"USACO Training\"\n      }), \". However, these sorts of problems\\r\\nappear much less frequently then they once did.\"]\n    }), \"\\n\", _jsx(IncompleteSection, {\n      children: _jsx(_components.p, {\n        children: \"make code consistent, improve some of these explanations\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(PySection, {\n        children: _jsxs(Quiz, {\n          children: [_jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of printing each element of all of the permutations of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Consider how many permutations there are in total\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(2^n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2^n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Remember that permutations and subsets are different\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n!)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n!)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: It also takes time to generate the permutations and print each element of the permutation\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: Both recursion and \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\texttt{next\\\\_permutation}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n                  }), \" take \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  }), \" time and there are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n!\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo stretchy=\\\"false\\\">!</mo></mrow><annotation encoding=\\\"application/x-tex\\\">n!</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span></span></span></span>\"\n                  }), \" permutations, so the total time complexity is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"For what size of \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" could we expect a solution that runs through all of the subsets of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" under reasonable time constraints?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: There are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" subsets of \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" numbers. \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{10^9}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{10^9}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9869em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9869em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">1</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" has around 301030000 digits which would take well until the heat death of the universe to finish generating all the subsets!\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^4\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n = 10^4\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n = 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" is still too large\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 22\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>22</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 22</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">22</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: This is just about right: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{22} \\\\approx 10^7\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mn>22</mn></msup><mo>≈</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{22} \\\\approx 10^7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">22</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">7</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \", which is a bit less than the number of computations that the grading server can run in a second (which is around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"10^8\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^8</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">8</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \").\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: It's definitely possible to run a \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" solution for \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 10\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                  }), \". However, we can go larger, up to around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 25\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>25</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 25</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">25</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"Why are iterative methods of generating permutations and subsets like \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{next\\\\_permutation}\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n              }), \" and bitmasking preferable over recursive implementations?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion often runs into the issue of stack size, which can cause unexpected runtime errors\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: A hallmark of problems featuring complete search with permutations/subsets is that \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" is small, usually \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\leq 20\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n                  }), \". This means that recursion won't go particularly deep, and there won't be any issues with stack size.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: \"Iterative methods are easier to implement and are often faster and less buggy.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct: Having to code your own permutation/subset function can be inefficient in a timed contest environment. It's definitely worth learning iterative methods to save valuable time on debugging.\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion is so slow that it will often cause Time Limit Exceeded even for small arrays and should be avoided at all costs.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Although recursion is slowing than iterative methods, it's still fast enough to pass most problems\"\n                })\n              })]\n            })]\n          })]\n        })\n      }), _jsx(JavaSection, {\n        children: _jsxs(Quiz, {\n          children: [_jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of generating all the permutations of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Consider how many permutations there are in total\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(2^n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2^n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Remember that permutations and subsets are different\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n!)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n!)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: It also takes time to generate the permutations\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: Both recursion and \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\texttt{next\\\\_permutation}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n                  }), \" take \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  }), \" time and there are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n!\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo stretchy=\\\"false\\\">!</mo></mrow><annotation encoding=\\\"application/x-tex\\\">n!</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span></span></span></span>\"\n                  }), \" permutations, so the total time complexity is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"For what size of \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" could we expect a solution that runs through all of the subsets of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" under reasonable time constraints?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: There are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" subsets of \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" numbers. \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{10^9}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{10^9}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9869em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9869em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">1</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" has around 301030000 digits which would take well until the heat death of the universe to finish generating all the subset!\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^4\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n = 10^4\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n = 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" is still too large\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 22\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>22</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 22</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">22</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: This is just about right: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{22} \\\\approx 10^7\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mn>22</mn></msup><mo>≈</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{22} \\\\approx 10^7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">22</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">7</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \", which is a bit less than the number of computations that the grading server can run in a second (which is around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"10^8\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^8</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">8</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \").\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: It's definitely possible to run a \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" solution for \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 10\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                  }), \". However, we can go larger, up to around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 25\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>25</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 25</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">25</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"Why are iterative methods of generating permutations and subsets like \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{next\\\\_permutation}\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n              }), \" and bitmasking preferable over recursive implementations?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion often runs into the issue of stack size, which can cause unexpected runtime errors\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: A hallmark of problems featuring complete search with permutations/subsets is that \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" is small, usually \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\leq 20\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n                  }), \". This means that recursion won't go particularly deep, and there won't be any issues with stack size.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: \"Iterative methods are easier to implement and are often faster and less buggy.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct: Having to code your own permutation/subset function can be inefficient in a timed contest environment. It's definitely worth learning iterative methods to save valuable time on debugging.\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion is so slow that it will often cause Time Limit Exceeded even for small arrays and should be avoided at all costs.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Although recursion is slowing than iterative methods, it's still fast enough to pass most problems\"\n                })\n              })]\n            })]\n          })]\n        })\n      }), _jsx(CPPSection, {\n        children: _jsxs(Quiz, {\n          children: [_jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of generating all the permutations of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Consider how many permutations there are in total\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(2^n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2^n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Remember that permutations and subsets are different\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n!)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n!)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: It also takes time to generate the permutations\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: Both recursion and \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\texttt{next\\\\_permutation}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n                  }), \" take \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  }), \" time and there are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n!\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo stretchy=\\\"false\\\">!</mo></mrow><annotation encoding=\\\"application/x-tex\\\">n!</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span></span></span></span>\"\n                  }), \" permutations, so the total time complexity is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\mathcal{O}(n! \\\\cdot n)\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">!</mo><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n! \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">!</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"For what size of \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" could we expect a solution that runs through all of the subsets of an array of length \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"n\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n              }), \" under reasonable time constraints?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: There are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" subsets of \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" numbers. \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{10^9}\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{10^9}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9869em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9869em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">1</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" has around 301030000 digits which would take well until the heat death of the universe to finish generating all the subsets!\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10^4\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n = 10^4\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">n = 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" is still too large\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 22\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>22</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 22</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">22</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: This is just about right: \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^{22} \\\\approx 10^7\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mn>22</mn></msup><mo>≈</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{22} \\\\approx 10^7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">22</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">7</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \", which is a bit less than the number of computations that the grading server can run in a second (which is around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"10^8\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^8</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">8</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \").\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"n \\\\leq 10\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct: It's definitely possible to run a \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2^n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n                  }), \" solution for \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 10\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                  }), \". However, we can go larger, up to around \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n \\\\leq 25\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>25</mn></mrow><annotation encoding=\\\"application/x-tex\\\">n \\\\leq 25</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">25</span></span></span></span>\"\n                  })]\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"Why are iterative methods of generating permutations and subsets like \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{next\\\\_permutation}\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">next_permutation</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{next\\\\_permutation}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">next_permutation</span></span></span></span></span>\"\n              }), \" and bitmasking preferable over recursive implementations?\"]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion often runs into the issue of stack size, which can cause unexpected runtime errors\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Incorrect: A hallmark of problems featuring complete search with permutations/subsets is that \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"n\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n                  }), \" is small, usually \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"\\\\leq 20\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n                  }), \". This means that recursion won't go particularly deep, and there won't be any issues with stack size.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: \"Iterative methods are easier to implement and are often faster and less buggy.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct: Having to code your own permutation/subset function can be inefficient in a timed contest environment. It's definitely worth learning iterative methods to save valuable time on debugging.\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"Recursion is so slow that it will often cause Time Limit Exceeded even for small arrays and should be avoided at all costs.\"\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: Although recursion is slowing than iterative methods, it's still fast enough to pass most problems\"\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"The following code is meant to generate all subsets of a given array:\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"int A[] = {1, 2, 3, 4, 5};\\r\\n\\r\\nvoid generateSubsets(int i, vector<int> &subset) {\\r\\n\\tif (i == 5) {\\r\\n\\t\\tfor (int x : subset)\\r\\n\\t\\t\\tcout << x << ' ';\\r\\n\\t\\tcout << '\\\\n';\\r\\n\\t}\\r\\n\\r\\n\\tsubset.push_back(A[i]);\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n\\tsubset.pop_back();\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n}\\n\"\n              })\n            }), _jsx(_components.p, {\n              children: \"There is an error with this code that causes it to crash. What does the corrected code look like?\"\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.pre, {\n                children: _jsx(_components.code, {\n                  className: \"language-cpp\",\n                  children: \"void generateSubsets(int i, vector<int> &subset) {\\r\\n\\tif (i == 5) {\\r\\n\\t\\tfor (int x : subset)\\r\\n\\t\\t\\tcout << x << ' ';\\r\\n\\t\\tcout << '\\\\n';\\r\\n\\t}\\r\\n\\r\\n\\t// must always go to empty subset first\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n\\tsubset.push_back(A[i]);\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n}\\n\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: This is another way of generating subsets, but it's not the error!\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.pre, {\n                children: _jsx(_components.code, {\n                  className: \"language-cpp\",\n                  children: \"void generateSubsets(int i, vector<int> &subset) {\\r\\n\\tif (i == 4) { // incorrect ending index\\r\\n\\t\\tfor (int x : subset)\\r\\n\\t\\t\\tcout << x << ' ';\\r\\n\\t\\tcout << '\\\\n';\\r\\n\\t}\\r\\n\\r\\n\\tsubset.push_back(A[i]);\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n\\tsubset.pop_back();\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n}\\n\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Incorrect: This doesn't stop the error and prevents us from adding the last number to any subset\"\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.pre, {\n                children: _jsx(_components.code, {\n                  className: \"language-cpp\",\n                  children: \"void generateSubsets(int i, vector<int> &subset) {\\r\\n\\tif (i == 5) {\\r\\n\\t\\tfor (int x : subset)\\r\\n\\t\\t\\tcout << x << ' ';\\r\\n\\t\\tcout << '\\\\n';\\r\\n\\t\\treturn; // missing return statement\\r\\n\\t}\\r\\n\\r\\n\\tsubset.push_back(A[i]);\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n\\tsubset.pop_back();\\r\\n\\tgenerateSubsets(i + 1, subset);\\r\\n}\\n\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct: After we finish printing (or checking) the subset, remember to always return immediately. Otherwise, it causes nasty errors that often crashes the program.\"\n                })\n              })]\n            })]\n          })]\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  contributors,\n  description,\n  frequency,\n  prerequisites,\n  default: MDXContent\n};\n","frontmatter":{"title":"Complete Search with Recursion","author":"Many","contributors":"Darren Yao, Sam Zhang, Michael Cao, Andrew Wang, Benjamin Qi, Dong Liu, Maggie Liu, Dustin Miao","id":"complete-rec","prerequisites":["intro-complete"],"description":"Includes generating subsets and permutations.","frequency":1},"parent":{"name":"Complete_Rec","relativePath":"2_Bronze/Complete_Rec.mdx"},"fields":{"division":"bronze"},"toc":{"cpp":[{"depth":2,"value":"Subsets","slug":"subsets"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Apple Division","slug":"solution---apple-division"},{"depth":4,"value":"Generating Subsets Recursively","slug":"generating-subsets-recursively"},{"depth":4,"value":"Generating Subsets with Bitmasks","slug":"generating-subsets-with-bitmasks"},{"depth":2,"value":"Permutations","slug":"permutations"},{"depth":3,"value":"Lexicographical Order","slug":"lexicographical-order"},{"depth":3,"value":"Solution - Creating Strings I","slug":"solution---creating-strings-i"},{"depth":4,"value":"Generating Permutations Recursively","slug":"generating-permutations-recursively"},{"depth":4,"value":"Generating Permutations Using next_permutation","slug":"generating-permutations-using-next_permutation"},{"depth":2,"value":"Backtracking","slug":"backtracking"},{"depth":3,"value":"Resources","slug":"resources-1"},{"depth":3,"value":"Solution - Chessboard &amp; Queens","slug":"solution---chessboard--queens"},{"depth":4,"value":"Using next_permutation","slug":"using-next_permutation"},{"depth":4,"value":"Using Backtracking","slug":"using-backtracking"},{"depth":4,"value":"Pruning","slug":"pruning"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Subsets","slug":"subsets"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Apple Division","slug":"solution---apple-division"},{"depth":4,"value":"Generating Subsets Recursively","slug":"generating-subsets-recursively"},{"depth":4,"value":"Generating Subsets with Bitmasks","slug":"generating-subsets-with-bitmasks"},{"depth":2,"value":"Permutations","slug":"permutations"},{"depth":3,"value":"Lexicographical Order","slug":"lexicographical-order"},{"depth":3,"value":"Solution - Creating Strings I","slug":"solution---creating-strings-i"},{"depth":4,"value":"Generating Permutations Recursively","slug":"generating-permutations-recursively"},{"depth":2,"value":"Backtracking","slug":"backtracking"},{"depth":3,"value":"Resources","slug":"resources-1"},{"depth":3,"value":"Solution - Chessboard &amp; Queens","slug":"solution---chessboard--queens"},{"depth":4,"value":"Using next_permutation","slug":"using-next_permutation"},{"depth":4,"value":"Using Backtracking","slug":"using-backtracking"},{"depth":4,"value":"Pruning","slug":"pruning"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Subsets","slug":"subsets"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Apple Division","slug":"solution---apple-division"},{"depth":4,"value":"Generating Subsets Recursively","slug":"generating-subsets-recursively"},{"depth":4,"value":"Generating Subsets with Bitmasks","slug":"generating-subsets-with-bitmasks"},{"depth":2,"value":"Permutations","slug":"permutations"},{"depth":3,"value":"Lexicographical Order","slug":"lexicographical-order"},{"depth":3,"value":"Solution - Creating Strings I","slug":"solution---creating-strings-i"},{"depth":4,"value":"Generating Permutations Recursively","slug":"generating-permutations-recursively"},{"depth":4,"value":"Generating Permutations Using itertools.permutations","slug":"generating-permutations-using-itertoolspermutations"},{"depth":2,"value":"Backtracking","slug":"backtracking"},{"depth":3,"value":"Resources","slug":"resources-1"},{"depth":3,"value":"Solution - Chessboard &amp; Queens","slug":"solution---chessboard--queens"},{"depth":4,"value":"Using next_permutation","slug":"using-next_permutation"},{"depth":4,"value":"Using Backtracking","slug":"using-backtracking"},{"depth":4,"value":"Pruning","slug":"pruning"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"subset","problems":[{"uniqueId":"cses-1623","name":"Apple Division","url":"https://cses.fi/problemset/task/1623","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Complete Search","Recursion","Subsets"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/bronze/complete-rec#problem-cses-1623","sketch":null}}]},{"listId":"permSam","problems":[{"uniqueId":"cses-1622","name":"Creating Strings I","url":"https://cses.fi/problemset/task/1622","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Complete Search","Recursion","Permutation"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/bronze/complete-rec#problem-cses-1622","sketch":null}}]},{"listId":"back","problems":[{"uniqueId":"cses-1624","name":"Chessboard & Queens","url":"https://cses.fi/problemset/task/1624","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Complete Search","Recursion","Permutation"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/bronze/complete-rec#problem-cses-1624","sketch":null}}]},{"listId":"back2","problems":[{"uniqueId":"cses-1625","name":"Grid Paths","url":"https://cses.fi/problemset/task/1625","source":"CSES","difficulty":"Insane","isStarred":false,"tags":["Complete Search","Recursion","Pruning"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"gen","problems":[{"uniqueId":"usaco-965","name":"Livestock Lineup","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=965","source":"Bronze","difficulty":"Hard","isStarred":true,"tags":["Complete Search","Recursion","Permutation"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-857","name":"Back and Forth","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=857","source":"Bronze","difficulty":"Hard","isStarred":false,"tags":["Complete Search","Recursion"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"complete-rec"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}