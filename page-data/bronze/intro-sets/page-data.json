{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/bronze/intro-sets",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"intro-sets\", title = \"Introduction to Sets & Maps\", author = \"Darren Yao, Benjamin Qi, Allen Li, Jesse Choe, Nathan Gong\", description = \"Maintaining collections of distinct elements/keys with sets and maps.\", frequency = 2, prerequisites = [\"intro-sorting\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    em: \"em\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    h4: \"h4\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Problems: _missingComponent(\"Problems\"),\n    Quiz: _missingComponent(\"Quiz\")\n  }, _props.components), {Resources, Resource, LanguageSection, CPPSection, JavaSection, PySection, HeaderLink, FocusProblem, MATHSPAN, Problems, Quiz, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"4.4 - Sets & Maps\",\n        children: _jsx(_components.p, {\n          children: \"module is based off this\"\n        })\n      }), _jsx(Resource, {\n        source: \"CPH\",\n        title: \"4.2, 4.3 - Sets, Maps\",\n        children: _jsx(_components.p, {\n          children: \"covers similar material\"\n        })\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsxs(_components.p, {\n          children: [\"C++ contains two versions of sets and maps; one using \", _jsx(_components.strong, {\n            children: \"sorting\"\n          }), \" and the other\\r\\nusing \", _jsx(_components.strong, {\n            children: \"hashing\"\n          }), \".\"]\n        })\n      }), _jsx(JavaSection, {\n        children: _jsxs(_components.p, {\n          children: [\"Java contains two versions of sets and maps; one using \", _jsx(_components.strong, {\n            children: \"sorting\"\n          }), \" and the other\\r\\nusing \", _jsx(_components.strong, {\n            children: \"hashing\"\n          }), \".\"]\n        })\n      }), _jsx(PySection, {\n        children: _jsxs(_components.p, {\n          children: [\"Python has built-in sets and maps, however they do \", _jsx(_components.em, {\n            children: \"not\"\n          }), \" store elements in\\r\\nsorted order.\"]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sets\",\n      children: [_jsx(_components.a, {\n        href: \"#sets\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Sets\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"dis\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.strong, {\n        children: \"set\"\n      }), \" is a collection of elements that contains no duplicates.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"unordered-sets\",\n          children: [_jsx(_components.a, {\n            href: \"#unordered-sets\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Unordered Sets\"]\n        }), _jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"unordered\"\n          }), \" sets, elements are stored in an arbitrary order through hashing.\\r\\nInsertions, deletions, and searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \" (with a high\\r\\nconstant factor). Unordered sets are implemented by\\r\\n\", _jsx(_components.a, {\n            href: \"https://www.cplusplus.com/reference/unordered_set/unordered_set/\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"std:unordered_set\"\n            })\n          }), \"\\r\\nin the \", _jsx(_components.code, {\n            children: \"<unordered_set>\"\n          }), \" header.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Some operations on an \", _jsx(_components.code, {\n            children: \"std::unordered_set\"\n          }), \" named \", _jsx(_components.code, {\n            children: \"s\"\n          }), \" include:\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"s.insert(x)\"\n            }), \", which adds the element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"s\"\n            }), \" if not already present.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"s.erase(x)\"\n            }), \", which removes the element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" from \", _jsx(_components.code, {\n              children: \"s\"\n            }), \" if present.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"s.count(x)\"\n            }), \", which returns \", _jsx(_components.code, {\n              children: \"1\"\n            }), \" if \", _jsx(_components.code, {\n              children: \"s\"\n            }), \" contains \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"0\"\n            }), \" if it doesn't.\"]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Unordered sets work with primitive types, but require a\\r\\n\", _jsx(_components.a, {\n            href: \"/gold/unordered-map#custom-hashing\",\n            children: \"custom hash function\"\n          }), \"\\r\\nfor structures/classes like vectors and pairs.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"unordered_set<int> s;\\r\\ns.insert(1);  // {1}\\r\\ns.insert(4);  // {1, 4}\\r\\ns.insert(2);  // {1, 4, 2}\\r\\ns.insert(1);  // does nothing because 1's already in the set\\r\\ncout << s.count(1) << endl;  // 1\\r\\ns.erase(1);  // {2, 4}\\r\\ncout << s.count(5) << endl;  // 0\\r\\ns.erase(0);  // does nothing because 0 wasn't in the set\\n\"\n          })\n        }), _jsxs(_components.h3, {\n          id: \"sorted-sets\",\n          children: [_jsx(_components.a, {\n            href: \"#sorted-sets\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Sorted Sets\"]\n        }), _jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"sorted\"\n          }), \" sets, the elements are sorted in order of element. Insertions,\\r\\ndeletions, and searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(\\\\log N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \", where \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n          }), \" is the number\\r\\nof elements in the set. Sorted sets are implemented by\\r\\n\", _jsx(_components.a, {\n            href: \"https://www.cplusplus.com/reference/set/set/\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"std:set\"\n            })\n          }), \" in the \", _jsx(_components.code, {\n            children: \"<set>\"\n          }), \" header.\"]\n        }), _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"std::set\"\n          }), \" includes all the essential operations that \", _jsx(_components.code, {\n            children: \"std::unordered_set\"\n          }), \" has\\r\\n(including insertion, deletion, searches, etc.), but also some additional ones.\\r\\nRefer to the\\r\\n\", _jsx(_components.a, {\n            href: \"/silver/intro-sorted-sets\",\n            children: \"More Operations on Sorted Sets\"\n          }), \"\\r\\nmodule for more detail.\"]\n        }), _jsx(_components.p, {\n          children: \"You can iterate through a set in sorted order using a for-each loop.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"set<int> s;\\r\\ns.insert(1);  // [1]\\r\\ns.insert(4);  // [1, 4]\\r\\ns.insert(2);  // [1, 2, 4]\\r\\n\\r\\n// Outputs 1, 2, and 4 on separate lines\\r\\nfor (int element : s) {\\r\\n\\tcout << element << endl;\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"unordered-sets-1\",\n          children: [_jsx(_components.a, {\n            href: \"#unordered-sets-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Unordered Sets\"]\n        }), _jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"unordered\"\n          }), \" sets, elements are stored in an arbitrary order. Insertions,\\r\\ndeletions, and searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \" (with a high constant factor).\\r\\nUnordered sets are implemented in Java by the\\r\\n\", _jsx(_components.a, {\n            href: \"https://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"HashSet\"\n            })\n          }), \"\\r\\nclass (which comes from the \", _jsx(_components.code, {\n            children: \"java.util\"\n          }), \" library).\"]\n        }), _jsxs(_components.p, {\n          children: [\"Some operations on a \", _jsx(_components.code, {\n            children: \"HashSet\"\n          }), \" named \", _jsx(_components.code, {\n            children: \"set\"\n          }), \" include:\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"set.add(x)\"\n            }), \", which adds the element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"set\"\n            }), \" if not already present.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"set.remove(x)\"\n            }), \", which removes the element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" from \", _jsx(_components.code, {\n              children: \"set\"\n            }), \" if present.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"set.contains(x)\"\n            }), \", which checks whether \", _jsx(_components.code, {\n              children: \"set\"\n            }), \" contains the element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \".\"]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Unordered sets work with primitive types and their object wrappers, but require\\r\\na \", _jsx(_components.a, {\n            href: \"/gold/unordered-map#custom-hashing\",\n            children: \"custom hash function\"\n          }), \"\\r\\nfor custom classes.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Set<Integer> set = new HashSet<>();\\r\\nset.add(1);  // {1}\\r\\nset.add(4);  // {1, 4}\\r\\nset.add(2);  // {1, 4, 2}\\r\\nset.add(1);  // {1, 4, 2}\\r\\n// the add method did nothing because 1 was already in the set\\r\\nSystem.out.println(set.contains(1));  // true\\r\\nset.remove(1);  // {4, 2}\\r\\nSystem.out.println(set.contains(5));  // false\\r\\nset.remove(0);  // does nothing because 0 wasn't in the set\\n\"\n          })\n        }), _jsxs(_components.h3, {\n          id: \"sorted-sets-1\",\n          children: [_jsx(_components.a, {\n            href: \"#sorted-sets-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Sorted Sets\"]\n        }), _jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"sorted\"\n          }), \" sets, the elements are stored in order. Insertions, deletions, and\\r\\nsearches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(\\\\log N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \", where \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n          }), \" is the number of elements in\\r\\nthe set. Sorted sets are implemented in Java by the \", _jsx(_components.code, {\n            children: \"TreeSet\"\n          }), \" class.\"]\n        }), _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"TreeSet\"\n          }), \" includes all the operations that \", _jsx(_components.code, {\n            children: \"HashSet\"\n          }), \" has, but also includes some\\r\\nadditional ones. Refer to the\\r\\n\", _jsx(_components.a, {\n            href: \"/silver/intro-sorted-sets\",\n            children: \"More Operations on Sorted Sets\"\n          }), \"\\r\\nmodule for more detail.\"]\n        }), _jsxs(_components.p, {\n          children: [\"You can iterate through a \", _jsx(_components.code, {\n            children: \"TreeSet\"\n          }), \" in sorted order using a for-each loop.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Set<Integer> set = new TreeSet<>();\\r\\nset.add(1);  // {1}\\r\\nset.add(4);  // {1, 4}\\r\\nset.add(2);  // {1, 2, 4}\\r\\n\\r\\n// Outputs 1, 2, and 4 on separate lines\\r\\nfor (int element : set) {\\r\\n\\tSystem.out.println(element);\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.p, {\n          children: [\"Python's built-in \", _jsx(_components.code, {\n            children: \"set\"\n          }), \" uses hashing to support \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \" insertion,\\r\\ndeletion, and searches. Some operations on a Python \", _jsx(_components.code, {\n            children: \"set\"\n          }), \" named \", _jsx(_components.code, {\n            children: \"s\"\n          }), \" include:\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"s.add(x)\"\n            }), \": adds element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"s\"\n            }), \" if not already present\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"s.remove(x)\"\n            }), \": removes an element \", _jsx(_components.code, {\n              children: \"x\"\n            }), \" from \", _jsx(_components.code, {\n              children: \"set\"\n            }), \" if present\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"x in s\"\n            }), \": checks whether \", _jsx(_components.code, {\n              children: \"s\"\n            }), \" contains the element \", _jsx(_components.code, {\n              children: \"x\"\n            })]\n          }), \"\\n\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"s = set()\\r\\ns.add(1) # {1}\\r\\ns.add(4) # {1, 4}\\r\\ns.add(2) # {1, 4, 2}\\r\\ns.add(1) # {1, 4, 2}\\r\\n# the add method did nothing because 1 was already in the set\\r\\nprint(1 in s) # True\\r\\ns.remove(1) # {4, 2}\\r\\nprint(5 in s) # False\\r\\ns.remove(0) # {4, 2}\\r\\n# if the element to be removed does not exist, nothing happens\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---distinct-numbers\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---distinct-numbers\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Distinct Numbers\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This problem asks us to calculate the number of distinct values in a given list.\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"method-1---set\",\n      children: [_jsx(_components.a, {\n        href: \"#method-1---set\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 1 - Set\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is probably the easier of the two methods, but requires knowledge of sets.\\r\\nBecause sets only store one copy of each value, we can insert all the numbers\\r\\ninto a set, and then print out the size of the set.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\r\\n\\tset<int> distinctNumbers;\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tint number; cin >> number;\\r\\n\\t\\tdistinctNumbers.insert(number);\\r\\n\\t}\\r\\n\\r\\n\\tcout << distinctNumbers.size() << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"// Source: Daniel\\r\\n\\r\\nimport java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class DistinctNumbers {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tint n = io.nextInt();\\r\\n\\t\\tSet<Integer> set = new HashSet<>();\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tset.add(io.nextInt());\\r\\n\\t\\t}\\r\\n\\t\\tio.println(set.size());\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsxs(PySection, {\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input())  # unused\\r\\nnums = [int(x) for x in input().split()]\\r\\ndistinct_nums = set(nums)\\r\\nprint(len(distinct_nums))\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"We can do this more efficiently by skipping the creation of the list, and use a\\r\\nset comprehension directly:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input())  # unused\\r\\ndistinct_nums = {int(x) for x in input().split()}\\r\\nprint(len(distinct_nums))\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"method-2---sorting\",\n      children: [_jsx(_components.a, {\n        href: \"#method-2---sorting\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 2 - Sorting\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the \", _jsx(_components.a, {\n        href: \"/solutions/cses-1621\",\n        children: \"solution\"\n      }), \" involving sorting.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"maps\",\n      children: [_jsx(_components.a, {\n        href: \"#maps\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Maps\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"ex\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.strong, {\n        children: \"map\"\n      }), \" is a set of entries, each consisting of a \", _jsx(_components.strong, {\n        children: \"key\"\n      }), \" and a \", _jsx(_components.strong, {\n        children: \"value\"\n      }), \". In\\r\\na map, all keys are required to be unique, but values can be repeated. Maps have\\r\\nthree primary methods:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"one to add a specified key-value pairing\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"one to retrieve the value for a given key\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"one to remove a key-value pairing from the map\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"sorted\"\n          }), \" maps, the pairs are sorted in order of key. Insertions, deletions,\\r\\nand searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(\\\\log N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \", where \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n          }), \" is the number of pairs in\\r\\nthe map. In \", _jsx(_components.em, {\n            children: \"unordered\"\n          }), \" maps, the pairs aren't kept in sorted order and all\\r\\ninsertions, deletions, and searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \". Sorted maps are\\r\\nimplemented with \", _jsx(_components.code, {\n            children: \"std::map\"\n          }), \" and unordered maps are implemented with\\r\\n\", _jsx(_components.code, {\n            children: \"std::unordered_map\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"Some operations on an \", _jsx(_components.code, {\n            children: \"std::map\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"std::unordered_map\"\n          }), \" named \", _jsx(_components.code, {\n            children: \"m\"\n          }), \" include:\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"m[key]\"\n            }), \", which returns a reference to the value associated with the key\\r\\n\", _jsx(_components.code, {\n              children: \"key\"\n            }), \".\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"If \", _jsx(_components.code, {\n                  children: \"key\"\n                }), \" is not present in the map, then the value associated with \", _jsx(_components.code, {\n                  children: \"key\"\n                }), \" is\\r\\nconstructed using the default constructor of the value type. For example, if\\r\\nthe value type is \", _jsx(_components.code, {\n                  children: \"int\"\n                }), \", then calling \", _jsx(_components.code, {\n                  children: \"m[key]\"\n                }), \" for a key not within the map\\r\\nsets the value associated with that key to \", _jsx(_components.code, {\n                  children: \"0\"\n                }), \". As another example, if the\\r\\nvalue type is \", _jsx(_components.code, {\n                  children: \"std::string\"\n                }), \", then calling \", _jsx(_components.code, {\n                  children: \"m[key]\"\n                }), \" for a key not within the\\r\\nmap sets the value associated with that key to the empty string. More\\r\\ndiscussion regarding what happens in this case can be found\\r\\n\", _jsx(_components.a, {\n                  href: \"https://stackoverflow.com/questions/10124679/what-happens-if-i-read-a-maps-value-where-the-key-does-not-exist\",\n                  target: \"_blank\",\n                  rel: \"nofollow noopener noreferrer\",\n                  children: \"here\"\n                }), \".\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Alternatively, \", _jsx(_components.code, {\n                  children: \"m.at(key)\"\n                }), \" behaves the same as \", _jsx(_components.code, {\n                  children: \"m[key]\"\n                }), \" if \", _jsx(_components.code, {\n                  children: \"key\"\n                }), \" is\\r\\ncontained within \", _jsx(_components.code, {\n                  children: \"m\"\n                }), \" but throws an exception otherwise.\"]\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"m[key] = value\"\n                }), \" will assign the value \", _jsx(_components.code, {\n                  children: \"value\"\n                }), \" to the key \", _jsx(_components.code, {\n                  children: \"key\"\n                }), \".\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"m.count(key)\"\n            }), \", which returns the number of times the key is in the map\\r\\n(either one or zero), and therefore checks whether a key exists in the map.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"m.erase(key)\"\n            }), \", which removes the map entry associated with the specified key\\r\\nif the key was present in the map.\"]\n          }), \"\\n\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"map<int, int> m;\\r\\nm[1] = 5;  // [(1, 5)]\\r\\nm[3] = 14;  // [(1, 5); (3, 14)]\\r\\nm[2] = 7;  // [(1, 5); (2, 7); (3, 14)]\\r\\nm[0] = -1;  // [(0, -1); (1, 5); (2, 7); (3, 14)]\\r\\nm.erase(2);  // [(0, -1); (1, 5); (3, 14)]\\r\\ncout << m[1] << endl;  // 5\\r\\ncout << m.count(7) << endl;  // 0\\r\\ncout << m.count(1) << endl;  // 1\\r\\ncout << m[2] << endl;  // 0\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"sorted\"\n          }), \" maps, the pairs are sorted in order of key. Insertions, deletions,\\r\\nand searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(\\\\log N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \", where \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"N\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n          }), \" is the number of pairs in\\r\\nthe map.\"]\n        }), _jsxs(_components.p, {\n          children: [\"In \", _jsx(_components.em, {\n            children: \"unordered\"\n          }), \" maps, the pairs aren't kept in sorted order and all insertions,\\r\\ndeletions, and searches are all \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \". Sorted maps are implemented\\r\\nwith \", _jsx(_components.code, {\n            children: \"TreeMap\"\n          }), \" and unordered maps are implemented with \", _jsx(_components.code, {\n            children: \"HashMap\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"In both \", _jsx(_components.code, {\n            children: \"TreeMap\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"HashMap\"\n          }), \", the \", _jsx(_components.code, {\n            children: \"put(key, value)\"\n          }), \" method assigns a value to\\r\\na key and places the key and value pair into the map. The \", _jsx(_components.code, {\n            children: \"get(key)\"\n          }), \" method\\r\\nreturns the value associated with the key. The \", _jsx(_components.code, {\n            children: \"containsKey(key)\"\n          }), \" method checks\\r\\nwhether a key exists in the map. Lastly, \", _jsx(_components.code, {\n            children: \"remove(key)\"\n          }), \" removes the map entry\\r\\nassociated with the specified key.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Map<Integer, Integer> map = new TreeMap<Integer, Integer>();\\r\\nmap.put(1, 5);  // [(1, 5)]\\r\\nmap.put(3, 14);  // [(1, 5); (3, 14)]\\r\\nmap.put(2, 7);  // [(1, 5); (2, 7); (3, 14)]\\r\\nmap.remove(2);  // [(1, 5); (3, 14)]\\r\\nSystem.out.println(map.get(1));  // 5\\r\\nSystem.out.println(map.containsKey(7));  // false\\r\\nSystem.out.println(map.containsKey(1));  // true\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.p, {\n          children: [\"Colloquially, maps are referred to as \", _jsx(_components.strong, {\n            children: \"dicts\"\n          }), \" in python. They act as hash\\r\\nmaps, so they have \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(1)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \" insertion, deletion, and searches.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"d = {}\\r\\nd[1] = 5  # {1: 5}\\r\\nd[3] = 14  # {1: 5, 3: 14}\\r\\nd[2] = 7  # {1: 5, 2: 7, 3: 14}\\r\\ndel d[2]  # {1: 5, 3: 14}\\r\\nprint(d[1])  # 5\\r\\nprint(7 in d)  # False\\r\\nprint(1 in d)  # True\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"iterating-over-maps\",\n      children: [_jsx(_components.a, {\n        href: \"#iterating-over-maps\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Iterating Over Maps\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"An \", _jsx(_components.code, {\n            children: \"std::map\"\n          }), \" stores entries as \", _jsx(_components.a, {\n            href: \"/bronze/intro-ds#pairs--tuples\",\n            children: \"pairs\"\n          }), \" in the\\r\\nform \", _jsx(_components.code, {\n            children: \"{key, value}\"\n          }), \". To iterate over maps, you can use a \", _jsx(_components.code, {\n            children: \"for\"\n          }), \" loop. The \", _jsx(_components.code, {\n            children: \"auto\"\n          }), \"\\r\\nkeyword suffices to iterate over any type of pair (here, \", _jsx(_components.code, {\n            children: \"auto\"\n          }), \" substitutes for\\r\\n\", _jsx(_components.code, {\n            children: \"pair<const int, int>\"\n          }), \").\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"for (const auto& x : m) {\\r\\n\\tcout << x.first << \\\" \\\" << x.second << endl;\\r\\n}\\r\\nfor (auto x : m) {\\r\\n\\tcout << x.first << \\\" \\\" << x.second << endl;\\r\\n}\\r\\n\\r\\n/* both output the following:\\r\\n0 -1\\r\\n1 5\\r\\n3 14\\r\\n*/\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"The first method (iterating over const references) is generally preferred over\\r\\nthe second because the second will make a copy of each element that it iterates\\r\\nover. Additionally, you can pass by reference when iterating over a map,\\r\\nallowing you to modify the values (but not the keys) of the pairs stored in the\\r\\nmap:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"for (auto& x : m) {\\r\\n\\tx.second = 3;\\r\\n}\\r\\nfor (pair<int,int> x : m) {\\r\\n\\tcout << x.first << \\\" \\\" << x.second << endl;\\r\\n}\\r\\n\\r\\n/*\\r\\n0 3\\r\\n1 3\\r\\n3 3\\r\\n*/\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsx(_components.p, {\n          children: \"To iterate over maps, you can use a for-each loop over the keys:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"for (int k : m.keySet()) {\\r\\n\\tSystem.out.println(k + \\\" \\\" + m.get(k));\\r\\n}\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"You can also use a for-each loop over the entries:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"for (Map.Entry entry : m.entrySet()) {\\r\\n\\tSystem.out.println(entry.getKey() + \\\" \\\" + entry.getValue());\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.p, {\n          children: [\"To iterate over \", _jsx(_components.code, {\n            children: \"dict\"\n          }), \"s, there are three options. Dicts will be returned in the\\r\\nsame order of insertion in\\r\\n\", _jsx(_components.a, {\n            href: \"https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Python 3.6+\"\n          }), \".\\r\\nYou can iterate over the keys:\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"for key in d:\\r\\n\\tprint(key)\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"You can iterate over the values:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"for value in d.values():\\r\\n\\tprint(value)\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"You can iterate over the key-value pairs:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"for key, value in d.items():\\r\\n\\tprint(key, value)\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While you are free to change the \", _jsx(_components.em, {\n        children: \"values\"\n      }), \" in a map when iterating over it (as\\r\\ndemonstrated above), it is generally a bad idea to insert or remove elements of\\r\\na map while iterating over it.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(PySection, {\n        children: [_jsx(_components.p, {\n          children: \"For example, the following code attempts to remove every entry from a map, but\\r\\nresults in a runtime error.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"d = {i: i for i in range(10)}\\r\\n\\r\\nfor i in d:\\r\\n\\tdel d[i]\\n\"\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            children: \"Traceback (most recent call last):\\r\\n  File \\\"test.py\\\", line 3, in <module>\\r\\n    for i in d:\\r\\nRuntimeError: dictionary changed size during iteration\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"One way is to get around this is to create a new map.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"d = {i: i for i in range(10)}\\r\\n\\r\\n# only includes every third element\\r\\nd_new = dict(item for i, item in enumerate(d.items()) if i % 3 == 0)\\r\\n\\r\\nprint(\\\"new dict:\\\", d_new)  # new dict: {0: 0, 3: 3, 6: 6, 9: 9}\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"Another is to maintain a list of all the keys you want to remove and remove them\\r\\nafter the iteration finishes:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"d = {i: i for i in range(10)}\\r\\n\\r\\n# removes every third element\\r\\nto_remove = {key for i, key in enumerate(d) if i % 3 == 0}\\r\\n\\r\\nfor key in to_remove:\\r\\n\\tdel d[key]\\r\\n\\r\\nprint(\\\"new dict:\\\", d)  # new dict: {1: 1, 2: 2, 4: 4, 5: 5, 7: 7, 8: 8}\\n\"\n          })\n        })]\n      }), _jsxs(CPPSection, {\n        children: [_jsx(_components.p, {\n          children: \"For example, the following code attempts to remove every entry from a map, but\\r\\nresults in a segmentation fault.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"map<int, int> m;\\r\\n\\r\\nfor (int i = 0; i < 10; ++i)\\r\\n\\tm[i] = i;\\r\\n\\r\\nfor (auto &it : m) {\\r\\n\\tcout << \\\"Current Key: \\\" << it.first << endl;\\r\\n\\r\\n\\tm.erase(it.first);\\r\\n}\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"The reason is due to \\\"iterators, pointers and references referring to elements\\r\\nremoved by the function [being] invalidated\\\" (as stated in the documentation for\\r\\n\", _jsx(_components.a, {\n            href: \"http://www.cplusplus.com/reference/map/map/erase/\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"erase\"\n            })\n          }), \"), though iterators\\r\\nare beyond the scope of this module.\"]\n        }), _jsx(_components.p, {\n          children: \"One way to get around this is to just create a new map instead of removing from\\r\\nthe old one.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"map<int, int> m, M;\\r\\n\\r\\nfor (int i = 0; i < 10; ++i)\\r\\n\\tm[i] = i;\\r\\n\\r\\nint current_iteration = 0;\\r\\n\\r\\nfor (const auto &it : m) {\\r\\n\\t// only includes every third element\\r\\n\\tif (current_iteration % 3 == 0) {\\r\\n\\t\\tM[it.first] = it.second;\\r\\n\\t}\\r\\n\\r\\n\\tcurrent_iteration++;\\r\\n}\\r\\n\\r\\nswap(m, M);\\r\\n\\r\\ncout << \\\"Entries:\\\" << endl;\\r\\nfor (const auto &it : m) {\\r\\n\\tcout << it.first << \\\" \\\" << it.second << endl;\\r\\n}\\r\\n/*\\r\\n * Entries:\\r\\n * 0 0\\r\\n * 3 3\\r\\n * 6 6\\r\\n * 9 9\\r\\n */\\n\"\n          })\n        }), _jsx(_components.p, {\n          children: \"Another is to maintain a list of all the keys you want to erase and erase them\\r\\nafter the iteration finishes.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"map<int, int> m;\\r\\nfor (int i = 0; i < 10; ++i) {\\r\\n\\tm[i] = i;\\r\\n}\\r\\n\\r\\nvector<int> to_erase;\\r\\nint current_iteration = 0;\\r\\n\\r\\nfor (const auto &it : m) {\\r\\n\\t// removes every third element\\r\\n\\tif (current_iteration % 3 == 0) {\\r\\n\\t\\tto_erase.push_back(it.first);\\r\\n\\t}\\r\\n\\r\\n\\tcurrent_iteration++;\\r\\n}\\r\\n\\r\\nfor (int key : to_erase) {\\r\\n\\tm.erase(key);\\r\\n}\\r\\n\\r\\ncout << \\\"Remaining entries:\\\" << endl;\\r\\nfor (const auto &it : m) {\\r\\n\\tcout << it.first << \\\" \\\" << it.second << endl;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Remaining entries:\\r\\n * 1 1\\r\\n * 2 2\\r\\n * 4 4\\r\\n * 5 5\\r\\n * 7 7\\r\\n * 8 8\\r\\n */\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"Modifying a Collection (\", _jsx(_components.code, {\n            children: \"Set\"\n          }), \", \", _jsx(_components.code, {\n            children: \"Map\"\n          }), \", etc.) in the middle of a for-each loop\\r\\nwill cause a\\r\\n\", _jsx(_components.a, {\n            href: \"https://docs.oracle.com/javase/7/docs/api/java/util/ConcurrentModificationException.html\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"ConcurrentModificationException\"\n          }), \".\\r\\nSee the following snippet for an example:\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\n// m starts as {0: 0, 1: 1, 2: 2}\\r\\nm.put(0, 0); m.put(1, 1); m.put(2, 2);\\r\\n\\r\\nfor (int key : m.keySet()) {\\r\\n\\tm.remove(key);  // ConcurrentModificationException thrown!!\\r\\n}\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"One work-around is to use \", _jsx(_components.code, {\n            children: \"Iterator\"\n          }), \" and the \", _jsx(_components.code, {\n            children: \".remove()\"\n          }), \" method to remove\\r\\nelements while looping over them, like in the next code snippet:\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\n// m starts as {0: 0, 1: 1, 2: 2}\\r\\nm.put(0, 0); m.put(1, 1); m.put(2, 2);\\r\\n\\r\\nIterator<Map.Entry<Integer, Integer>> iter = m.entrySet().iterator();\\r\\nwhile (iter.hasNext()) {\\r\\n\\tint key = iter.next().getKey();\\r\\n\\tif (key == 0 || key == 2) {\\r\\n\\t\\titer.remove();\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// m ends as {1: 1}\\r\\nSystem.out.println(\\\"Remaining Entries:\\\");\\r\\nfor (Map.Entry<Integer, Integer> entry : m.entrySet()) {\\r\\n\\tSystem.out.println(entry.getKey() + \\\" \\\" + entry.getValue());\\r\\n}\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"However, \", _jsx(_components.code, {\n            children: \"Iterator\"\n          }), \" is outside the scope of this module.\"]\n        }), _jsxs(_components.p, {\n          children: [\"The easiest option (in most cases) if you want to remove/insert mutiple entries\\r\\nat once is to use your Container's \", _jsx(_components.code, {\n            children: \".addAll(c)\"\n          }), \" or \", _jsx(_components.code, {\n            children: \".removeAll(c)\"\n          }), \" methods. That\\r\\nmeans that you should put all the elements you want to remove (or add) in a new\\r\\nCollection, and then use that new Collection as the parameter of the\\r\\n\", _jsx(_components.code, {\n            children: \".addAll(c)\"\n          }), \" or \", _jsx(_components.code, {\n            children: \".removeAll(c)\"\n          }), \" method that you call on your original\\r\\nCollection. See the following code snippet for an example (it works equivalently\\r\\nto the code above):\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\n// m starts as {0: 0, 1: 1, 2: 2}\\r\\nm.put(0, 0); m.put(1, 1); m.put(2, 2);\\r\\n\\r\\nSet<Integer> keysToRemove = new TreeSet<>();\\r\\nfor (Map.Entry<Integer, Integer> entry : m.entrySet()) {\\r\\n\\tint key = entry.getKey();\\r\\n\\tif (key == 0 || key == 2) {\\r\\n\\t\\tkeysToRemove.add(key);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// removes all entries with key in keysToRemove\\r\\nm.keySet().removeAll(keysToRemove);\\r\\n\\r\\n// m ends as {1: 1}\\r\\nSystem.out.println(\\\"Remaining Entries:\\\");\\r\\nfor (Map.Entry<Integer, Integer> entry : m.entrySet()) {\\r\\n\\tSystem.out.println(entry.getKey() + \\\" \\\" + entry.getValue());\\r\\n}\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some of these problems can be solved by sorting alone, though sets or maps could\\r\\nmake their implementation easier.\"\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"standard\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"check-your-understanding\",\n      children: [_jsx(_components.a, {\n        href: \"#check-your-understanding\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Check Your Understanding\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsxs(Quiz, {\n          children: [_jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of insertions, deletions, and searches in a sorted set of size \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"N\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(1)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N \\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(\\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct.\"\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"set<int> s;\\r\\ns.insert(1);\\r\\ns.insert(4);\\r\\ns.insert(5);\\r\\ns.insert(2);\\r\\ncout << s.count(3) << endl;\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"0\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"3\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                  }), \" isn't present in \", _jsx(_components.code, {\n                    children: \"s\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"-1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>‚àí</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">-1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">‚àí</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"-3\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>‚àí</mo><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">-3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">‚àí</span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"set<int> s{4, 1, 2, 1, 3, 2, 3, 1, 3, 1};\\r\\ncout << s.size() << endl;\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"4\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. There are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"4\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n                  }), \" unique elements in \", _jsx(_components.code, {\n                    children: \"s\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"7\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"10\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Sets only store unique elements.\"\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of insertions, deletions, and searches in an unordered map of size \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"N\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(1)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct.\"\n                })\n              })]\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N \\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(\\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"map<int, int> m{{1, 5}, {2, 9}, {3, 7}, {4, 3}};\\r\\ncout << m[2] << endl;\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. The value associated with the key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"9\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"2\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"0\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"map<int, int> m;\\r\\nm[1] = 5;\\r\\nm[2] = 9;\\r\\nm[3] = 7;\\r\\nm[4] = 3;\\r\\nm.erase(2);\\r\\ncout << m[2] << endl;\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"0\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. \", _jsx(_components.code, {\n                    children: \"m\"\n                  }), \" is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"0\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                  }), \" after the key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" is erased.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [_jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"m[2]\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">m[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n                  }), \" is erased, so \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"m[2]\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">m[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n                  }), \" is no longer \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"9\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"2\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"map<int, int> m;\\r\\nm[0] = 1;\\r\\nm[2] = 5;\\r\\nm[3] = 18;\\r\\nm[2] = 3;\\r\\nm[4] = 14;\\r\\ncout << m[2] << endl;\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"3\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. \", _jsx(_components.code, {\n                    children: \"m[2]\"\n                  }), \" is changed from \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"5\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                  }), \" to \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"3\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Note that while \", _jsx(_components.code, {\n                    children: \"m[2]\"\n                  }), \" is set to \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"5\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                  }), \" at first, it is changed later on.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"-1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>‚àí</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">-1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">‚àí</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          })]\n        })\n      }), _jsx(JavaSection, {\n        children: _jsxs(Quiz, {\n          children: [_jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of insertions, deletions, and searches in a sorted set of size \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"N\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(1)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N \\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(\\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct.\"\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-java\",\n                children: \"Set<Integer> s = new TreeSet<>();\\r\\ns.insert(1);\\r\\ns.insert(4);\\r\\ns.insert(5);\\r\\ns.insert(2);\\r\\nSystem.out.println(s.contains(3));\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(_components.code, {\n                  children: \"true\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(_components.code, {\n                  children: \"false\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"3\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                  }), \" isn't present in \", _jsx(_components.code, {\n                    children: \"s\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(_components.code, {\n                  children: \"null\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsxs(_components.p, {\n                children: [\"Error: \", _jsx(_components.code, {\n                  children: \"NullPointerException\"\n                })]\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-java\",\n                children: \"Set<Integer> s = new TreeSet<>(Arrays.asList(4, 1, 2, 1, 3, 2, 3, 1, 3, 1));\\r\\nSystem.out.println(s.size());\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"4\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. There are \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"4\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n                  }), \" unique elements in \", _jsx(_components.code, {\n                    children: \"s\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"7\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"10\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>10</mn></mrow><annotation encoding=\\\"application/x-tex\\\">10</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">10</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Sets only store unique elements.\"\n                })\n              })]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsxs(_components.p, {\n              children: [\"What is the time complexity of insertions, deletions, and searches in an unordered map of size \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"N\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n              }), \"?\"]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(1)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsx(_components.p, {\n                  children: \"Correct.\"\n                })\n              })]\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(N \\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            }), _jsx(Quiz.Answer, {\n              children: _jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"\\\\mathcal{O}(\\\\log N)\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n                })\n              })\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-java\",\n                children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\nm.put(1, 5);\\r\\nm.put(2, 9);\\r\\nm.put(3, 7);\\r\\nm.put(4, 3);\\r\\nSystem.out.println(m.get(2));\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. The value associated with the key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" is \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"9\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"2\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"0\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-java\",\n                children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\nm.put(1, 5);\\r\\nm.put(2, 9);\\r\\nm.put(3, 7);\\r\\nm.put(4, 3);\\r\\nm.remove(2);\\r\\nSystem.out.println(m.get(2));\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(_components.code, {\n                  children: \"null\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. Key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" has been erased.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"9\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [_jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"m[2]\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">m[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n                  }), \" is erased, so \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"m[2]\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">m[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n                  }), \" is no longer \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"9\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"0\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          }), _jsxs(Quiz.Question, {\n            children: [_jsx(_components.p, {\n              children: \"Which of the following is the correct output of this code?\"\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-java\",\n                children: \"Map<Integer, Integer> m = new TreeMap<>();\\r\\nm.put(0, 1);\\r\\nm.put(2, 5);\\r\\nm.put(3, 18);\\r\\nm.put(2, 3);\\r\\nm.put(4, 14);\\r\\nSystem.out.println(m.get(2));\\n\"\n              })\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"1\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {})]\n            }), _jsxs(Quiz.Answer, {\n              correct: true,\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"3\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Correct. The value assosiated with key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" is changed from \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"5\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                  }), \" to \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"3\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n                  }), \".\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: _jsx(MATHSPAN, {\n                  className: \"math math-inline\",\n                  latex: \"5\",\n                  children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                })\n              }), _jsx(Quiz.Explanation, {\n                children: _jsxs(_components.p, {\n                  children: [\"Note that while the value for key \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"2\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n                  }), \" is set to \", _jsx(MATHSPAN, {\n                    className: \"math math-inline\",\n                    latex: \"5\",\n                    children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n                  }), \" at first, it is changed later on.\"]\n                })\n              })]\n            }), _jsxs(Quiz.Answer, {\n              children: [_jsx(_components.p, {\n                children: \"An error is thrown.\"\n              }), _jsx(Quiz.Explanation, {})]\n            })]\n          })]\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  frequency,\n  prerequisites,\n  default: MDXContent\n};\n","frontmatter":{"title":"Introduction to Sets & Maps","author":"Darren Yao, Benjamin Qi, Allen Li, Jesse Choe, Nathan Gong","contributors":null,"id":"intro-sets","prerequisites":["intro-sorting"],"description":"Maintaining collections of distinct elements/keys with sets and maps.","frequency":2},"parent":{"name":"Intro_Sets","relativePath":"2_Bronze/Intro_Sets.mdx"},"fields":{"division":"bronze"},"toc":{"cpp":[{"depth":2,"value":"Sets","slug":"sets"},{"depth":3,"value":"Unordered Sets","slug":"unordered-sets"},{"depth":3,"value":"Sorted Sets","slug":"sorted-sets"},{"depth":3,"value":"Solution - Distinct Numbers","slug":"solution---distinct-numbers"},{"depth":4,"value":"Method 1 - Set","slug":"method-1---set"},{"depth":4,"value":"Method 2 - Sorting","slug":"method-2---sorting"},{"depth":2,"value":"Maps","slug":"maps"},{"depth":3,"value":"Iterating Over Maps","slug":"iterating-over-maps"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":2,"value":"Check Your Understanding","slug":"check-your-understanding"}],"java":[{"depth":2,"value":"Sets","slug":"sets"},{"depth":3,"value":"Unordered Sets","slug":"unordered-sets-1"},{"depth":3,"value":"Sorted Sets","slug":"sorted-sets-1"},{"depth":3,"value":"Solution - Distinct Numbers","slug":"solution---distinct-numbers"},{"depth":4,"value":"Method 1 - Set","slug":"method-1---set"},{"depth":4,"value":"Method 2 - Sorting","slug":"method-2---sorting"},{"depth":2,"value":"Maps","slug":"maps"},{"depth":3,"value":"Iterating Over Maps","slug":"iterating-over-maps"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":2,"value":"Check Your Understanding","slug":"check-your-understanding"}],"py":[{"depth":2,"value":"Sets","slug":"sets"},{"depth":3,"value":"Solution - Distinct Numbers","slug":"solution---distinct-numbers"},{"depth":4,"value":"Method 1 - Set","slug":"method-1---set"},{"depth":4,"value":"Method 2 - Sorting","slug":"method-2---sorting"},{"depth":2,"value":"Maps","slug":"maps"},{"depth":3,"value":"Iterating Over Maps","slug":"iterating-over-maps"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":2,"value":"Check Your Understanding","slug":"check-your-understanding"}]}},"moduleProblemLists":{"problemLists":[{"listId":"dis","problems":[{"uniqueId":"cses-1621","name":"Distinct Numbers","url":"https://cses.fi/problemset/task/1621","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Sorting","Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"ex","problems":[{"uniqueId":"ys-AssociativeArray","name":"Associative Array","url":"https://judge.yosupo.jp/problem/associative_array","source":"YS","difficulty":"Easy","isStarred":false,"tags":["Map"],"solution":null}]},{"listId":"standard","problems":[{"uniqueId":"cses-1640","name":"Sum of Two Values","url":"https://cses.fi/problemset/task/1640","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Map"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-964","name":"Where Am I?","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=964","source":"Bronze","difficulty":"Easy","isStarred":true,"tags":["Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-831","name":"Team Tic Tac Toe","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=831","source":"Bronze","difficulty":"Normal","isStarred":false,"tags":["Simulation","Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-1107","name":"Year of the Cow","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1107","source":"Bronze","difficulty":"Normal","isStarred":false,"tags":["Map"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-687","name":"Don't Be Last!","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=687","source":"Bronze","difficulty":"Normal","isStarred":true,"tags":["Map","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-667","name":"Cities & States","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=667","source":"Silver","difficulty":"Normal","isStarred":false,"tags":["Map"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-831C","name":"Jury Marks","url":"https://codeforces.com/contest/831/problem/C","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Set","Prefix Sums"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ac-MadeUp","name":"Made Up","url":"https://atcoder.jp/contests/abc202/tasks/abc202_c?lang=en","source":"AC","difficulty":"Hard","isStarred":false,"tags":["Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"intro-sets"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}