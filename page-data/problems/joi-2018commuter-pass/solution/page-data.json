{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/joi-2018commuter-pass/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"joi-18-CommuterPass\", source = \"JOI 2018\", title = \"Commuter Pass\", author = \"Andi Qu, Nathan Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\")\n  }, _props.components), {MATHSPAN, HeaderLink, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use Dijkstra's to calculate distances from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"s\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n        }), \", \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \", and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Consider a subset of directed edges where each directed edge is part of a\\r\\nshortest path from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"s\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"t\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n        }), \". Note that this subset is a DAG, and can be\\r\\nfound by keeping track of the parents of every node when running Dijkstra's.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Note that an optimal path will be\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u \\\\rightarrow x \\\\rightarrow y \\\\rightarrow v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi><mo>→</mo><mi>x</mi><mo>→</mo><mi>y</mi><mo>→</mo><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u \\\\rightarrow x \\\\rightarrow y \\\\rightarrow v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \", where \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x \\\\rightarrow y\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x \\\\rightarrow y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n        }), \" is a\\r\\npath on the DAG. Note that any path on the DAG is a valid commuter pass\\r\\noption, and the only node with in-degree 0 is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \", and the only node with\\r\\nout-degree 0 is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"t\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n        }), \" in the DAG.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Define \", _jsx(_components.code, {\n          children: \"dpU(i)\"\n        }), \" = minimum distance from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \" to any node \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" such that \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" is\\r\\nin a path from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"s\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" in the DAG.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Define \", _jsx(_components.code, {\n          children: \"dpV(i)\"\n        }), \" = minimum distance from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \" to any node \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" such that \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" is\\r\\nin a path from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"s\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" in the DAG.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The DP transition for \", _jsx(_components.code, {\n          children: \"dpU(i)\"\n        }), \" is \", _jsx(_components.code, {\n          children: \"dpU(i) = min(distU[i], dpU(parent_i))\"\n        }), \" for\\r\\neach parent of \", _jsx(_components.code, {\n          children: \"i\"\n        }), \" (see \", _jsx(_components.code, {\n          children: \"dijkstra2\"\n        }), \" function implementation for more\\r\\ndetails). \", _jsx(_components.code, {\n          children: \"dpV\"\n        }), \"'s transition is defined similarly.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Our answer is \", _jsx(_components.code, {\n          children: \"dpU(v) + dpV(v)\"\n        }), \". Since edges are bidirectional, an optimal\\r\\npath can also be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v \\\\rightarrow x \\\\rightarrow y \\\\rightarrow u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mo>→</mo><mi>x</mi><mo>→</mo><mi>y</mi><mo>→</mo><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v \\\\rightarrow x \\\\rightarrow y \\\\rightarrow u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \" where\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x \\\\rightarrow y\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x \\\\rightarrow y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n        }), \" is a path on the DAG. We can solve this by rerunning steps\\r\\n2-7 while switching \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \". In Andi's code, steps 2-7 are implemented in\\r\\nthe \", _jsx(_components.code, {\n          children: \"dijkstra2\"\n        }), \" function.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Alternatively, the answer could just be from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"u\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n        }), \" directly to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \" without\\r\\nusing the commuter pass.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Andi's implementation:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\ntypedef long long ll;\\r\\nusing namespace std;\\r\\n\\r\\nvector<pair<ll, ll>> graph[100001];\\r\\nll du[100001], dv[100001], ds[100001], dp[2][100001], ans;\\r\\nbool visited[100001];\\r\\n\\r\\nvoid dijkstra1(ll start, ll arr[]) {\\r\\n\\tfill(visited, visited + 100001, false);\\r\\n\\r\\n\\tpriority_queue<pair<ll, ll>> pq;\\r\\n\\tpq.push({0, start});\\r\\n\\twhile (!pq.empty()) {\\r\\n\\t\\tll c, node;\\r\\n\\t\\ttie(c, node) = pq.top();\\r\\n\\t\\tpq.pop();\\r\\n\\r\\n\\t\\tif (!visited[node]) {\\r\\n\\t\\t\\tarr[node] = -c;\\r\\n\\t\\t\\tvisited[node] = true;\\r\\n\\t\\t\\tfor (auto& i : graph[node]) pq.push({c - i.second, i.first});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvoid dijkstra2(ll start, ll end) {\\r\\n\\tfill(dp[0], dp[0] + 100001, LLONG_MAX / 2);\\r\\n\\tfill(dp[1], dp[1] + 100001, LLONG_MAX / 2);\\r\\n\\tfill(visited, visited + 100001, false);\\r\\n\\r\\n\\tpriority_queue<pair<ll, pair<ll, ll>>> pq;\\r\\n\\tpq.push({0, {start, 0}});\\r\\n\\tdp[0][0] = dp[1][0] = LLONG_MAX/ 2;\\r\\n\\twhile (!pq.empty()) {\\r\\n\\t\\tll c, node, par;\\r\\n\\t\\tpair<ll, ll> p;\\r\\n\\t\\ttie(c, p) = pq.top();\\r\\n\\t\\ttie(node, par) = p;\\r\\n\\t\\tpq.pop();\\r\\n\\r\\n\\t\\tif (!visited[node]) {\\r\\n\\t\\t\\tvisited[node] = true;\\r\\n\\t\\t\\tds[node] = -c;\\r\\n\\t\\t\\tdp[0][node] = min(du[node], dp[0][par]);\\r\\n\\t\\t\\tdp[1][node] = min(dv[node], dp[1][par]);\\r\\n\\t\\t\\tfor (auto i : graph[node]) pq.push({c - i.second, {i.first, node}});\\r\\n\\t\\t} else if (-c == ds[node]) {\\r\\n\\t\\t\\tif (min(du[node], dp[0][par]) + min(dv[node], dp[1][par]) <= dp[0][node] + dp[1][node]) {\\r\\n\\t\\t\\t\\tdp[0][node] = min(du[node], dp[0][par]);\\r\\n\\t\\t\\t\\tdp[1][node] = min(dv[node], dp[1][par]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tans = min(ans, dp[0][end] + dp[1][end]);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tiostream::sync_with_stdio(false);\\r\\n\\tcin.tie(0);\\r\\n\\tll n, m, s, t, u, v;\\r\\n\\tcin >> n >> m >> s >> t >> u >> v;\\r\\n\\tfor (int i = 0; i < m; i++) {\\r\\n\\t\\tll a, b, c;\\r\\n\\t\\tcin >> a >> b >> c;\\r\\n\\t\\tgraph[a].push_back({b, c});\\r\\n\\t\\tgraph[b].push_back({a, c});\\r\\n\\t}\\r\\n\\r\\n\\tdijkstra1(u, du);\\r\\n\\tdijkstra1(v, dv);\\r\\n\\r\\n\\tans = du[v];\\r\\n\\r\\n\\tdijkstra2(s, t);\\r\\n\\tdijkstra2(t, s);\\r\\n\\r\\n\\tcout << ans << '\\\\n';\\r\\n\\treturn 0;\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Alternatively,\\r\\n\", _jsx(_components.a, {\n        href: \"https://github.com/thecodingwizard/competitive-programming/blob/master/JOI/JOI%2018-commuterpass.cpp\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Nathan's implementation\"\n      }), \".\\r\\nNote that the DP definitions in Nathan's implementation are slightly different\\r\\nthan above.\"]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"joi-18-CommuterPass","source":"JOI 2018","title":"Commuter Pass","author":"Andi Qu, Nathan Wang"},"parent":{"name":"joi-18-CommuterPass","relativePath":"joi-18-CommuterPass.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"shortest-paths","title":"Shortest Paths with Non-Negative Edge Weights"}}}}]},"problemInfo":{"uniqueId":"joi-18-CommuterPass","url":"https://oj.uz/problem/view/JOI18_commuter_pass"}},"pageContext":{"id":"joi-18-CommuterPass"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}