{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1686-coin-collector/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1686\", source = \"CSES\", title = \"Coin Collector\", author = \"Dong Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity\"\n      }), \": \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N+M)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N+M)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First, we split the graph into SCCs. We then treat each component as a node. So\\r\\nthen, If the coin collector enters a component, he can collect all the coins in\\r\\nit.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since the resulting graph is a DAG, we can use DP to find the maximum coins that\\r\\ncan be collected.\"\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define all(x) begin(x), end(x)\\r\\n#define rsz resize\\r\\n\\r\\n#define F0R(i,a) for(int i=0; i<(a); i++)\\r\\n#define FOR(i,a,b) for(int i=(a); i<=(b); i++)\\r\\n#define R0F(i,a) for(int i=(a)-1; i>=0; i--)\\r\\n#define ROF(i,a,b) for(int i=(b); i>=a; i--)\\r\\n#define trav(a,x) for (auto& a: x)\\r\\n\\r\\n/* SCC from BenQ */\\r\\nstruct SCC {\\r\\n\\tint N; vector<vi> adj, radj;\\r\\n\\tvi todo, comps, comp; vector<bool> vis;\\r\\n\\tvoid init(int _N) { N = _N;\\r\\n\\t\\tadj.rsz(N), radj.rsz(N), comp = vi(N,-1), vis.rsz(N); }\\r\\n\\tvoid ae(int x, int y) { adj[x].pb(y), radj[y].pb(x); }\\r\\n\\tvoid dfs(int x) {\\r\\n\\t\\tvis[x] = 1; trav(y,adj[x]) if (!vis[y]) dfs(y);\\r\\n\\t\\ttodo.pb(x); }\\r\\n\\tvoid dfs2(int x, int v) {\\r\\n\\t\\tcomp[x] = v;\\r\\n\\t\\ttrav(y,radj[x]) if (comp[y] == -1) dfs2(y,v); }\\r\\n\\tvoid gen(int _N) { // fills allComp\\r\\n\\t\\tFOR(i,1,_N) if (!vis[i]) dfs(i);\\r\\n\\t\\treverse(all(todo));\\r\\n\\t\\ttrav(x,todo) if (comp[x] == -1) {\\r\\n\\t\\t\\tdfs2(x,x); comps.pb(x); }\\r\\n\\t}\\r\\n};\\r\\n\\r\\nconst int maxn = 1e5+5;\\r\\n\\r\\nint n, m;\\r\\nSCC scc; // scc\\r\\nint value[maxn]; // value of each room\\r\\nll group[maxn]; // value in each SCC\\r\\nvi rgraph[maxn]; // reverse graph\\r\\nll dp[maxn];\\r\\n\\r\\n// calculates dp[i]\\r\\nll DP(int i) {\\r\\n\\tif(dp[i]) return dp[i];\\r\\n\\t// start at i\\r\\n\\tdp[i] = group[i];\\r\\n\\t// simulate traveling from another SCC to this SCC\\r\\n\\ttrav(j, rgraph[i])\\r\\n\\t\\tdp[i] = max(dp[i], DP(j) + group[i]);\\r\\n\\treturn dp[i];\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\r\\n\\tcin >> n >> m;\\r\\n\\tscc.init(n+1);\\r\\n\\tFOR(i,1,n) cin >> value[i];\\r\\n\\twhile(m--) {\\r\\n\\t\\tint a,b; cin >> a >> b;\\r\\n\\t\\tscc.ae(a,b);\\r\\n\\t}\\r\\n\\r\\n\\t// generate SCC\\r\\n\\tscc.gen(n);\\r\\n\\t// set dp to 0\\r\\n\\tfill(dp+1, dp+n+1, 0);\\r\\n\\t// precompute group value for each SCC\\r\\n\\tFOR(i,1,n) group[scc.comp[i]] += value[i];\\r\\n\\t// create reverse edges for SCC\\r\\n\\tFOR(i,1,n) trav(j, scc.adj[i]) {\\r\\n\\t\\tif(scc.comp[i] == scc.comp[j]) continue;\\r\\n\\t\\trgraph[scc.comp[j]].pb(scc.comp[i]);\\r\\n\\t}\\r\\n\\t// find dp value for each SCC\\r\\n\\tll ans = 0;\\r\\n\\ttrav(i, scc.comps) ans = max(ans, DP(i));\\r\\n\\r\\n\\tcout << ans << '\\\\n';\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1686","source":"CSES","title":"Coin Collector","author":"Dong Liu"},"parent":{"name":"cses-1686","relativePath":"cses-1686.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"SCC","title":"Strongly Connected Components"}}}}]},"problemInfo":{"uniqueId":"cses-1686","url":"https://cses.fi/problemset/task/1686"}},"pageContext":{"id":"cses-1686"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}