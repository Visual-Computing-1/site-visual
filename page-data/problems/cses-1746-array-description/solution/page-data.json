{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1746-array-description/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1746\", source = \"CSES\", title = \"Array Description\", author = \"Andrew Wang, Sofia Yang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/70018\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Editorial (icecuber)\"\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">NM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\nusing namespace std;\\r\\n\\r\\ntypedef long long ll;\\r\\n#define pb push_back\\r\\n#define pi pair<int, int>\\r\\n#define f first\\r\\n#define mp make_pair\\r\\n#define s second\\r\\n\\r\\nll dp[100001][101];\\r\\nconst ll MOD = (10e8)+7;\\r\\nint main() {\\r\\n\\t\\tios_base::sync_with_stdio(0);\\r\\n\\t\\tcin.tie(0);\\r\\n\\t\\tint n, m;\\r\\n\\t\\tcin >> n >> m;\\r\\n\\t\\tint arr[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\t\\tcin >> arr[i];\\r\\n\\t\\t}\\r\\n\\t\\tif(arr[0] == 0) {\\r\\n\\t\\t\\t\\tfill(dp[0], dp[0]+101, 1);\\r\\n\\t\\t} else{\\r\\n\\t\\t\\t\\tdp[0][arr[0]] = 1;\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\t\\t\\tif(arr[i] == 0) {\\r\\n\\t\\t\\t\\t\\t\\tfor (int j = 1; j <= m; j++) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdp[i][j] += dp[i-1][j];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif(j - 1 > 0) dp[i][j] += dp[i-1][j-1];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif(j + 1 <= m) dp[i][j] += dp[i-1][j+1];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdp[i][j] %= MOD;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tdp[i][arr[i]] += dp[i-1][arr[i]];\\r\\n\\t\\t\\t\\t\\t\\tif(arr[i] - 1 > 0) dp[i][arr[i]] += dp[i-1][arr[i]-1];\\r\\n\\t\\t\\t\\t\\t\\tif(arr[i] + 1 <= m) dp[i][arr[i]] += dp[i-1][arr[i]+1];\\r\\n\\t\\t\\t\\t\\t\\tdp[i][arr[i]] %= MOD;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tll ans = 0;\\r\\n\\t\\tfor (int i = 1; i <= m; i++) {\\r\\n\\t\\t\\t\\tans += dp[n-1][i];\\r\\n\\t\\t\\t\\tans %= MOD;\\r\\n\\t\\t}\\r\\n\\t\\tcout << ans;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"\\r\\nimport java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class ArrayDesc {\\r\\n\\tpublic static final int MOD = (int) 1e9 + 7;\\r\\n\\tpublic static void main(String args[]) throws IOException {\\r\\n\\t\\tBufferedReader r = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(r.readLine());\\r\\n\\t\\tint N = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint M = Integer.parseInt(st.nextToken());\\r\\n\\r\\n\\t\\t// DP[i][j] is the number of ways\\r\\n\\t\\t// to make a valid array from 0 to i, if the ith value is j.\\r\\n\\t\\tint[][] dp = new int[N][M + 1];\\r\\n\\r\\n\\t\\t// Process the first element in the array.\\r\\n\\t\\tStringTokenizer arr = new StringTokenizer(r.readLine());\\r\\n\\t\\tint first = Integer.parseInt(arr.nextToken());\\r\\n\\t\\t// The first element can be anything.\\r\\n\\t\\tif (first == 0) {\\r\\n\\t\\t\\tArrays.fill(dp[0], 1);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// This is the only valid value.\\r\\n\\t\\t\\tdp[0][first] = 1;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 1; i < N; i++) {\\r\\n\\t\\t\\tint A = Integer.parseInt(arr.nextToken());\\r\\n\\t\\t\\t// A free element.\\r\\n\\t\\t\\tif (A == 0) {\\r\\n\\t\\t\\t\\tfor (int j = 1; j <= M; j++) {\\r\\n\\t\\t\\t\\t\\tint[] neighborVals = new int[] {j - 1, j, j + 1};\\r\\n\\t\\t\\t\\t\\tfor (int k : neighborVals) {\\r\\n\\t\\t\\t\\t\\t\\t// Number of values,\\r\\n\\t\\t\\t\\t\\t\\t// where the previous value is in the valid range.\\r\\n\\t\\t\\t\\t\\t\\tif (1 <= k && k <= M) {\\r\\n\\t\\t\\t\\t\\t\\t\\tdp[i][j] += dp[i - 1][k];\\r\\n\\t\\t\\t\\t\\t\\t\\tdp[i][j] %= MOD;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t// Find number of ways that the current value is valid.\\r\\n\\t\\t\\t\\tint[] neighborVals = new int[] {A - 1, A, A + 1};\\r\\n\\t\\t\\t\\tfor (int k : neighborVals) {\\r\\n\\t\\t\\t\\t\\tif (1 <= k && k <= M) {\\r\\n\\t\\t\\t\\t\\t\\tdp[i][A] += dp[i - 1][k];\\r\\n\\t\\t\\t\\t\\t\\tdp[i][A] %= MOD;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//Aggregate the dp values.\\r\\n\\t\\tint ans = 0;\\r\\n\\t\\tfor (int j = 1; j <= M; j++) {\\r\\n\\t\\t\\tans += dp[N - 1][j];\\r\\n\\t\\t\\tans %= MOD;\\r\\n\\t\\t}\\r\\n\\t\\tSystem.out.println(ans);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1746","source":"CSES","title":"Array Description","author":"Andrew Wang, Sofia Yang"},"parent":{"name":"cses-1746","relativePath":"cses-1746.mdx"},"toc":{"cpp":[{"depth":1,"value":"Implementation","slug":"implementation"}],"java":[{"depth":1,"value":"Implementation","slug":"implementation"}],"py":[{"depth":1,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"paths-grids","title":"Paths on Grids"}}}}]},"problemInfo":{"uniqueId":"cses-1746","url":"https://cses.fi/problemset/task/1746"}},"pageContext":{"id":"cses-1746"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}