{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-665-the-cow-signal/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-665\", source = \"USACO Bronze 2016 December\", title = \"The Cow-Signal\", author = \"Benjamin Qi, Jesse Choe\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {LanguageSection, CPPSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_cowsignal_bronze_dec16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (Java)\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nvoid setIO(string name = \\\"\\\"){ // FastIO see General -> Fast Input and Output\\r\\n    ios_base::sync_with_stdio(0); cin.tie(0);\\r\\n    if(name.size()){\\r\\n        freopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin);\\r\\n        freopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n    }\\r\\n}\\r\\n\\r\\nint main(){\\r\\n\\r\\n\\tsetIO(\\\"cowsignal\\\");\\r\\n\\r\\n\\tint M, N, K; cin >> M >> N >> K;\\r\\n\\r\\n\\tfor(int i = 0; i < M; i++){\\r\\n\\t\\tstring signal; cin >> signal;\\r\\n\\t\\tfor(int it = 0; it < K; it++){\\r\\n\\t\\t\\tfor(int j = 0; j < N; j++){\\r\\n\\t\\t\\t\\tfor(int k = 0; k < K; k++){\\r\\n\\t\\t\\t\\t\\tcout << signal[j];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tcout << endl;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"import sys\\r\\n\\r\\nsys.stdin = open(\\\"cowsignal.in\\\",\\\"r\\\")\\r\\nsys.stdout = open(\\\"cowsignal.out\\\",\\\"w\\\")\\r\\n\\r\\nM,N,K = map(int,input().split())\\r\\ng = [input() for _ in range(M)]\\r\\nfor i in range(K*M):\\r\\n\\tfor j in range(K*N):\\r\\n\\t\\tprint(g[i//K][j//K],end='')\\r\\n\\tprint()\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-665","source":"USACO Bronze 2016 December","title":"The Cow-Signal","author":"Benjamin Qi, Jesse Choe"},"parent":{"name":"usaco-665","relativePath":"usaco-665.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"simulation","title":"Simulation"}}}}]},"problemInfo":{"uniqueId":"usaco-665","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=665"}},"pageContext":{"id":"usaco-665"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}