{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1639-edit-distance/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1639\", source = \"CSES\", title = \"Edit Distance\", author = \"Sofia Yang, Kevin Sheng\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, JavaSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/70018\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Editorial (icecuber)\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/CPH.pdf#page=84\",\n        children: \"CPH 7.5 (Edit Distance)\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">NM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class EditDistance {\\r\\n\\tpublic static void main(String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tchar[] str1 = io.next().toCharArray();\\r\\n\\t\\tchar[] str2 = io.next().toCharArray();\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t * dp[i][j] is the minimum number of moves to change the first i letters\\r\\n\\t\\t * of the string into the first j letters of result.\\r\\n\\t\\t */\\r\\n\\t\\tint[][] dp = new int[str1.length + 1][str2.length + 1];\\r\\n\\t\\tfor (int i = 0; i < dp.length; i++) {\\r\\n\\t\\t\\tArrays.fill(dp[i], Integer.MAX_VALUE);\\r\\n\\t\\t}\\r\\n\\t\\tdp[0][0] = 0;\\r\\n\\t\\tfor (int i = 0; i <= str1.length; i++) {\\r\\n\\t\\t\\tfor (int j = 0; j <= str2.length; j++) {\\r\\n\\t\\t\\t\\tif (i != 0) {\\r\\n\\t\\t\\t\\t\\t// Delete letter i - 1 from the string.\\r\\n\\t\\t\\t\\t\\tdp[i][j] = Math.min(dp[i][j], dp[i - 1][j] + 1);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif (j != 0) {\\r\\n\\t\\t\\t\\t\\t// Add letter j - 1 of the result to the string.\\r\\n\\t\\t\\t\\t\\tdp[i][j] = Math.min(dp[i][j], dp[i][j - 1] + 1);\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Make letter i - 1 equal to letter j - 1 of the result.\\r\\n\\t\\t\\t\\tif (i != 0 && j != 0) {\\r\\n\\t\\t\\t\\t\\tint newCost = dp[i - 1][j - 1] + ((str1[i - 1] == str2[j - 1]) ? 0 : 1);\\r\\n\\t\\t\\t\\t\\tdp[i][j] = Math.min(dp[i][j], newCost);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tio.println(dp[str1.length][str2.length]);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <string>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\n\\r\\nusing std::cout;\\r\\nusing std::endl;\\r\\nusing std::vector;\\r\\n\\r\\nint main() {\\r\\n\\tstd::string str1;\\r\\n\\tstd::string str2;\\r\\n\\tstd::cin >> str1 >> str2;\\r\\n\\t/*\\r\\n\\t * dp[i][j] is the minimum number of moves to change the first i letters\\r\\n\\t * of the string into the first j letters of result.\\r\\n\\t */\\r\\n\\tvector<vector<int>> dp(str1.size() + 1, vector<int>(str2.size() + 1, INT32_MAX));\\r\\n\\tdp[0][0] = 0;\\r\\n\\tfor (int i = 0; i <= str1.size(); i++) {\\r\\n\\t\\tfor (int j = 0; j <= str2.size(); j++) {\\r\\n\\t\\t\\tif (i != 0) {\\r\\n\\t\\t\\t\\t// Delete letter i - 1 from the string.\\r\\n\\t\\t\\t\\tdp[i][j] = std::min(dp[i][j], dp[i - 1][j] + 1);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (j != 0) {\\r\\n\\t\\t\\t\\t// Add letter j - 1 of the result to the string.\\r\\n\\t\\t\\t\\tdp[i][j] = std::min(dp[i][j], dp[i][j - 1] + 1);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Make letter i - 1 equal to letter j - 1 of the result.\\r\\n\\t\\t\\tif (i != 0 && j != 0) {\\r\\n\\t\\t\\t\\tint new_cost = dp[i - 1][j - 1] + str1[i - 1] != str2[j - 1];\\r\\n\\t\\t\\t\\tdp[i][j] = std::min(dp[i][j], new_cost);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << dp[str1.size()][str2.size()] << endl;\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1639","source":"CSES","title":"Edit Distance","author":"Sofia Yang, Kevin Sheng"},"parent":{"name":"cses-1639","relativePath":"cses-1639.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"paths-grids","title":"Paths on Grids"}}}}]},"problemInfo":{"uniqueId":"cses-1639","url":"https://cses.fi/problemset/task/1639"}},"pageContext":{"id":"cses-1639"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}