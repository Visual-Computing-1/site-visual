{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1644-max-subarray-sum-ii/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1644\", source = \"CSES\", title = \"Maximum Subarray II\", author = \"Neo Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Spoiler: _missingComponent(\"Spoiler\")\n  }, _props.components), {HeaderLink, MATHSPAN, Spoiler, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"problem\",\n      children: [_jsx(_components.a, {\n        href: \"#problem\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problem\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We are asked to find the maximum subarray with size in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[a,b]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[a,b]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Hint 1\",\n      children: [_jsx(_components.p, {\n        children: \"We can observe that we will be performing sum range queries for our subarray.\"\n      }), _jsx(_components.p, {\n        children: \"Therefore, we should construct a prefix sum array to perform these queries.\"\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"Notice that we are trying to maximize \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\textrm{pfx}[i] - \\\\textrm{pfx}[j]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>pfx</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mtext>pfx</mtext><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\textrm{pfx}[i] - \\\\textrm{pfx}[j]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord textrm\\\">pfx</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord textrm\\\">pfx</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \". Since\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \" is guaranteed to be within the window \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[i-b,i]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>−</mo><mi>b</mi><mo separator=\\\"true\\\">,</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[i-b,i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \", we can construct a sliding\\r\\nwindow of size b, and compute\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\max_{A\\\\le i \\\\le B}(\\\\textrm{pfx}[i]-\\\\textrm{pfx}[j])\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>A</mi><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>B</mi></mrow></msub><mo stretchy=\\\"false\\\">(</mo><mtext>pfx</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mtext>pfx</mtext><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max_{A\\\\le i \\\\le B}(\\\\textrm{pfx}[i]-\\\\textrm{pfx}[j])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop\\\">max</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3283em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">A</span><span class=\\\"mrel mtight\\\">≤</span><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">≤</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2452em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord text\\\"><span class=\\\"mord textrm\\\">pfx</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord textrm\\\">pfx</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">])</span></span></span></span>\"\n        }), \".\"]\n      }), _jsx(_components.p, {\n        children: \"Implementation using a multiset in C++:\"\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-cpp\",\n          children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nusing ll = long long;\\r\\nconst ll LINF = 1e18;\\r\\n\\r\\nint N, A, B;\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\tcin >> N >> A >> B; // reading in variables\\r\\n\\r\\n\\tvector<long long> pfx(N+1);\\r\\n\\tfor(int i = 1; i <= N; i++) {\\r\\n\\t\\tint a; cin >> a;\\r\\n\\t\\tpfx[i] = a + pfx[i-1]; // construction of our prefix sum\\r\\n\\t}\\r\\n\\r\\n\\tll ret = -LINF;\\r\\n\\tmultiset<ll> ms;\\r\\n\\r\\n\\t// we can keep a sliding window of size B, then find the lowest pfx[j] using multiset\\r\\n\\tfor(int i = A; i <= N; ++i) {\\r\\n\\t\\tif(i > B) ms.erase(ms.find(pfx[i-B-1])); //erase the element if size > B\\r\\n\\t\\tms.insert(pfx[i-A]);\\r\\n\\t\\tret = max(ret, pfx[i]-*ms.begin()); //we want to minimize ms.begin() aka pfx[j]\\r\\n\\t}\\r\\n\\r\\n\\tcout << ret << \\\"\\\\n\\\";\\r\\n}\\n\"\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1644","source":"CSES","title":"Maximum Subarray II","author":"Neo Wang"},"parent":{"name":"cses-1644","relativePath":"cses-1644.mdx"},"toc":{"cpp":[{"depth":1,"value":"Problem","slug":"problem"}],"java":[{"depth":1,"value":"Problem","slug":"problem"}],"py":[{"depth":1,"value":"Problem","slug":"problem"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"sliding-window","title":"Sliding Window"}}}}]},"problemInfo":{"uniqueId":"cses-1644","url":"https://cses.fi/problemset/task/1644"}},"pageContext":{"id":"cses-1644"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}