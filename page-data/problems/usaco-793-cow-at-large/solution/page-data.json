{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-793-cow-at-large/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-793\", source = \"USACO Platinum 2018 February\", title = \"At Large\", author = \"Benjamin Qi\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\")\n  }, _props.components), {MATHSPAN, Spoiler, IncompleteSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Although the intended solution is extremely difficult, this is not too hard to\\r\\nfakesolve! First write some \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" DP that is somehow fast enough to\\r\\npass test cases 1-6.\"]\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Code\",\n      children: _jsx(IncompleteSection, {\n        children: _jsx(_components.p, {\n          children: \"code\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This won't work for test cases 7-11, but these test cases are quite special!\"\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"How So?\",\n      children: [_jsx(_components.p, {\n        children: \"In these test cases the trees have at most 20 leaves. Therefore it suffices to\\r\\ncompress tree edges (repeatedly remove vertices of degree 2) and run the same\\r\\nsolution.\"\n      }), _jsx(IncompleteSection, {\n        children: _jsx(_components.p, {\n          children: \"code\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a legit (?) DP solution, see\\r\\n\", _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/57170?#comment-410179\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Eric Zhang's comment\"\n      }), \".\"]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-793","source":"USACO Platinum 2018 February","title":"At Large","author":"Benjamin Qi"},"parent":{"name":"usaco-793","relativePath":"usaco-793.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"all-roots","title":"DP on Trees - Solving For All Roots"}}}},{"node":{"module":{"frontmatter":{"id":"centroid","title":"Centroid Decomposition"}}}},{"node":{"module":{"frontmatter":{"id":"sqrt","title":"Square Root Decomposition"}}}}]},"problemInfo":{"uniqueId":"usaco-793","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=793"}},"pageContext":{"id":"usaco-793"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}