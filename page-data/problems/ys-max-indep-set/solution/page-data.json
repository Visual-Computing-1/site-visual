{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/ys-max-indep-set/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"ys-MaxIndepSet\", source = \"YS\", title = \"Max Indep Set\", author = \"Shijie Ren\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h4: \"h4\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    Spoiler: _missingComponent(\"Spoiler\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {Spoiler, MATHSPAN, HeaderLink, MATHDIV, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(Spoiler, {\n      title: \"Hint 1\",\n      children: [_jsx(_components.p, {\n        children: \"Generate the complement of the given graph.\"\n      }), _jsxs(_components.p, {\n        children: [\"The complement or inverse of a graph G is a graph H\\r\\nsuch that two distinct vertices of H are adjacent if and only if\\r\\nthey are \", _jsx(_components.strong, {\n          children: \"not\"\n        }), \" adjacent in G.\"]\n      }), _jsx(_components.p, {\n        children: \"To generate the complement of a graph,\\r\\nwe'll fill in all the missing edges required to form a complete graph,\\r\\nand remove all the previously existing edges.\"\n      })]\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Hint 2\",\n      children: _jsxs(_components.p, {\n        children: [\"Consider Bitmask DP when \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"N \\\\leq 20\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N \\\\leq 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Hint 3\",\n      children: [_jsxs(_components.p, {\n        children: [\"If you're stuck on DP when \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"N \\\\leq 20\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N \\\\leq 20</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">20</span></span></span></span>\"\n        }), \",\"]\n      }), _jsxs(_components.p, {\n        children: [\"Let the DP array store \", _jsx(_components.strong, {\n          children: \"the set of points\"\n        }), \" in the subgraph\\r\\nthat meet specific conditions.\"]\n      })]\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Hint 4\",\n      children: _jsx(_components.p, {\n        children: \"Divide the original graph into two parts, do DP on each of them, and then merge.\"\n      })\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Explanation\",\n      children: [_jsxs(_components.h4, {\n        id: \"bitmask-dp\",\n        children: [_jsx(_components.a, {\n          href: \"#bitmask-dp\",\n          \"aria-hidden\": \"true\",\n          tabIndex: \"-1\",\n          className: \"anchor before\",\n          children: _jsx(HeaderLink, {})\n        }), \"Bitmask DP\"]\n      }), _jsx(_components.p, {\n        children: \"First, we can alter the problem\\r\\nby building the complement graph of the original graph.\"\n      }), _jsx(_components.p, {\n        children: \"This turns it into a maximum clique problem (MCP).\"\n      }), _jsx(_components.p, {\n        children: \"Clique can be seen as a complete graph.\"\n      }), _jsx(_components.p, {\n        children: \"It's not a good idea to only store the number of points in the answer graph because it'll be hard to transfer.\"\n      }), _jsx(_components.p, {\n        children: \"Let the DP array store the set of points within the maximum clique in\\r\\nthe subgraph.\"\n      }), _jsx(_components.p, {\n        children: \"Then, each element in the DP array represents a bitmask.\"\n      }), _jsxs(_components.p, {\n        children: [\"Let \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{dp}[S]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[S]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" to represent \", _jsx(_components.strong, {\n          children: \"any\"\n        }), \" valid maximum clique solution in\\r\\nsubgraph \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"Consider a point \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"k\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n        }), \" in \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n        }), \".\"]\n      }), _jsx(_components.p, {\n        children: \"If this point is in the maximum clique,\"\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"\\\\texttt{dp}[S] = \\\\texttt{dp}[E_k\\\\cap S] \\\\cup \\\\{k\\\\}\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><msub><mi>E</mi><mi>k</mi></msub><mo>∩</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo><mo>∪</mo><mo stretchy=\\\"false\\\">{</mo><mi>k</mi><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[S] = \\\\texttt{dp}[E_k\\\\cap S] \\\\cup \\\\{k\\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∩</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∪</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mclose\\\">}</span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [\"(where \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"E_k\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" represents the neighbour set of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"k\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n        }), \")\"]\n      }), _jsx(_components.p, {\n        children: \"otherwise\"\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"\\\\texttt{dp}[S] =\\\\texttt{dp} [S \\\\backslash {k}]\\r\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mi mathvariant=\\\"normal\\\">\\\\</mi><mi>k</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[S] =\\\\texttt{dp} [S \\\\backslash {k}]\\r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">\\\\</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span><span class=\\\"mclose\\\">]</span></span></span></span></span>\"\n      }), _jsx(_components.p, {\n        children: \"Take the maximum one.\"\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"\\\\texttt{dp}[S] = \\\\max\\\\{ \\\\texttt{dp}[E_k\\\\cap S] \\\\cup \\\\{k\\\\} , \\\\texttt{dp} [S \\\\backslash {k}] \\\\}\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">{</mo><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><msub><mi>E</mi><mi>k</mi></msub><mo>∩</mo><mi>S</mi><mo stretchy=\\\"false\\\">]</mo><mo>∪</mo><mo stretchy=\\\"false\\\">{</mo><mi>k</mi><mo stretchy=\\\"false\\\">}</mo><mo separator=\\\"true\\\">,</mo><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>S</mi><mi mathvariant=\\\"normal\\\">\\\\</mi><mi>k</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[S] = \\\\max\\\\{ \\\\texttt{dp}[E_k\\\\cap S] \\\\cup \\\\{k\\\\} , \\\\texttt{dp} [S \\\\backslash {k}] \\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">{</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∩</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∪</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mclose\\\">}</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">\\\\</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span><span class=\\\"mclose\\\">]}</span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Notice this\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\max\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>⁡</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mop\\\">max</span></span></span></span>\"\n        }), \" \", _jsx(_components.strong, {\n          children: \"is compared by popcount in the program.\"\n        })]\n      }), _jsxs(_components.p, {\n        children: [\"But the time complexity is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(2 ^ n)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2 ^ n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \" or \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(2 ^ n \\\\cdot n)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>⋅</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2 ^ n \\\\cdot n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \",\\r\\nso we'll need to optimize it further.\"]\n      }), _jsxs(_components.h4, {\n        id: \"meet-in-the-middle\",\n        children: [_jsx(_components.a, {\n          href: \"#meet-in-the-middle\",\n          \"aria-hidden\": \"true\",\n          tabIndex: \"-1\",\n          className: \"anchor before\",\n          children: _jsx(HeaderLink, {})\n        }), \"Meet-in-the-middle\"]\n      }), _jsx(_components.p, {\n        children: \"Divide the original graph into two parts, do DP on each part, then merge:\"\n      }), _jsxs(_components.p, {\n        children: [\"Given two parts \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S2\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">2</span></span></span></span>\"\n        }), \", loop through \", _jsx(_components.strong, {\n          children: \"every subgraph\"\n        }), \" of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \",\"]\n      }), _jsxs(_components.p, {\n        children: [\"Then, find a subgraph of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S2\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">2</span></span></span></span>\"\n        }), \" that has direct edges with \", _jsx(_components.strong, {\n          children: \"all of the points\"\n        }), \" in the subgraph of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" that we're looping through.\"]\n      }), _jsx(_components.p, {\n        children: \"Lastly, we'll union the two subgraphs.\"\n      }), _jsxs(_components.p, {\n        children: [\"Finding this subgraph of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S2\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">S2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mord\\\">2</span></span></span></span>\"\n        }), \" can also be solved with Bitmask DP.\"]\n      }), _jsxs(_components.p, {\n        children: [\"Time Complexity is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(2^{\\\\frac N2})\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mfrac><mi>N</mi><mn>2</mn></mfrac></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2^{\\\\frac N2})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2235em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9735em;\\\"><span style=\\\"top:-3.363em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mopen nulldelimiter sizing reset-size3 size6\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8721em;\\\"><span style=\\\"top:-2.656em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.2255em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line mtight\\\" style=\\\"border-bottom-width:0.049em;\\\"></span></span><span style=\\\"top:-3.384em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.344em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter sizing reset-size3 size6\\\"></span></span></span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \".\"]\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Implementation\",\n      children: [_jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Time Complexity:\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(2^{\\\\frac N2})\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><mfrac><mi>N</mi><mn>2</mn></mfrac></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(2^{\\\\frac N2})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2235em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9735em;\\\"><span style=\\\"top:-3.363em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mopen nulldelimiter sizing reset-size3 size6\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8721em;\\\"><span style=\\\"top:-2.656em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.2255em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line mtight\\\" style=\\\"border-bottom-width:0.049em;\\\"></span></span><span style=\\\"top:-3.384em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.344em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter sizing reset-size3 size6\\\"></span></span></span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        })]\n      }), _jsx(LanguageSection, {\n        children: _jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <cstdio>\\r\\n#include <iostream>\\r\\n#include <vector>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\n\\r\\n// this function returns the number with more 1-bits (in binary)\\r\\nll popmax(ll x, ll y) {\\r\\n\\t/*\\r\\n\\t * __builtin_popcountll(x) returns the number of 1-bits of unsigned long\\r\\n\\t * long x (in binary)\\r\\n\\t */\\r\\n\\treturn __builtin_popcountll(x) < __builtin_popcountll(y) ? y : x;\\r\\n}\\r\\n\\r\\nvoid maxclique(int x, int dt, vector<ll> &f, vector<ll> a) {\\r\\n\\tfor (int i = 0, c, d; i < (1 << x); i++) {\\r\\n\\t\\td = i & (-i);\\r\\n\\t\\t/*\\r\\n\\t\\t * __builtin_ctzll(d) counts the trailing number of 0-bits of unsigned\\r\\n\\t\\t * long long d (in binary)\\r\\n\\t\\t */\\r\\n\\t\\tc = __builtin_ctzll(d);\\r\\n\\t\\tf[i] = popmax(f[i ^ d], f[i & a[c + dt] >> (dt)] | d);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n/*\\r\\n * Bitmask DP to solve Max Clique Problem in O(2^n)\\r\\n * f[S] = any possible max clique solution in S subgraph (f[S] is a set)\\r\\n * choose any point in S called D\\r\\n * if D isn't chosen F[S] = F[S\\\\{D}]\\r\\n * otherwise F[S] = F[D's neighbour in S] UNION {D}\\r\\n */\\r\\nvoid print_mask(ll ans) {\\r\\n\\tcout << __builtin_popcountll(ans) << endl;\\r\\n\\twhile (ans) {\\r\\n\\t\\tcout << __builtin_ctzll(ans) << endl;\\r\\n\\t\\tans -= ans & (-ans);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tint n, m;\\r\\n\\tcin >> n >> m;\\r\\n\\tint n1, n2;\\r\\n\\t/*\\r\\n\\t * n1 is the size of the first half\\r\\n\\t * and n2 is the size of the second half\\r\\n\\t */\\r\\n\\tn1 = n / 2;\\r\\n\\tn2 = n - n1;\\r\\n\\r\\n\\tvector<vector<int>> gr(n, vector<int>(n));\\r\\n\\tfor (int i = 1; i <= m; i++) {\\r\\n\\t\\tint u, v;\\r\\n\\t\\tcin >> u >> v;\\r\\n\\t\\tgr[u][v] = gr[v][u] = 1;\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * 1. Use a bitmask to represent the complement graph\\r\\n\\t *    Now, we just have to solve the Maximum Clique Problem (MCP)\\r\\n\\t */\\r\\n\\tvector<ll> a(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tfor (int j = 0; j < n; j++) {\\r\\n\\t\\t\\tif (!gr[i][j] && i != j) {\\r\\n\\t\\t\\t\\ta[i] |= 1ll << j;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// 2. Perform the bitmask DP\\r\\n\\tvector<ll> f(1 << n1);\\r\\n\\tvector<ll> f2(1 << n2);\\r\\n\\tmaxclique(n1, 0, f, a);\\r\\n\\tmaxclique(n2, n1, f2, a);\\r\\n\\r\\n\\t// com[S] = common neighbour of points in S\\r\\n\\tvector<ll> com(1 << n1);\\r\\n\\tll ans = 0;\\r\\n\\tcom[0] = (1ll << n) - 1;\\r\\n\\tfor (int i = 1ll; i < (1ll << n1); i++) {\\r\\n\\t\\tcom[i] = com[i - (i & (-i))] & a[__builtin_ctzll(i)];\\r\\n\\t}\\r\\n\\t/*\\r\\n\\t * 3. Meet-in-the-middle\\r\\n\\t * loop every subsets called S1,construct S2\\r\\n\\t * of all nodes of the second half which have edges to all the nodes in S1\\r\\n\\t * (so that together they still form a clique shared by both halves)\\r\\n\\t */\\r\\n\\tfor (int i = 0; i < (1ll << n1); i++) {\\r\\n\\t\\tans = popmax(ans, (f2[com[i] >> n1] << n1) | f[i]);\\r\\n\\t}\\r\\n\\tprint_mask(ans);\\r\\n}\\n\"\n            })\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"ys-MaxIndepSet","source":"YS","title":"Max Indep Set","author":"Shijie Ren"},"parent":{"name":"ys-MaxIndepSet","relativePath":"ys-MaxIndepSet.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dp-bitmasks","title":"Bitmask DP"}}}}]},"problemInfo":{"uniqueId":"ys-MaxIndepSet","url":"https://judge.yosupo.jp/problem/maximum_independent_set"}},"pageContext":{"id":"ys-MaxIndepSet"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}