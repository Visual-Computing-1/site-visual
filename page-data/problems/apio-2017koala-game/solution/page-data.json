{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/apio-2017koala-game/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"apio-17-KoalaGame\", source = \"APIO 2017\", title = \"Koala Game\", author = \"Andi Qu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\")\n  }, _props.components), {HeaderLink, MATHSPAN, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"subtask-1\",\n      children: [_jsx(_components.a, {\n        href: \"#subtask-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subtask 1\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Assign a single stone to the first cup. The minimum cup is the one where Koala\\r\\ndoesn't have a majority.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"int minValue(int N, int W) {\\r\\n\\tfill(B, B + N, 0);\\r\\n\\tB[0] = 1;\\r\\n\\tplayRound(B, R);\\r\\n\\tif (R[0] < 2) return 0;\\r\\n\\telse for (int i = 1; i < N; i++) if (!R[i]) return i;\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Uses 1 turn.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"subtask-2\",\n      children: [_jsx(_components.a, {\n        href: \"#subtask-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subtask 2\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Binary search for the maximum value.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Assume we have a list of possible candidates for the maximum. Let this list be\\r\\nof length \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"L\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\\\"application/x-tex\\\">L</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">L</span></span></span></span>\"\n      }), \". Assign each candidate \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\lfloor \\\\frac{N}{L} \\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mi>N</mi><mi>L</mi></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lfloor \\\\frac{N}{L} \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2173em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8723em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">L</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      }), \" stones. Koala\\r\\nwill always assign her stones so that the maximum cup gets a majority.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"int maxValue(int N, int W) {\\r\\n\\tvector<int> v;\\r\\n\\tfor (int i = 0; i < N; i++) v.push_back(i);\\r\\n\\twhile (v.size() != 1) {\\r\\n\\t\\tint k = W / v.size();\\r\\n\\t\\tfill(B, B + N, 0);\\r\\n\\t\\tfor (int i : v) B[i] = k;\\r\\n\\t\\tplayRound(B, R);\\r\\n\\t\\tv.clear();\\r\\n\\t\\tfor (int i = 0; i < N; i++) if (R[i] > k) v.push_back(i);\\r\\n\\t}\\r\\n\\treturn v[0];\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Uses 4 turns.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"subtask-3\",\n      children: [_jsx(_components.a, {\n        href: \"#subtask-3\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subtask 3\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Assign cups 0 and 1 \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" stones until Koala treats them differently, at which\\r\\npoint we can tell which is greater.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can binary search for \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \": if both 0 and 1 get more than \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" stones, increase\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" and otherwise, decrease \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"9 + 10 + \\\\dots + 17 > 100\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn><mo>+</mo><mn>10</mn><mo>+</mo><mo>⋯</mo><mo>+</mo><mn>17</mn><mo>&gt;</mo><mn>100</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9 + 10 + \\\\dots + 17 &gt; 100</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">9</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">10</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6835em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord\\\">17</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">100</span></span></span></span>\"\n      }), \", the maximum value of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" we need to try is 9,\\r\\nwhich improves our binary search significantly.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"int greaterValue(int N, int W) {\\r\\n\\tint l = 1, r = 9;\\r\\n\\twhile (l != r) {\\r\\n\\t\\tint mid = (l + r) / 2;\\r\\n\\t\\tB[0] = B[1] = mid;\\r\\n\\t\\tplayRound(B, R);\\r\\n\\r\\n\\t\\tif (R[0] > mid && R[1] > mid) l = mid + 1;\\r\\n\\t\\telse if (R[0] <= mid && R[1] <= mid) r = mid - 1;\\r\\n\\t\\telse return (R[0] < R[1]);\\r\\n\\t}\\r\\n\\tB[0] = B[1] = l;\\r\\n\\tplayRound(B, R);\\r\\n\\treturn (R[0] < R[1]);\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Uses 3 turns.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"subtask-4\",\n      children: [_jsx(_components.a, {\n        href: \"#subtask-4\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subtask 4\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First, notice how \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"700 \\\\approx N \\\\log N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>700</mn><mo>≈</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">700 \\\\approx N \\\\log N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">700</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \". This suggests that we need a\\r\\nmergesort-like strategy.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since we have 200 stones at our disposal this time, we can use one turn to\\r\\ncompare two cups by assigning 100 stones to both of them and 0 stones to the\\r\\nother cups. Since we can compare cups efficiently, we can then use mergesort to\\r\\nfind the values of each cup.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"inline bool compare(int a, int b, int N, int W) {\\r\\n\\tfill(B, B + N, 0);\\r\\n\\tB[a] = B[b] = W;\\r\\n\\tplayRound(B, R);\\r\\n\\treturn (R[b] > W);\\r\\n}\\r\\nvector<int> mergesort(vector<int> v, int N, int W) {\\r\\n\\tif (v.size() == 1) return v;\\r\\n\\r\\n\\tvector<int> a, b;\\r\\n\\ta.insert(a.begin(), v.begin(), v.begin() + (v.size() + 1) / 2);\\r\\n\\tb.insert(b.begin(), v.begin() + (v.size() + 1) / 2, v.end());\\r\\n\\ta = mergesort(a, N, W), b = mergesort(b, N, W);\\r\\n\\r\\n\\tvector<int> sorted;\\r\\n\\tint aptr = 0, bptr = 0;\\r\\n\\twhile (aptr < a.size() && bptr < b.size()) {\\r\\n\\t\\tif (compare(a[aptr], b[bptr], N, W)) sorted.push_back(a[aptr++]);\\r\\n\\t\\telse sorted.push_back(b[bptr++]);\\r\\n\\t}\\r\\n\\tsorted.insert(sorted.end(), a.begin() + aptr, a.end());\\r\\n\\tsorted.insert(sorted.end(), b.begin() + bptr, b.end());\\r\\n\\r\\n\\treturn sorted;\\r\\n}\\r\\n\\r\\nvoid allValues(int N, int W, int *P) {\\r\\n\\tif (W == 2 * N) {\\r\\n\\t\\tvector<int> v;\\r\\n\\t\\tfor (int i = 0; i < N; i++) v.push_back(i);\\r\\n\\t\\tvector<int> sorted = mergesort(v, N, W / 2);\\r\\n\\t\\tfor (int i = 0; i < N; i++) P[sorted[i]] = i + 1;\\r\\n\\t}\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Uses fewer than 700 turns.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"subtask-5\",\n      children: [_jsx(_components.a, {\n        href: \"#subtask-5\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Subtask 5\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We use a recursive strategy that solves for a known range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[L, R]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>R</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[L, R]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" in exactly\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"L + R - 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>L</mi><mo>+</mo><mi>R</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">L + R - 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" moves by splitting \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[L, R]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>R</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[L, R]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" into \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[L, k]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>k</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[L, k]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[k + 1, R]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>R</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[k + 1, R]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" for some\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" in exactly 1 move.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Assign each cup we know to be in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[L, R]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>R</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[L, R]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \"\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x = \\\\lfloor \\\\min(\\\\sqrt{2 * L}, \\\\frac{M}{R - L + 1}) \\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\\\"false\\\">⌊</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msqrt><mrow><mn>2</mn><mo>∗</mo><mi>L</mi></mrow></msqrt><mo separator=\\\"true\\\">,</mo><mfrac><mi>M</mi><mrow><mi>R</mi><mo>−</mo><mi>L</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">x = \\\\lfloor \\\\min(\\\\sqrt{2 * L}, \\\\frac{M}{R - L + 1}) \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.33em;vertical-align:-0.4033em;\\\"></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord sqrt\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9267em;\\\"><span class=\\\"svg-align\\\" style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord\\\" style=\\\"padding-left:0.833em;\\\"><span class=\\\"mord\\\">2</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∗</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord mathnormal\\\">L</span></span></span><span style=\\\"top:-2.8867em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"hide-tail\\\" style=\\\"min-width:0.853em;height:1.08em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl0 -0\\nc5.3,-9.3,12,-14,20,-14\\nH400000v40H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1133em;\\\"><span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8723em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mbin mtight\\\">−</span><span class=\\\"mord mathnormal mtight\\\">L</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">M</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.4033em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">)⌋</span></span></span></span>\"\n      }), \" stones and then\\r\\ncheck which positions Koala has placed more than \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" stones next to after the\\r\\nround. We can then find \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" from this information, which will always be in the\\r\\nrange \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[L, R]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>R</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[L, R]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"void split(vector<int> v, int N, int W, int* P, int l = 1, int r = 100) {\\r\\n\\tif (l == r) P[v[0]] = l;\\r\\n\\telse {\\r\\n\\t\\tint x = min((int)sqrt(2 * l), W / (r - l + 1));\\r\\n\\r\\n\\t\\tfill(B, B + N, 0);\\r\\n\\t\\tfor (int i : v) B[i] = x;\\r\\n\\r\\n\\t\\tplayRound(B, R);\\r\\n\\t\\tvector<int> less, greater;\\r\\n\\t\\tfor (int i : v) if (R[i] > x) greater.push_back(i);\\r\\n\\t\\telse less.push_back(i);\\r\\n\\r\\n\\t\\tsplit(less, N, W, P, l, l + less.size() - 1);\\r\\n\\t\\tsplit(greater, N, W, P, r - greater.size() + 1, r);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvoid allValues(int N, int W, int *P) {\\r\\n\\tif (W == N) {\\r\\n\\t\\tvector<int> v;\\r\\n\\t\\tfor (int i = 0; i < N; i++) v.push_back(i);\\r\\n\\t\\tsplit(v, N, W, P);\\r\\n\\t}\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Uses 99 turns.\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"apio-17-KoalaGame","source":"APIO 2017","title":"Koala Game","author":"Andi Qu"},"parent":{"name":"apio-17-KoalaGame","relativePath":"apio-17-KoalaGame.mdx"},"toc":{"cpp":[{"depth":2,"value":"Subtask 1","slug":"subtask-1"},{"depth":2,"value":"Subtask 2","slug":"subtask-2"},{"depth":2,"value":"Subtask 3","slug":"subtask-3"},{"depth":2,"value":"Subtask 4","slug":"subtask-4"},{"depth":2,"value":"Subtask 5","slug":"subtask-5"}],"java":[{"depth":2,"value":"Subtask 1","slug":"subtask-1"},{"depth":2,"value":"Subtask 2","slug":"subtask-2"},{"depth":2,"value":"Subtask 3","slug":"subtask-3"},{"depth":2,"value":"Subtask 4","slug":"subtask-4"},{"depth":2,"value":"Subtask 5","slug":"subtask-5"}],"py":[{"depth":2,"value":"Subtask 1","slug":"subtask-1"},{"depth":2,"value":"Subtask 2","slug":"subtask-2"},{"depth":2,"value":"Subtask 3","slug":"subtask-3"},{"depth":2,"value":"Subtask 4","slug":"subtask-4"},{"depth":2,"value":"Subtask 5","slug":"subtask-5"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"interactive","title":"Interactive and Communication Problems"}}}}]},"problemInfo":{"uniqueId":"apio-17-KoalaGame","url":"https://oj.uz/problem/view/APIO17_koala"}},"pageContext":{"id":"apio-17-KoalaGame"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}