{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-416-the-lazy-cow/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-416\", source = \"USACO Silver 2014 March\", title = \"The Lazy Cow\", author = \"Brad Ma\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Warning: _missingComponent(\"Warning\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, JavaSection, Warning, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_lazy_silver.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (C++)\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(K \\\\cdot N ^ 2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>K</mi><mo>⋅</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(K \\\\cdot N ^ 2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(JavaSection, {\n        children: [_jsx(Warning, {\n          children: _jsx(_components.p, {\n            children: \"Depending on how you implement this problem, Java code may have trouble\\r\\npassing the last testcase even though the algorithm is correct.\"\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.StringTokenizer;\\r\\n\\r\\npublic class TheLazyCow {\\r\\n\\tpublic static void main (String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"lazy\\\");\\r\\n\\t\\tint n = io.nextInt();\\r\\n\\t\\tint k = io.nextInt();\\r\\n\\t\\tint[][] matrix = new int[2 * n + 1][2 * n + 1];\\r\\n\\r\\n\\t\\t// read input and store it rotated by 45 degrees\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tfor (int j = 0; j < n; j++) {\\r\\n\\t\\t\\t\\tmatrix[i + j][n - i + j - 1] = io.nextInt();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// the 45 degree rotation expands the size of the matrix\\r\\n\\t\\t// it also includes the cells with half distance\\r\\n\\t\\tint t = (n + 1) % 2;  \\r\\n\\t\\t// t is used to avoid non-lattice points and it ensures that \\r\\n\\t\\t// dummy 0's do not affect anything\\r\\n\\t\\tn = n * 2 - 1;\\r\\n\\t\\tint best = 0;\\r\\n\\r\\n\\t\\tfor (int i = 0; i < n; i++, t = 1 - t) {\\r\\n\\t\\t\\t/*  \\r\\n\\t\\t\\t *  you can go at most k steps, but we do 2k because we set \\r\\n\\t\\t\\t *  zeros in between which doubles the distance\\r\\n\\t\\t\\t *  also, Bessie can only be positioned in lattice points\\r\\n\\t\\t\\t */\\r\\n\\t\\t\\t\\t      \\r\\n\\t\\t\\tint sum = 0;\\r\\n\\t\\t\\tfor (int a = Math.max(i - k, 0); a < n && a <= i + k; a++) {\\r\\n\\t\\t\\t\\tfor (int b = Math.max(t - k, 0); b < n && b <= t + k; b++) {\\r\\n\\t\\t\\t\\t\\tsum += matrix[a][b];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tbest = Math.max(best, sum)\\r\\n\\r\\n\\t\\t\\t// slide the region\\r\\n\\t\\t\\tfor (int j = t + 1; j + k < n; j++) {\\r\\n\\t\\t\\t\\tfor (int a = Math.max(i - k, 0); a < n && a <= i + k; a++) {\\r\\n\\t\\t\\t\\t\\tif (j - k - 1 >= 0) {\\r\\n\\t\\t\\t\\t\\t\\tsum -= matrix[a][j - k - 1];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tsum += matrix[a][j + k];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// update the sum only in lattice points\\r\\n\\t\\t\\t\\tif (j % 2 == t && best < sum) {\\r\\n\\t\\t\\t\\t\\tbest = sum;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tio.println(best);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n \\t//BeginCodeSnip{Kattio}\\n \\tstatic class Kattio extends PrintWriter {\\n \\t\\tprivate BufferedReader r;\\n \\t\\tprivate StringTokenizer st;\\n \\t\\t// standard input\\n \\t\\tpublic Kattio() { this(System.in, System.out); }\\n \\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n \\t\\t\\tsuper(o);\\n \\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n \\t\\t}\\n \\t\\t// USACO-style file input\\n \\t\\tpublic Kattio(String problemName) throws IOException {\\n \\t\\t\\tsuper(problemName + \\\".out\\\");\\n \\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n \\t\\t}\\n \\t\\t// returns null if no more input\\n \\t\\tpublic String next() {\\n \\t\\t\\ttry {\\n \\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n \\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n \\t\\t\\t\\treturn st.nextToken();\\n \\t\\t\\t} catch (Exception e) { }\\n \\t\\t\\treturn null;\\n \\t\\t}\\n \\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n \\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n \\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n \\t}\\n \\t//EndCodeSnip\\n}\\n\"\n          })\n        })]\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-416","source":"USACO Silver 2014 March","title":"The Lazy Cow","author":"Brad Ma"},"parent":{"name":"usaco-416","relativePath":"usaco-416.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"more-prefix-sums","title":"More on Prefix Sums"}}}}]},"problemInfo":{"uniqueId":"usaco-416","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=416"}},"pageContext":{"id":"usaco-416"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}