{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-572-breed-counting/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-572\", source = \"USACO Silver 2015 December\", title = \"Breed Counting\", author = \"Óscar Garries, Owen Wang, Kevin Sheng\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {LanguageSection, CPPSection, HeaderLink, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_bcount_silver_dec15.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"bcount.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"bcount.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint cow_num;\\r\\n\\tint query_num;\\r\\n\\tcin >> cow_num >> query_num;\\r\\n\\r\\n\\tvector<int> holsteins(cow_num + 1);\\r\\n\\tvector<int> guernseys(cow_num + 1);\\r\\n\\tvector<int> jerseys(cow_num + 1);\\r\\n\\tfor (int c = 0; c < cow_num; c++) {\\r\\n\\t\\tholsteins[c + 1] = holsteins[c];\\r\\n\\t\\tguernseys[c + 1] = guernseys[c];\\r\\n\\t\\tjerseys[c + 1] = jerseys[c];\\r\\n\\r\\n\\t\\tint type;\\r\\n\\t\\tcin >> type;\\r\\n\\t\\tif (type == 1) holsteins[c + 1]++;\\r\\n\\t\\telse if (type == 2) guernseys[c + 1]++;\\r\\n\\t\\telse if (type == 3) jerseys[c + 1]++;\\r\\n\\t}\\r\\n\\r\\n\\tfor (int q = 0; q < query_num; q++) {\\r\\n\\t\\tint start;\\r\\n\\t\\tint end;\\r\\n\\t\\tcin >> start >> end;\\r\\n\\t\\tcout << holsteins[end] - holsteins[start - 1] << ' '\\r\\n\\t\\t\\t << guernseys[end] - guernseys[start - 1] << ' '\\r\\n\\t\\t\\t << jerseys[end] - jerseys[start - 1] << '\\\\n';\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"implementation-1\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class BCount {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new FileReader(\\\"bcount.in\\\"));\\r\\n\\t\\tPrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\\\"bcount.out\\\")));\\r\\n\\t\\tStringTokenizer initial = new StringTokenizer(read.readLine());\\r\\n\\t\\tint cowNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tint queryNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\t\\r\\n\\t\\tint[] holsteins = new int[cowNum + 1];\\r\\n\\t\\tint[] guernseys = new int[cowNum + 1];\\r\\n\\t\\tint[] jerseys = new int[cowNum + 1];\\r\\n\\t\\tfor (int i = 1; i <= cowNum; i++) {\\r\\n\\t\\t\\tholsteins[i] += holsteins[i - 1];\\r\\n\\t\\t\\tguernseys[i] += guernseys[i - 1];\\r\\n\\t\\t\\tjerseys[i] += jerseys[i - 1];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tint breed = Integer.parseInt(read.readLine());\\r\\n\\t\\t\\tif (breed == 1) {\\r\\n\\t\\t\\t\\tholsteins[i]++;\\r\\n\\t\\t\\t} else if (breed == 2) {\\r\\n\\t\\t\\t\\tguernseys[i]++;\\r\\n\\t\\t\\t} else if (breed == 3) {\\r\\n\\t\\t\\t\\tjerseys[i]++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int q = 0; q < queryNum; q++) {\\r\\n\\t\\t\\tStringTokenizer query = new StringTokenizer(read.readLine());\\r\\n\\t\\t\\tint start = Integer.parseInt(query.nextToken());\\r\\n\\t\\t\\tint end = Integer.parseInt(query.nextToken());\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tint holstein = holsteins[end] - holsteins[start - 1];\\r\\n\\t\\t\\tint guernsey = guernseys[end] - guernseys[start - 1];\\r\\n\\t\\t\\tint jersey = jerseys[end] - jerseys[start - 1];\\r\\n\\t\\t\\tout.println(holstein + \\\" \\\" + guernsey + \\\" \\\" + jersey);\\r\\n\\t\\t}\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"with open('bcount.in') as read:\\r\\n\\tcow_num, query_num = [int(i) for i in read.readline().split()]\\r\\n\\tholsteins = [0]\\r\\n\\tguernseys = [0]\\r\\n\\tjerseys = [0]\\r\\n\\tfor _ in range(cow_num):\\r\\n\\t\\tholsteins.append(holsteins[-1])\\r\\n\\t\\tguernseys.append(guernseys[-1])\\r\\n\\t\\tjerseys.append(jerseys[-1])\\r\\n\\r\\n\\t\\tcow = int(read.readline())\\r\\n\\t\\tif cow == 1:\\r\\n\\t\\t\\tholsteins[-1] += 1\\r\\n\\t\\telif cow == 2:\\r\\n\\t\\t\\tguernseys[-1] += 1\\r\\n\\t\\telif cow == 3:\\r\\n\\t\\t\\tjerseys[-1] += 1\\r\\n\\r\\n\\twith open('bcount.out', 'w') as written:\\r\\n\\t\\tfor _ in range(query_num):\\r\\n\\t\\t\\tstart, end = [int(i) for i in read.readline().split()]\\r\\n\\t\\t\\tholstein = holsteins[end] - holsteins[start - 1]\\r\\n\\t\\t\\tguernsey = guernseys[end] - guernseys[start - 1]\\r\\n\\t\\t\\tjersey = jerseys[end] - jerseys[start - 1]\\r\\n\\t\\t\\twritten.write(f'{holstein} {guernsey} {jersey}\\\\n')\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-572","source":"USACO Silver 2015 December","title":"Breed Counting","author":"Óscar Garries, Owen Wang, Kevin Sheng"},"parent":{"name":"usaco-572","relativePath":"usaco-572.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":3,"value":"Implementation","slug":"implementation-1"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"prefix-sums","title":"Introduction to Prefix Sums"}}}},{"node":{"module":{"frontmatter":{"id":"visual","title":"Visual"}}}}]},"problemInfo":{"uniqueId":"usaco-572","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=572"}},"pageContext":{"id":"usaco-572"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}