{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-1064-stuck-in-a-rut/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-1064\", source = \"USACO Silver 2020 December\", title = \"Stuck in a Rut\", author = \"Qi Wang, Melody Yu (Video), Brad Ma\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, Youtube, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://usaco.org/current/data/sol_prob3_silver_dec20.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: The video solution might not be the same as other solutions. Code in C++.\"\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"7ZA0MQ9uFr4\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"// Created by Qi Wang\\r\\n\\r\\n#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\n\\r\\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\\r\\n#define FORE(i, a, b) for(int i = (a); i <= (b); i++)\\r\\n#define F0R(i, a) for(int i = 0; i < (a); i++)\\r\\n#define trav(a, x) for (auto& a : x)\\r\\n\\r\\ntypedef long long ll;\\r\\n\\r\\nstruct Cow{\\r\\n\\tpair<int, int> coor; int id;\\r\\n\\tCow(pair<int, int> p, int i){\\r\\n\\t\\tcoor = p;\\r\\n\\t\\tid = i;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nint N;\\r\\nvector<Cow> C_N;\\r\\nvector<Cow> C_E;\\r\\n\\r\\n//Custom sorting methods\\r\\nbool cmp(const Cow &o, const Cow &t){\\r\\n\\tif(o.coor.first == t.coor.first){\\r\\n\\t\\treturn o.coor.second < t.coor.second;\\r\\n\\t}\\r\\n\\treturn o.coor.first < t.coor.first;\\r\\n}\\r\\n\\r\\nbool cmp2(const Cow &o, const Cow &t){\\r\\n\\tif(o.coor.second == t.coor.second){\\r\\n\\t\\treturn o.coor.first < t.coor.first;\\r\\n\\t}\\r\\n\\treturn o.coor.second < t.coor.second;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tcin >> N;\\r\\n\\r\\n\\tF0R(i, N){\\r\\n\\t\\tint x, y; char d; cin>>d>>x>>y;\\r\\n\\t\\tif(d=='N'){\\r\\n\\t\\t\\tC_N.push_back(Cow({x,y},i));\\r\\n\\t\\t}\\r\\n\\t\\telse{\\r\\n\\t\\t\\tC_E.push_back(Cow({x,y},i));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tsort(C_N.begin(), C_N.end(), cmp);\\r\\n\\tsort(C_E.begin(), C_E.end(), cmp2);\\r\\n\\r\\n\\tbool stopped[2501];\\r\\n\\tint blame[2501];\\r\\n\\tfill(stopped, stopped+N, false);\\r\\n\\tfill(blame, blame+N, 0);\\r\\n\\ttrav(c1, C_E){\\r\\n\\t\\ttrav(c2, C_N){\\r\\n\\t\\t\\t//Checks whether they intersect\\r\\n\\t\\t\\tif(!stopped[c1.id] && !stopped[c2.id] && c1.coor.second >= c2.coor.second && c1.coor.first <= c2.coor.first){\\r\\n\\t\\t\\t\\tint xlen = c2.coor.first - c1.coor.first;\\r\\n\\t\\t\\t\\tint ylen = c1.coor.second - c2.coor.second;\\r\\n\\r\\n\\t\\t\\t\\t//checks which cow will block the other\\r\\n\\t\\t\\t\\tif(ylen < xlen){\\r\\n\\t\\t\\t\\t\\tstopped[c1.id] = true;\\r\\n\\t\\t\\t\\t\\tblame[c2.id] += 1 + blame[c1.id];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\telse if(ylen > xlen){\\r\\n\\t\\t\\t\\t\\tstopped[c2.id] = true;\\r\\n\\t\\t\\t\\t\\tblame[c1.id] += 1 + blame[c2.id];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tF0R(i, N){\\r\\n\\t\\tcout << blame[i] << \\\"\\\\n\\\";\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class StuckInARut {\\r\\n\\tstatic int[] xCoordinates;\\r\\n\\tstatic int[] yCoordinates;\\r\\n\\r\\n\\tpublic static void main (String[] args) throws IOException {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint n = Integer.parseInt(br.readLine());\\r\\n\\r\\n\\t\\tList<Integer> eastCows = new ArrayList<>();\\r\\n\\t\\tList<Integer> northCows = new ArrayList<>();\\r\\n\\t\\txCoordinates = new int[n];\\r\\n\\t\\tyCoordinates = new int[n];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tStringTokenizer line = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tString direction = line.nextToken();\\r\\n\\t\\t\\tif (direction.equals(\\\"E\\\")) {\\r\\n\\t\\t\\t\\teastCows.add(i);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tnorthCows.add(i);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\txCoordinates[i] = Integer.parseInt(line.nextToken());\\r\\n\\t\\t\\tyCoordinates[i] = Integer.parseInt(line.nextToken());\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// sort the east cows by y-coordinate\\r\\n\\t\\teastCows.sort(Comparator.comparingInt(j -> yCoordinates[j]));\\r\\n\\t\\t// sort the north cows by x-coordinate\\r\\n\\t\\tnorthCows.sort(Comparator.comparingInt(j -> xCoordinates[j]));\\r\\n\\r\\n\\t\\tboolean[] stopped = new boolean[n];\\r\\n\\t\\tint[] amountStopped = new int[n];\\r\\n\\t\\tfor (int j : eastCows) {  // loop through all pairs of cows\\r\\n\\t\\t\\tfor (int k : northCows) {\\r\\n\\t\\t\\t\\t/*\\r\\n\\t\\t\\t\\t * make sure that both the east and north cows\\r\\n\\t\\t\\t\\t * are not stopped a collision is only possible\\r\\n\\t\\t\\t\\t * if the x of the north cow is greater\\r\\n\\t\\t\\t\\t * than the x of east cow and the y of the east\\r\\n\\t\\t\\t\\t * cow is greater than the y of the north cow\\r\\n\\t\\t\\t\\t */\\r\\n\\t\\t\\t\\tif ((!stopped[j]) && (!stopped[k]) &&\\r\\n\\t\\t\\t\\t\\t\\t(xCoordinates[k] > xCoordinates[j])\\r\\n\\t\\t\\t\\t\\t\\t&& (yCoordinates[j] > yCoordinates[k])) {\\r\\n\\t\\t\\t\\t\\tif ((xCoordinates[k] - xCoordinates[j]) >\\r\\n\\t\\t\\t\\t\\t\\t\\t(yCoordinates[j] - yCoordinates[k])) {\\r\\n\\t\\t\\t\\t\\t\\t// the north cow stops the east cow\\r\\n\\t\\t\\t\\t\\t\\t// mark the east cow as stopped\\r\\n\\t\\t\\t\\t\\t\\tstopped[j] = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// add number of cows that the east cow stops + 1\\r\\n\\t\\t\\t\\t\\t\\tamountStopped[k] += (1 + amountStopped[j]);\\r\\n\\t\\t\\t\\t\\t} else if ((xCoordinates[k] - xCoordinates[j]) <\\r\\n\\t\\t\\t\\t\\t\\t\\t(yCoordinates[j] - yCoordinates[k])) {\\r\\n\\t\\t\\t\\t\\t\\t// the east cow stops the north cow\\r\\n\\t\\t\\t\\t\\t\\t// mark the north cow as stopped\\r\\n\\t\\t\\t\\t\\t\\tstopped[k] = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// add number of cows that the north cow stops + 1\\r\\n\\t\\t\\t\\t\\t\\tamountStopped[j] += (1 + amountStopped[k]);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t// if difference in x and difference in y is equal,\\r\\n\\t\\t\\t\\t\\t// let the cows continue as stated in the problem\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tSystem.out.println(amountStopped[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-1064","source":"USACO Silver 2020 December","title":"Stuck in a Rut","author":"Qi Wang, Melody Yu (Video), Brad Ma"},"parent":{"name":"usaco-1064","relativePath":"usaco-1064.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"sorting-custom","title":"Custom Comparators and Coordinate Compression"}}}}]},"problemInfo":{"uniqueId":"usaco-1064","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1064"}},"pageContext":{"id":"usaco-1064"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}