{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1085-array-division/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1085\", source = \"CSES\", title = \"Array Division\", author = \"Michael Cao\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Warning: _missingComponent(\"Warning\")\n  }, _props.components), {MATHSPAN, HeaderLink, Warning, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this problem, we're asked to divide an array into \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" subarrays such that the\\r\\nmaximum sum of a subarray is minimized.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"binary-search\",\n      children: [_jsx(_components.a, {\n        href: \"#binary-search\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Binary Search\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's begin by making an important observation. First of all, if you can divide\\r\\nan array such that the maximum sum is at most \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", you can also divide the array\\r\\nsuch that the maximum sum is at most \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y > x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mo>&gt;</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y &gt; x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7335em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" with the same division.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"greedy\",\n      children: [_jsx(_components.a, {\n        href: \"#greedy\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Greedy\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, given some maximum sum \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", we can check whether a division is possible\\r\\nusing a greedy algorithm. If we can divide the array into \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"s < k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>s</mi><mo>&lt;</mo><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">s &lt; k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5782em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" subarrays,\\r\\nthen we can divide it into \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" subarrays without increasing the maximum sum of a\\r\\nsubarray. Therefore, we can greedily create subarrays as long as the sum of the\\r\\nsubarray does not exceed \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", and check if the number of subarrays is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\leq k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≤</mo><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\leq k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsxs(_components.p, {\n        children: [\"Make sure to use \", _jsx(_components.code, {\n          children: \"long long\"\n        }), \"s to avoid overflow! Implementing the greedy\\r\\nalgorithm also requires some caution.\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nusing ll = long long;\\r\\n\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\n\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\n\\r\\nint main(){\\r\\n\\tios::sync_with_stdio(false);\\r\\n\\tcin.tie(0);\\r\\n\\tint n, k; cin >> n >> k;\\r\\n\\tvector<ll> a(n);\\r\\n\\t// The maximum sum possible is the sum of all the elements in the vector.\\r\\n\\tll max_sum = 0;\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> a[i];\\r\\n\\t\\tmax_sum = max_sum + a[i];\\r\\n\\t}\\r\\n\\t\\r\\n\\tll lo = 0, hi = max_sum, ans = 0;\\r\\n\\tauto works = [&] (ll mid) {\\r\\n\\t\\tint groups = 0;\\r\\n\\t\\tll sum = 0;\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tif (a[i] > mid) {\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (sum + a[i] > mid) {\\r\\n\\t\\t\\t\\t++groups;\\r\\n\\t\\t\\t\\tsum = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tsum += a[i];\\r\\n\\t\\t}\\r\\n\\t\\tif (sum > 0) {\\r\\n\\t\\t\\t++groups;\\r\\n\\t\\t}\\r\\n\\t\\treturn groups <= k;\\r\\n\\t};\\r\\n\\twhile (lo <= hi) {\\r\\n\\t\\tll mid = (lo + hi) / 2;\\r\\n\\t\\tif (works(mid)) {\\r\\n\\t\\t\\thi = mid - 1;\\r\\n\\t\\t\\tans = mid;\\r\\n\\t\\t}\\r\\n\\t\\telse {\\r\\n\\t\\t\\tlo = mid + 1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ans << '\\\\n';\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1085","source":"CSES","title":"Array Division","author":"Michael Cao"},"parent":{"name":"cses-1085","relativePath":"cses-1085.mdx"},"toc":{"cpp":[{"depth":2,"value":"Binary Search","slug":"binary-search"},{"depth":2,"value":"Greedy","slug":"greedy"}],"java":[{"depth":2,"value":"Binary Search","slug":"binary-search"},{"depth":2,"value":"Greedy","slug":"greedy"}],"py":[{"depth":2,"value":"Binary Search","slug":"binary-search"},{"depth":2,"value":"Greedy","slug":"greedy"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"binary-search","title":"Binary Search"}}}}]},"problemInfo":{"uniqueId":"cses-1085","url":"https://cses.fi/problemset/task/1085"}},"pageContext":{"id":"cses-1085"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}