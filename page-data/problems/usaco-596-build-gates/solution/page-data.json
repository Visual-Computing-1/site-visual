{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-596-build-gates/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-596\", source = \"USACO Silver 2016 January\", title = \"Build Gates\", author = \"Maggie Liu, Aadit Ambadkar\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    strong: \"strong\",\n    Warning: _missingComponent(\"Warning\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\")\n  }, _props.components), {Warning, MATHSPAN, LanguageSection, CPPSection, HeaderLink, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_gates_silver_jan16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsxs(_components.p, {\n        children: [\"The official solution stores the farm in a \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2005 \\\\times 2005\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2005</mn><mo>×</mo><mn>2005</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2005 \\\\times 2005</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">2005</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">×</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2005</span></span></span></span>\"\n        }), \" boolean array with\\r\\nthe origin at \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"(1002, 1002)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mn>1002</mn><mo separator=\\\"true\\\">,</mo><mn>1002</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(1002, 1002)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1002</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1002</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \", but this is not sufficient. Since each fence\\r\\nsegment is doubled, the maximum distance in each direction could be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2000\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2000</span></span></span></span>\"\n        }), \"\\r\\nunits, causing an input such as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1000\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1000</span></span></span></span>\"\n        }), \" \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{N}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">N</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{N}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">N</span></span></span></span></span>\"\n        }), \"s to go out of bounds. To not\\r\\ngo out of bounds, an array of size \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"4003 \\\\times 4003\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4003</mn><mo>×</mo><mn>4003</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4003 \\\\times 4003</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">4003</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">×</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4003</span></span></span></span>\"\n        }), \" should be used: \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" unit\\r\\nfor the origin position, \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2000\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2000</span></span></span></span>\"\n        }), \" units in each direction from the origin and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \"\\r\\nmore unit in each direction to ensure that the farm includes area beyond the\\r\\nfence.\"]\n      })\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\n#include <map>\\r\\nusing namespace std;\\r\\nvoid ff(int i, int j);\\r\\n\\r\\nbool fence[4003][4003] = {false};\\r\\nbool visited[4003][4003] = {false};\\r\\nint maxx = 2001, minx = 2001, maxy = 2001, miny = 2001;\\r\\nint main()\\r\\n{\\r\\n\\tfreopen(\\\"gates.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"gates.out\\\", \\\"w\\\", stdout);\\r\\n\\tint n;\\r\\n\\tstring path;\\r\\n\\tcin >> n >> path;\\r\\n\\tint x = 2001, y = 2001;\\r\\n\\tmap<char, pair<int, int>> dir {\\r\\n\\t\\t{'N', {-1, 0}}, {'S', {1, 0}}, {'E', {0, 1}}, {'W', {0, -1}}\\r\\n\\t};\\r\\n\\t//mark fences, scaling so they are 2 units instead of 1\\r\\n\\tfor (int i = 0; i < n; i++)\\r\\n\\t{\\r\\n\\t\\tfence[x + dir[path[i]].first][y + dir[path[i]].second] = true;\\r\\n\\t\\tfence[x + 2 * dir[path[i]].first][y + 2 * dir[path[i]].second] = true;\\r\\n\\t\\tx += 2 * dir[path[i]].first;\\r\\n\\t\\ty += 2 * dir[path[i]].second;\\r\\n\\t\\tminx = min(minx, x);\\r\\n\\t\\tmaxx = max(maxx, x);\\r\\n\\t\\tminy = min(miny, y);\\r\\n\\t\\tmaxy = max(maxy, y);\\r\\n\\t}\\r\\n\\t//expand the farm to include area outside the fences\\r\\n\\tminx--; maxx++; miny--; maxy++;\\r\\n\\tint regions = 0;\\r\\n\\t//floodfill the farm to find the number of regions the farm is broken into\\r\\n\\tfor (int i = minx; i <= maxx; i++)\\r\\n\\t{\\r\\n\\t\\tfor (int j = miny; j <= maxy; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (!visited[i][j] && !fence[i][j])\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tff(i, j);\\r\\n\\t\\t\\t\\tregions++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t//answer is regions - 1 because each gate decreases the number of regions by 1\\r\\n\\tcout << regions - 1 << endl;\\r\\n\\treturn 0;\\r\\n}\\r\\n\\r\\nvoid ff(int i, int j)\\r\\n{\\r\\n\\tif (i < minx || i > maxx || j < miny || j > maxy || visited[i][j] || fence[i][j])\\r\\n\\t{\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\tvisited[i][j] = true;\\r\\n\\tint x[] = {-1, 0, 0, 1}, y[] = {0, -1, 1, 0};\\r\\n\\tfor (int k = 0; k < 4; k++)\\r\\n\\t{\\r\\n\\t\\tff(i + x[k], j + y[k]);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"alternate-faster-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#alternate-faster-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Alternate Faster Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is possible to make the following 2 observations:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"For each contiguous closed region, there must be 1 gate. In a minimum state, each region has exactly 1 gate. For example, if there are 2 regions, there must be 2 gates.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Each time FJ comes across a node he has visited along an edge he has not crossed in either direction, he creates exactly 1 new region. In other words, FJ creates exactly 1 new contiguous closed region if all of these conditions are met:\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"FJ walks along an edge from point \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"a\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n            }), \" to \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"b\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n            })]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"He did not walk from \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"a\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n            }), \" to \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"b\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n            }), \" in the past\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"He did not walk from \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"b\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n            }), \" to \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"a\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n            }), \" in the past\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"b\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n            }), \" is a point he had already visited\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Under these observations, we can use a set of visited edges and visited nodes, and keep track of the number of contiguous closed regions. This solution is about 10 times faster than flood filling due to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\log N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\log N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \" lookup and insertion.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"gates.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"gates.out\\\", \\\"w\\\", stdout);\\r\\n\\t\\r\\n\\tios::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tint n; cin >> n;\\r\\n\\tstring s; cin >> s;\\r\\n\\t\\r\\n\\tset<pair<pair<int, int>, pair<int, int>>> visedge;\\r\\n\\tset<pair<int, int>> visnode;\\r\\n\\tint ans = 0;\\r\\n\\tpair<int, int> prev{0, 0};\\r\\n\\tvisnode.insert(prev);\\r\\n\\t\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tint x = prev.first; int y = prev.second;\\r\\n\\t\\tif (s[i] == 'N') {\\r\\n\\t\\t\\tx++;\\r\\n\\t\\t} else if (s[i] == 'S') {\\r\\n\\t\\t\\tx--;\\r\\n\\t\\t} else if (s[i] == 'E') {\\r\\n\\t\\t\\ty--;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\ty++;\\r\\n\\t\\t}\\r\\n\\t\\t\\t      \\r\\n\\t\\t// Check if the edge from prev to {x, y} was visited (see 2nd observation)\\r\\n\\t\\tif (visedge.find({{x, y}, prev}) == visedge.end() \\r\\n\\t\\t\\t\\t&& visnode.find({x, y}) != visnode.end()) {\\r\\n\\t\\t\\tans++;\\r\\n\\t\\t}\\r\\n\\t\\t\\t  \\r\\n\\t\\tvisedge.insert({{x, y}, prev});\\r\\n\\t\\tvisedge.insert({prev, {x, y}});\\r\\n        \\tvisnode.insert({x, y});\\r\\n\\t\\t\\t  \\r\\n\\t\\tprev.first = x;\\r\\n\\t\\tprev.second = y;\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-596","source":"USACO Silver 2016 January","title":"Build Gates","author":"Maggie Liu, Aadit Ambadkar"},"parent":{"name":"usaco-596","relativePath":"usaco-596.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Alternate Faster Solution","slug":"alternate-faster-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}],"java":[{"depth":2,"value":"Alternate Faster Solution","slug":"alternate-faster-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}],"py":[{"depth":2,"value":"Alternate Faster Solution","slug":"alternate-faster-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"flood-fill","title":"Flood Fill"}}}}]},"problemInfo":{"uniqueId":"usaco-596","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=596"}},"pageContext":{"id":"usaco-596"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}