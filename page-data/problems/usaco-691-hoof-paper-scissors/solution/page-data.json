{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-691-hoof-paper-scissors/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-691\", source = \"USACO Silver 2017 January\", title = \"Hoof, Paper, Scissors\", author = \"Óscar Garries (C++), Owen Wang (Java)\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {LanguageSection, CPPSection, HeaderLink, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_hps_silver_jan17.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nint main () {\\r\\n\\tfreopen(\\\"hps.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"hps.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\tvector<int> h(n + 1), p(n + 1), s(n + 1);\\r\\n\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\th[i + 1] = h[i];\\r\\n\\t\\tp[i + 1] = p[i];\\r\\n\\t\\ts[i + 1] = s[i];\\r\\n\\r\\n\\t\\tchar cur;\\r\\n\\t\\tcin >> cur;\\r\\n\\t\\tif (cur == 'P') p[i + 1]++;\\r\\n\\t\\telse if (cur == 'H') h[i + 1]++;\\r\\n\\t\\telse s[i + 1]++;\\r\\n\\t}\\r\\n\\r\\n\\tint sol = 0;\\r\\n\\r\\n\\tfor (int i = 1; i <= n; i++) {\\r\\n\\t\\tauto update = [&] (vector<int>& a, vector<int>& b) {\\r\\n\\t\\t\\t\\tsol = max(sol, a[i] + b[n] - b[i]);\\r\\n\\t\\t};\\r\\n\\t\\tupdate(h, p);\\r\\n\\t\\tupdate(h, s);\\r\\n\\t\\tupdate(p, s);\\r\\n\\t\\tupdate(p, h);\\r\\n\\t\\tupdate(s, h);\\r\\n\\t\\tupdate(s, p);\\r\\n\\t}\\r\\n\\r\\n\\tcout << sol << '\\\\n';\\r\\n}\\r\\n\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-1\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.File;\\r\\nimport java.io.PrintWriter;\\r\\nimport java.util.Scanner;\\r\\n\\r\\npublic class hps {\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tScanner sc = new Scanner(new File(\\\"hps.in\\\"));\\r\\n\\t\\tPrintWriter out = new PrintWriter(\\\"hps.out\\\");\\r\\n\\r\\n\\t\\tint N = sc.nextInt();\\r\\n\\t\\tint[] hooves = new int[N + 1];\\r\\n\\t\\tint[] paper = new int[N + 1];\\r\\n\\t\\tint[] scissors = new int[N + 1];\\r\\n\\r\\n\\t\\tfor (int i = 1; i < N + 1; i++) {\\r\\n\\t\\t\\tchar action = sc.next().charAt(0);\\r\\n\\t\\t\\thooves[i] += hooves[i - 1];\\r\\n\\t\\t\\tpaper[i] += paper[i - 1];\\r\\n\\t\\t\\tscissors[i] += scissors[i - 1];\\r\\n\\t\\t\\tif (action == 'H') {\\r\\n\\t\\t\\t\\tpaper[i] ++;\\r\\n\\t\\t\\t} else if (action == 'P') {\\r\\n\\t\\t\\t\\tscissors[i] ++;\\r\\n\\t\\t\\t} else if (action == 'S') {\\r\\n\\t\\t\\t\\thooves[i] ++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tsc.close();\\r\\n\\r\\n\\t\\tint max = 0;\\r\\n\\r\\n\\t\\tfor (int i = 1; i < N + 1; i++) {\\r\\n\\t\\t\\tint beforeWin = Math.max(hooves[i], Math.max(paper[i], scissors[i]));\\r\\n\\t\\t\\tint afterWin = Math.max(hooves[N] - hooves[i], Math.max(paper[N] - paper[i], scissors[N] - scissors[i]));\\r\\n\\r\\n\\t\\t\\tmax = Math.max(max, beforeWin + afterWin);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tout.println(max);\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-691","source":"USACO Silver 2017 January","title":"Hoof, Paper, Scissors","author":"Óscar Garries (C++), Owen Wang (Java)"},"parent":{"name":"usaco-691","relativePath":"usaco-691.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation-1"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"prefix-sums","title":"Introduction to Prefix Sums"}}}},{"node":{"module":{"frontmatter":{"id":"visual","title":"Visual"}}}}]},"problemInfo":{"uniqueId":"usaco-691","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=691"}},"pageContext":{"id":"usaco-691"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}