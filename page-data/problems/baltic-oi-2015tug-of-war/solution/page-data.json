{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/baltic-oi-2015tug-of-war/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"baltic-15-TugOfWar\", source = \"Baltic OI 2015\", title = \"Tug of War\", author = \"Andi Qu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\")\n  }, _props.components), {HeaderLink, MATHSPAN, MATHDIV, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://boi.cses.fi/files/boi2015_solutions.zip\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"making-cycles\",\n      children: [_jsx(_components.a, {\n        href: \"#making-cycles\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Making Cycles\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Imagine we have a bipartite graph where each spot is a node and each person is\\r\\nan edge between the two spots they're willing to take.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If any node has degree equal to 0, then it's not possible to assign the teams.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If any node has degree equal to 1, then we must assign the person willing to\\r\\ntake that spot to it. After assigning that person, we can delete the node and\\r\\nedge from the graph.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can repeatedly assign people to and delete nodes with degree equal to 1 by\\r\\nusing a BFS. After doing this, all nodes will have degree greater than 1.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"However, if any node has degree greater than 2, then by the pigeonhole\\r\\nprinciple, there must be a node with degree equal to less than 2, which isn't\\r\\npossible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Thus, we are left with several disjoint simple cycles. Since this is a bipartite\\r\\ngraph, these cycle lengths are all even.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"using-knapsack-dp\",\n      children: [_jsx(_components.a, {\n        href: \"#using-knapsack-dp\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Using Knapsack DP\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let the set of all cycles be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \" and let the difference in strengths from the\\r\\nnodes we previously deleted be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"d\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\\\"application/x-tex\\\">d</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Consider a single cycle. Notice how if a person/edge is assigned to some side,\\r\\nthen the next person must be assigned to the opposite side.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This means that each cycle contributes a fixed amount to the difference in\\r\\nstrengths! Let the absolute value of this amount for the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \"-th cycle be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">V_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We now only need to check whether there exist 2 disjoint sets \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"T\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\\\"application/x-tex\\\">T</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span></span></span></span>\"\n      }), \" such\\r\\nthat \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S \\\\cup T = C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mo>∪</mo><mi>T</mi><mo>=</mo><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S \\\\cup T = C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">∪</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \" and\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\left |d + \\\\sum_{i \\\\in T} V_i - \\\\sum_{i \\\\in S} V_i \\\\right | \\\\leq K\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mrow><mo fence=\\\"true\\\">∣</mo><mi>d</mi><mo>+</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>T</mi></mrow></munder><msub><mi>V</mi><mi>i</mi></msub><mo>−</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>S</mi></mrow></munder><msub><mi>V</mi><mi>i</mi></msub><mo fence=\\\"true\\\">∣</mo></mrow><mo>≤</mo><mi>K</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\left |d + \\\\sum_{i \\\\in T} V_i - \\\\sum_{i \\\\in S} V_i \\\\right | \\\\leq K</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3.0837em;vertical-align:-1.3217em;\\\"></span><span class=\\\"minner\\\"><span class=\\\"mopen\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.762em;\\\"><span style=\\\"top:-2.566em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span><span style=\\\"top:-3.164em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span style=\\\"height:1.816em;width:0.3333em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\\\"top:-4.972em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.8557em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.13889em;\\\">T</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.3217em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.8557em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.3217em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.762em;\\\"><span style=\\\"top:-2.566em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span><span style=\\\"top:-3.164em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span style=\\\"height:1.816em;width:0.3333em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\\\"top:-4.972em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is the same as checking whether a subset \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \" of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \" exists such that\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\left |d + \\\\sum_{i \\\\in C} V_i - 2 \\\\sum_{i \\\\in S} V_i \\\\right | \\\\leq K\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mrow><mo fence=\\\"true\\\">∣</mo><mi>d</mi><mo>+</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>C</mi></mrow></munder><msub><mi>V</mi><mi>i</mi></msub><mo>−</mo><mn>2</mn><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>S</mi></mrow></munder><msub><mi>V</mi><mi>i</mi></msub><mo fence=\\\"true\\\">∣</mo></mrow><mo>≤</mo><mi>K</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\left |d + \\\\sum_{i \\\\in C} V_i - 2 \\\\sum_{i \\\\in S} V_i \\\\right | \\\\leq K</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3.0837em;vertical-align:-1.3217em;\\\"></span><span class=\\\"minner\\\"><span class=\\\"mopen\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.762em;\\\"><span style=\\\"top:-2.566em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span><span style=\\\"top:-3.164em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span style=\\\"height:1.816em;width:0.3333em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\\\"top:-4.972em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.8557em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.3217em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.8557em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.3217em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.762em;\\\"><span style=\\\"top:-2.566em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span><span style=\\\"top:-3.164em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span style=\\\"height:1.816em;width:0.3333em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.3333em' height='1.816em' style='width:0.3333em' viewBox='0 0 333.33000000000004 1816' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z'/></svg></span></span><span style=\\\"top:-4.972em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.816em;\\\"></span><span class=\\\"delimsizinginner delim-size1\\\"><span>∣</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can check this using knapsack DP in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NK)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NK)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since we are only checking whether we can obtain some value, we can use a bitset\\r\\nto speed this up.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The final complexity is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NK / 64)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>K</mi><mi mathvariant=\\\"normal\\\">/</mi><mn>64</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NK / 64)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mord\\\">/64</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \", which is fast enough for 100\\r\\npoints.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nmultiset<pair<int, int>> graph[60001];\\r\\nbool visited[60001];\\r\\nbitset<600001> possible;\\r\\nint tot = 0, sm = 0;\\r\\n\\r\\nvoid dfs(int node) {\\r\\n\\tvisited[node] = true;\\r\\n\\tif (!graph[node].size()) return;\\r\\n\\tint nxt, cost;\\r\\n\\ttie(nxt, cost) = *graph[node].begin();\\r\\n\\r\\n\\ttot += cost;\\r\\n\\tif (!visited[nxt]) {\\r\\n\\t\\tgraph[nxt].erase(graph[nxt].find({node, -cost}));\\r\\n\\t\\tgraph[node].clear();\\r\\n\\t\\tdfs(nxt);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tint n, k;\\r\\n\\tscanf(\\\"%d %d\\\", &n, &k);\\r\\n\\tfor (int i = 1; i <= 2 * n; i++) {\\r\\n\\t\\tint l, r, s;\\r\\n\\t\\tscanf(\\\"%d %d %d\\\", &l, &r, &s);\\r\\n\\t\\tgraph[l].insert({n + r, s});\\r\\n\\t\\tgraph[n + r].insert({l, -s});\\r\\n\\t}\\r\\n\\r\\n\\tqueue<int> q;\\r\\n\\tfor (int i = 1; i <= 2 * n; i++) {\\r\\n\\t\\tif (graph[i].size() == 1) q.push(i);\\r\\n\\t\\tif (graph[i].size() == 0) return printf(\\\"NO\\\\n\\\"), 0;\\r\\n\\t}\\r\\n\\twhile (q.size()) {\\r\\n\\t\\tint curr = q.front();\\r\\n\\t\\tq.pop();\\r\\n\\t\\tif (graph[curr].size() == 0) return printf(\\\"NO\\\\n\\\"), 0;\\r\\n\\t\\tint nxt, cost;\\r\\n\\t\\ttie(nxt, cost) = *graph[curr].begin();\\r\\n\\t\\ttot += cost;\\r\\n\\r\\n\\t\\tgraph[curr].clear();\\r\\n\\t\\tgraph[nxt].erase(graph[nxt].find({curr, -cost}));\\r\\n\\t\\tif (graph[nxt].size() == 1) q.push(nxt);\\r\\n\\t}\\r\\n\\r\\n\\tvector<int> items;\\r\\n\\tif (tot) items.push_back(abs(tot));\\r\\n\\tfor (int i = 1; i <= 2 * n; i++) if (!visited[i] && graph[i].size()) {\\r\\n\\t\\ttot = 0;\\r\\n\\t\\tgraph[i].erase(graph[i].begin());\\r\\n\\t\\tdfs(i);\\r\\n\\t\\tif (tot) items.push_back(abs(tot));\\r\\n\\t}\\r\\n\\tsm = accumulate(items.begin(), items.end(), 0);\\r\\n\\r\\n\\tpossible[0] = 1;\\r\\n\\tfor (int i : items) possible |= possible << i;\\r\\n\\tfor (int i = 0; i <= sm; i++)\\r\\n\\t\\tif (possible[i] && abs(2 * i - sm) <= k)\\r\\n\\t\\t\\treturn printf(\\\"YES\\\\n\\\"), 0;\\r\\n\\tprintf(\\\"NO\\\\n\\\");\\r\\n\\treturn 0;\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"baltic-15-TugOfWar","source":"Baltic OI 2015","title":"Tug of War","author":"Andi Qu"},"parent":{"name":"baltic-15-TugOfWar","relativePath":"baltic-15-TugOfWar.mdx"},"toc":{"cpp":[{"depth":2,"value":"Making Cycles","slug":"making-cycles"},{"depth":2,"value":"Using Knapsack DP","slug":"using-knapsack-dp"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Making Cycles","slug":"making-cycles"},{"depth":2,"value":"Using Knapsack DP","slug":"using-knapsack-dp"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Making Cycles","slug":"making-cycles"},{"depth":2,"value":"Using Knapsack DP","slug":"using-knapsack-dp"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"bitsets","title":"(Optional) Bitsets"}}}}]},"problemInfo":{"uniqueId":"baltic-15-TugOfWar","url":"https://oj.uz/problem/view/BOI15_tug"}},"pageContext":{"id":"baltic-15-TugOfWar"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}