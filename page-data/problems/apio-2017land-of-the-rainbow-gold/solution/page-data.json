{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/apio-2017land-of-the-rainbow-gold/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"apio-17-rainbow\", source = \"APIO 2017\", title = \"Land of the Rainbow Gold\", author = \"Andi Qu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\")\n  }, _props.components), {HeaderLink, MATHSPAN, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"tldr\",\n      children: [_jsx(_components.a, {\n        href: \"#tldr\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"TL;DR\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Euler's formula + a suitable data structure for 2D range queries.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"intuition\",\n      children: [_jsx(_components.a, {\n        href: \"#intuition\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Intuition\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this problem, we're asked to count the number of contiguous areas of cells on\\r\\nseveral flat rectangles. Such areas are separated by river segments and\\r\\nrectangle boundaries.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where else do we count the number of areas on a flat surface?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That's right - we use Euler's formula to count the number of faces of a\\r\\n\", _jsx(_components.a, {\n        href: \"http://discrete.openmathbooks.org/more/mdm/sec_planar.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"planar graph\"\n      }), \". This\\r\\nsuggests that we should turn our rectangles into planar graphs.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"making-the-planar-graph\",\n      children: [_jsx(_components.a, {\n        href: \"#making-the-planar-graph\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Making the Planar Graph\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can turn a rectangle into a planar graph as so:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Put temporary river segments outside the border of the rectangle.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For each river segment, we insert its 4 corners into a set of nodes and its 4\\r\\nsides into a set of edges.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Notice how the resulting graph is planar, so we can apply Euler's formula.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"applying-eulers-formula\",\n      children: [_jsx(_components.a, {\n        href: \"#applying-eulers-formula\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Applying Euler's Formula\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a planar graph, Euler's formula is given as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"F = E - V + 1 + C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>F</mi><mo>=</mo><mi>E</mi><mo>−</mo><mi>V</mi><mo>+</mo><mn>1</mn><mo>+</mo><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">F = E - V + 1 + C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">F</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"F\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\\\"application/x-tex\\\">F</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">F</span></span></span></span>\"\n      }), \"\\r\\nis the number of faces (including the background face), \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\\\"application/x-tex\\\">E</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span></span></span></span>\"\n      }), \" is the number of\\r\\nedges, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\\\"application/x-tex\\\">V</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span></span></span></span>\"\n      }), \" is the number of vertices, and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \" is the number of connected\\r\\ncomponents.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Notice how \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"F\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\\\"application/x-tex\\\">F</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">F</span></span></span></span>\"\n      }), \" in our planar graph is equal to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 + R + A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>+</mo><mi>R</mi><mo>+</mo><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1 + R + A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \" is the\\r\\nnumber of river segments and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \" is the answer to the query. This means we must\\r\\nsubtract \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R + 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">R + 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"F\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\\\"application/x-tex\\\">F</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">F</span></span></span></span>\"\n      }), \" to get \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since the whole river is a big connected component, we can just check whether\\r\\nthe river touches the bounding rectangle to determine \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"C\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\\\"application/x-tex\\\">C</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Finding \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\\\"application/x-tex\\\">E</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\\\"application/x-tex\\\">V</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span></span></span></span>\"\n      }), \", and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \" is a lot more complicated though.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-e-v-and-r\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-e-v-and-r\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\\\"application/x-tex\\\">E</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\\\"application/x-tex\\\">V</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span></span></span></span>\"\n      }), \", and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To find \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\\\"application/x-tex\\\">E</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\\\"application/x-tex\\\">V</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span></span></span></span>\"\n      }), \", and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \", we can use a data structure that can handle 2D range\\r\\nqueries efficiently.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"However, the coordinates of the grid can get very large, so a simple 2D BIT or\\r\\nsegment tree won't work here.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To work around this, we can either use a 2D BIT with coordinate compression or a\\r\\npersistent segment tree. See the sections on\\r\\n\", _jsx(_components.a, {\n        href: \"/plat/2DRQ#2d-offline-sum-queries\",\n        children: \"offline 2D sum queries\"\n      }), \" or\\r\\n\", _jsx(_components.a, {\n        href: \"/adv/persistent\",\n        children: \"persistent segment trees\"\n      }), \" for more details.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With a persistent segment tree.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N \\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Memory Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N \\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include \\\"rainbow.h\\\"\\r\\n#include <bits/stdc++.h>\\r\\n#define FOR(i, x, y) for (int i = x; i < y; i++)\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAXN = 2e5, MAXSEG = (6e5 + 9) * 19 + 1;\\r\\n\\r\\nint cnt = 1, segtree[MAXSEG], left_c[MAXSEG], right_c[MAXSEG];\\r\\n\\r\\nstruct Segtree {\\r\\n\\tset<int> data[MAXN + 1];\\r\\n\\tint roots[MAXN + 2];\\r\\n\\r\\n\\tvoid add(int x, int y) { data[x].insert(y); }\\r\\n\\r\\n\\tvoid build() {\\r\\n\\t\\tFOR(i, 1, MAXN + 1) {\\r\\n\\t\\t\\troots[i + 1] = roots[i];\\r\\n\\t\\t\\tfor (int j : data[i]) update(j, roots[i + 1]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tvoid update(int pos, int &node, int l = 1, int r = MAXN) {\\r\\n\\t\\tsegtree[cnt] = segtree[node] + 1;\\r\\n\\t\\tleft_c[cnt] = left_c[node];\\r\\n\\t\\tright_c[cnt] = right_c[node];\\r\\n\\t\\tnode = cnt++;\\r\\n\\r\\n\\t\\tif (l == r) return;\\r\\n\\t\\tint mid = (l + r) / 2;\\r\\n\\t\\tif (pos > mid) update(pos, right_c[node], mid + 1, r);\\r\\n\\t\\telse update(pos, left_c[node], l, mid);\\r\\n\\t}\\r\\n\\r\\n\\tint query(int l1, int r1, int l2, int r2) {\\r\\n\\t\\tif (l2 > r2) return 0;\\r\\n\\t\\treturn query(l2, r2, roots[r1 + 1], 1, MAXN) - query(l2, r2, roots[l1], 1, MAXN);\\r\\n\\t}\\r\\n\\tint query(int a, int b, int node, int l, int r) {\\r\\n\\t\\tif (a > r || b < l) return 0;\\r\\n\\t\\tif (a <= l && b >= r) return segtree[node];\\r\\n\\t\\tint mid = (l + r) / 2;\\r\\n\\t\\treturn query(a, b, left_c[node], l, mid) + query(a, b, right_c[node], mid + 1, r);\\r\\n\\t}\\r\\n} vertices, edges_horiz, edges_vert, rivers;\\r\\n\\r\\nint mx_r, mn_r, mx_c, mn_c;\\r\\n\\r\\nvoid add_river(int x, int y) {\\r\\n\\tvertices.add(x, y);\\r\\n\\tvertices.add(x + 1, y);\\r\\n\\tvertices.add(x, y + 1);\\r\\n\\tvertices.add(x + 1, y + 1);\\r\\n\\tedges_horiz.add(x, y);\\r\\n\\tedges_horiz.add(x + 1, y);\\r\\n\\tedges_vert.add(x, y);\\r\\n\\tedges_vert.add(x, y + 1);\\r\\n\\trivers.add(x, y);\\r\\n}\\r\\n\\r\\nvoid init(int R, int C, int sr, int sc, int M, char *S) {\\r\\n\\tadd_river(sr, sc);\\r\\n\\tmx_r = mn_r = sr;\\r\\n\\tmx_c = mn_c = sc;\\r\\n\\tFOR(i, 0, M) {\\r\\n\\t\\tif (S[i] == 'N') sr--;\\r\\n\\t\\tif (S[i] == 'E') sc++;\\r\\n\\t\\tif (S[i] == 'S') sr++;\\r\\n\\t\\tif (S[i] == 'W') sc--;\\r\\n\\t\\tadd_river(sr, sc);\\r\\n\\t\\tmx_r = max(mx_r, sr);\\r\\n\\t\\tmn_r = min(mn_r, sr);\\r\\n\\t\\tmx_c = max(mx_c, sc);\\r\\n\\t\\tmn_c = min(mn_c, sc);\\r\\n\\t}\\r\\n\\tvertices.build();\\r\\n\\tedges_horiz.build();\\r\\n\\tedges_vert.build();\\r\\n\\trivers.build();\\r\\n}\\r\\n\\r\\nint colour(int ar, int ac, int br, int bc) {\\r\\n\\tint E = edges_horiz.query(ar + 1, br, ac, bc) + edges_vert.query(ar, br, ac + 1, bc);\\r\\n\\tint V = vertices.query(ar + 1, br, ac + 1, bc);\\r\\n\\tint R = rivers.query(ar, br, ac, bc);\\r\\n\\tint C = (ar >= mn_r || br <= mx_r || ac >= mn_c || bc <= mx_c ? 1 : 2);\\r\\n\\treturn E - V + C - R;\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"apio-17-rainbow","source":"APIO 2017","title":"Land of the Rainbow Gold","author":"Andi Qu"},"parent":{"name":"apio-17-rainbow","relativePath":"apio-17-rainbow.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"TL;DR","slug":"tldr"},{"depth":3,"value":"Intuition","slug":"intuition"},{"depth":3,"value":"Making the Planar Graph","slug":"making-the-planar-graph"},{"depth":3,"value":"Applying Euler&#39;s Formula","slug":"applying-eulers-formula"},{"depth":3,"value":"Finding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>","slug":"finding-e-v-and-r"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"TL;DR","slug":"tldr"},{"depth":3,"value":"Intuition","slug":"intuition"},{"depth":3,"value":"Making the Planar Graph","slug":"making-the-planar-graph"},{"depth":3,"value":"Applying Euler&#39;s Formula","slug":"applying-eulers-formula"},{"depth":3,"value":"Finding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>","slug":"finding-e-v-and-r"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"TL;DR","slug":"tldr"},{"depth":3,"value":"Intuition","slug":"intuition"},{"depth":3,"value":"Making the Planar Graph","slug":"making-the-planar-graph"},{"depth":3,"value":"Applying Euler&#39;s Formula","slug":"applying-eulers-formula"},{"depth":3,"value":"Finding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>","slug":"finding-e-v-and-r"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"eulers-formula","title":"Euler's Formula"}}}},{"node":{"module":{"frontmatter":{"id":"persistent","title":"Persistent Data Structures"}}}}]},"problemInfo":{"uniqueId":"apio-17-rainbow","url":"https://dmoj.ca/problem/apio17p1"}},"pageContext":{"id":"apio-17-rainbow"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}