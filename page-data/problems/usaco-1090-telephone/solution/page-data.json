{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-1090-telephone/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-1090\", source = \"USACO Gold 2021 January\", title = \"Telephone\", author = \"Maggie Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_prob2_gold_jan21.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NK)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NK)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <deque>\\r\\n#include <vector>\\r\\nusing namespace std;\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tint n, k;\\r\\n\\tcin >> n >> k;\\r\\n\\tbool adj[51][51];\\r\\n\\tint cows[50001];\\r\\n\\tfor (int i = 1; i <= n; i++)\\r\\n\\t{\\r\\n\\t\\tcin >> cows[i];\\r\\n\\t}\\r\\n\\tchar c;\\r\\n\\tfor (int i = 1; i <= k; i++)\\r\\n\\t{\\r\\n\\t\\tfor (int j = 1; j <= k; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tcin >> c;\\r\\n\\t\\t\\tadj[i][j] = (c == '1');\\r\\n\\t\\t}\\r\\n\\t\\t//remember the cows that can transmit to cow N\\r\\n\\t\\tadj[i][0] = adj[i][cows[n]];\\r\\n\\t}\\r\\n\\t//set cow N to a fake breed 0\\r\\n\\tcows[n] = 0;\\r\\n\\tvector<int> dist[51];\\r\\n\\tfor (int i = 0; i <= k; i++)\\r\\n\\t{\\r\\n\\t\\tdist[i].resize(n + 1);\\r\\n\\t\\tfor (int j = 0; j <= n; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdist[i][j] = -1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tdeque<pair<int, int>> q; //sender's breed, location\\r\\n\\tq.push_back({cows[1], 1});\\r\\n\\tdist[cows[1]][1] = 0;\\r\\n\\twhile (!q.empty())\\r\\n\\t{\\r\\n\\t\\tint breed = q.front().first, loc = q.front().second;\\r\\n\\t\\tq.pop_front();\\r\\n\\t\\t//move left one cow\\r\\n\\t\\tif (loc - 1 >= 1 && dist[breed][loc - 1] == -1)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdist[breed][loc - 1] = dist[breed][loc] + 1;\\r\\n\\t\\t\\tq.push_back({breed, loc - 1});\\r\\n\\t\\t}\\r\\n\\t\\t//move right one cow\\r\\n\\t\\tif (loc + 1 <= n && dist[breed][loc + 1] == -1)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdist[breed][loc + 1] = dist[breed][loc] + 1;\\r\\n\\t\\t\\tq.push_back({breed, loc + 1});\\r\\n\\t\\t}\\r\\n\\t\\t//transmit to the cow at the current location\\r\\n\\t\\tif (adj[breed][cows[loc]] && dist[cows[loc]][loc] == -1)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdist[cows[loc]][loc] = dist[breed][loc];\\r\\n\\t\\t\\tq.push_front({cows[loc], loc});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << dist[0][n] << endl;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-1090","source":"USACO Gold 2021 January","title":"Telephone","author":"Maggie Liu"},"parent":{"name":"usaco-1090","relativePath":"usaco-1090.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"bfs","title":"Breadth First Search (BFS)"}}}}]},"problemInfo":{"uniqueId":"usaco-1090","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1090"}},"pageContext":{"id":"usaco-1090"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}