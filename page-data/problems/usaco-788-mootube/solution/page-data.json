{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-788-mootube/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-788\", source = \"USACO Silver 2018 January\", title = \"Mootube\", author = \"Óscar Garries (C++), Qi Wang (Java)\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {LanguageSection, CPPSection, HeaderLink, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_mootube_silver_jan18.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconst int INF = 1e9;\\r\\n\\r\\nvector<pair<int, int>> g[5001];\\r\\nvector<bool> visited(5001);\\r\\nint k, v, sol;\\r\\n\\r\\nvoid dfs (int v) {\\r\\n\\tvisited[v] = true;\\r\\n\\tfor (auto x: g[v]) {\\r\\n\\t\\tif (visited[x.first]) continue;\\r\\n\\t\\tif (x.second >= k) {\\r\\n\\t\\t\\tsol++;\\r\\n\\t\\t\\tdfs(x.first);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main () {\\r\\n\\tfreopen(\\\"mootube.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"mootube.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint n, q;\\r\\n\\tcin >> n >> q;\\r\\n\\r\\n\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\tint a, b, r;\\r\\n\\t\\tcin >> a >> b >> r;\\r\\n\\t\\tg[a].push_back({b, r});\\r\\n\\t\\tg[b].push_back({a, r});\\r\\n\\t}\\r\\n\\r\\n\\twhile (q--) {\\r\\n\\t\\tcin >> k >> v;\\r\\n\\t\\tsol = 0;\\r\\n\\t\\tvector<bool> vS(n + 1);\\r\\n\\t\\tvisited = vS;\\r\\n\\r\\n\\t\\tdfs(v);\\r\\n\\r\\n\\t\\tcout << sol << '\\\\n';\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"\\r\\nimport java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class mootube {\\r\\n\\tstatic int N, Q, K, S;\\r\\n\\tstatic boolean[] vist;\\r\\n\\tstatic List<Edge> adj[];\\r\\n\\t@SuppressWarnings(\\\"unchecked\\\")\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"mootube\\\");\\r\\n\\t\\tN = io.nextInt()+1;\\r\\n\\t\\tQ = io.nextInt();\\r\\n\\t\\tadj = new List[N];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tadj[i] = new ArrayList<>();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 0; i < N - 2; i++) {\\r\\n\\t\\t\\tint a,b,c;\\r\\n\\t\\t\\ta = io.nextInt();\\r\\n\\t\\t\\tb = io.nextInt();\\r\\n\\t\\t\\tc = io.nextInt();\\r\\n\\t\\t\\tadj[a].add(new Edge(b, c));\\r\\n\\t\\t\\tadj[b].add(new Edge(a, c));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 0; i < Q; i++) {\\r\\n\\t\\t\\tvist = new boolean[N];\\r\\n\\t\\t\\tS = 0;\\r\\n\\t\\t\\tK = io.nextInt();\\r\\n\\t\\t\\tint a = io.nextInt();\\r\\n\\r\\n\\t\\t\\tdfs(a);\\r\\n\\r\\n\\t\\t\\tio.println(S-1);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tpublic static void dfs(int x){\\r\\n\\t\\tvist[x] = true;\\r\\n\\t\\tS++;\\r\\n\\t\\tfor(Edge e : adj[x]) {\\r\\n\\t\\t\\tif(!vist[e.t] && e.w >= K) {\\r\\n\\t\\t\\t\\tdfs(e.t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprivate static class Edge {\\r\\n\\t\\tint t, w;\\r\\n\\t\\tpublic Edge(int a, int b){\\r\\n\\t\\t\\tt = a; w = b;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprivate static class Kattio extends PrintWriter {\\r\\n\\t\\tprivate BufferedReader r;\\r\\n\\t\\tprivate StringTokenizer st;\\r\\n\\r\\n\\t\\t// standard input\\r\\n\\t\\tpublic Kattio() { this(System.in,System.out); }\\r\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\r\\n\\t\\t\\tsuper(o);\\r\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\r\\n\\t\\t}\\r\\n\\t\\t// USACO-style file input\\r\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\r\\n\\t\\t\\tsuper(new FileWriter(problemName+\\\".out\\\"));\\r\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName+\\\".in\\\"));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// returns null if no more input\\r\\n\\t\\tpublic String next() {\\r\\n\\t\\t\\ttry {\\r\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\r\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\r\\n\\t\\t\\t\\treturn st.nextToken();\\r\\n\\t\\t\\t} catch (Exception e) {}\\r\\n\\t\\t\\treturn null;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\r\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\r\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-788","source":"USACO Silver 2018 January","title":"Mootube","author":"Óscar Garries (C++), Qi Wang (Java)"},"parent":{"name":"usaco-788","relativePath":"usaco-788.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Java Implementation","slug":"java-implementation"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-tree","title":"Introduction to Tree Algorithms"}}}}]},"problemInfo":{"uniqueId":"usaco-788","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=788"}},"pageContext":{"id":"usaco-788"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}