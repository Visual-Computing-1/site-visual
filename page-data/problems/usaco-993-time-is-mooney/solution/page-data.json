{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-993-time-is-mooney/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-993\", source = \"USACO Gold 2020 January\", title = \"Time is Mooney\", author = \"Nathan Gong, Ryan Chou\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_time_gold_jan20.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (C++)\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We only need to keep track of the number of days that Bessie has been traveling and the amount of mooney that she has made. For every day up to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"T_{\\\\text{max}}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>T</mi><mtext>max</mtext></msub></mrow><annotation encoding=\\\"application/x-tex\\\">T_{\\\\text{max}}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord text mtight\\\"><span class=\\\"mord mtight\\\">max</span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", we'll try to travel to each city, and update the mooney made if the current path is more optimal. The maximum amount of money she makes is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1000t - t^2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1000</mn><mi>t</mi><mo>−</mo><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">1000t - t^2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1000</span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", in the case where she makes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1000\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1000</span></span></span></span>\"\n      }), \" mooney per city and the cost is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \". Her earnings become negative when \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t > 1000\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi><mo>&gt;</mo><mn>1000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">t &gt; 1000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6542em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1000</span></span></span></span>\"\n      }), \", so we only have to check her movement across the cities for at most \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1000\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1000</span></span></span></span>\"\n      }), \" days.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(T_{\\\\text{max}} \\\\cdot (N + M))\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msub><mi>T</mi><mtext>max</mtext></msub><mo>⋅</mo><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>M</mi><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(T_{\\\\text{max}} \\\\cdot (N + M))</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1514em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord text mtight\\\"><span class=\\\"mord mtight\\\">max</span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mclose\\\">))</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAX_DAYS = 1000;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"time.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"time.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint n, m, c;\\r\\n\\tcin >> n >> m >> c;\\r\\n\\r\\n\\tvector<int> earn(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> earn[i];\\r\\n\\t}\\r\\n\\r\\n\\tvector<vector<int>> adj(n);\\r\\n\\tfor (int i = 0; i < m; i++) {\\r\\n\\t\\tint u, v;\\r\\n\\t\\tcin >> u >> v;\\r\\n\\t\\tadj[--u].push_back(--v);\\r\\n\\t}\\r\\n\\r\\n\\t// dp[i][j] = the max money that Bessie can make on day i if she ends in city j\\r\\n\\tvector<vector<int>> dp(MAX_DAYS + 1, vector<int>(n, -1));\\r\\n\\t// base case: if Bessie doesn't travel at all, she makes $0\\r\\n\\tdp[0][0] = 0;\\r\\n\\t\\r\\n\\tint ans = 0;\\r\\n\\tfor (int d = 0; d < MAX_DAYS; d++) {\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\t// if dp[d][i] == -1 then the city can't be visited\\r\\n\\t\\t\\tif (dp[d][i] != -1) {\\r\\n\\t\\t\\t\\tfor (int u : adj[i]) {\\r\\n\\t\\t\\t\\t\\t/*\\r\\n\\t\\t\\t\\t\\t * dp[d + 1][u] = max(current money earned, \\r\\n\\t\\t\\t\\t\\t * previous city's earnings + current city's earnings)\\r\\n\\t\\t\\t\\t\\t */\\r\\n\\t\\t\\t\\t\\tdp[d + 1][u] = max(dp[d + 1][u], dp[d][i] + earn[u]);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tans = max(ans, (dp[d][0] - (c * d * d)));\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class TimeIsMooney {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"time\\\");\\r\\n\\r\\n\\t\\t// max time that we check (it can be any arbitrary large number as long \\r\\n\\t\\t// as it is sufficient for O(T_MAX * (N + M)) time)\\r\\n\\t\\tfinal int T_MAX = 1001;\\r\\n\\t\\tint n = io.nextInt();\\r\\n\\t\\tint m = io.nextInt();\\r\\n\\t\\tint c = io.nextInt();\\r\\n\\r\\n\\t\\t// amount of moonies Bessie can make at each city\\r\\n\\t\\tint[] values = new int[n];\\r\\n\\t\\tfor (int i = 0; i < values.length; i++) {\\r\\n\\t\\t\\tvalues[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tList<List<Integer>> adj = new ArrayList<>();\\r\\n\\t\\tfor (int i = 0; i < n; i++) adj.add(new ArrayList<>());\\r\\n\\t\\tfor (int i = 0; i < m; i++) {\\r\\n\\t\\t\\tint n1 = io.nextInt() - 1;\\r\\n\\t\\t\\tint n2 = io.nextInt() - 1;\\r\\n\\t\\t\\tadj.get(n1).add(n2);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// dp[t][i] = max amount of moonies Bessie can make after t days, \\r\\n\\t\\t// ending at city i\\r\\n\\t\\tlong[][] dp = new long[T_MAX][n];\\r\\n\\t\\tfor (int i = 0; i < T_MAX; i++) {\\r\\n\\t\\t\\tArrays.fill(dp[i], -1);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlong best = 0;\\r\\n\\t\\tdp[0][0] = 0;\\r\\n\\t\\tfor (int t = 0; t < T_MAX - 1; t++) {  // populate dp array up to T_MAX\\r\\n\\t\\t\\tfor (int i = 0; i < n; i++) {  // check each city at each time step\\r\\n\\t\\t\\t\\t// skip city if it can't be reached at time t\\r\\n\\t\\t\\t\\tif (dp[t][i] != -1) {\\r\\n\\t\\t\\t\\t\\t// visit all cities adjacent to i, update dp array\\r\\n\\t\\t\\t\\t\\tfor (int neighbor : adj.get(i)) {\\r\\n\\t\\t\\t\\t\\t\\tdp[t + 1][neighbor] = Math.max(\\r\\n\\t\\t\\t\\t\\t\\t\\tdp[t + 1][neighbor], \\r\\n\\t\\t\\t\\t\\t\\t\\tdp[t][i] + values[neighbor]\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// update the max profit Bessie can make after t days, ending\\r\\n\\t\\t\\t// at city 0\\r\\n\\t\\t\\tbest = Math.max(best, dp[t][0] - t * t * c);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(best);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\t\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-993","source":"USACO Gold 2020 January","title":"Time is Mooney","author":"Nathan Gong, Ryan Chou"},"parent":{"name":"usaco-993","relativePath":"usaco-993.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-dp","title":"Introduction to DP"}}}}]},"problemInfo":{"uniqueId":"usaco-993","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=993"}},"pageContext":{"id":"usaco-993"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}