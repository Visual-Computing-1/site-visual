{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-573-high-card-low-card/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-573\", source = \"USACO Gold 2015 December\", title = \"High Card Low Card (Gold)\", author = \"Qi Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {MATHSPAN, LanguageSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log{N})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log{N})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_cardgame_gold_dec15.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"\\r\\nimport java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class highcardgold {\\r\\n\\tstatic boolean[] C;\\r\\n\\tstatic List<Integer> B = new ArrayList<>();\\r\\n\\tstatic List<Integer> F = new ArrayList<>();\\r\\n\\tstatic List<Integer> S = new ArrayList<>();\\r\\n\\tstatic int N;\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"cardgame\\\");\\r\\n\\t\\tN = io.nextInt();\\r\\n\\r\\n\\t\\tC = new boolean[2*N+1];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tint c = io.nextInt();\\r\\n\\t\\t\\tC[c] = true;\\r\\n\\t\\t\\tif(i < N/2)\\r\\n\\t\\t\\t\\tF.add(c); //First Half\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\tS.add(c); //Second Half\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 1; i < 2 * N + 1; i++) {\\r\\n\\t\\t\\tif(!C[i]) B.add(i); //Bessie's cards\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Sort cards (B is already sorted)\\r\\n\\t\\tCollections.sort(F);\\r\\n\\t\\tCollections.sort(S);\\r\\n\\r\\n\\t\\tint ix = B.size()-1;\\r\\n\\t\\tint score = 0;\\r\\n\\t\\tfor (int i = F.size()-1; i >= 0; i--) {\\r\\n\\t\\t\\tif(F.get(i) < B.get(ix)){\\r\\n\\t\\t\\t\\tscore++;\\r\\n\\t\\t\\t\\tix--;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tix = 0;\\r\\n\\t\\tfor (int i = 0; i < S.size(); i++) {\\r\\n\\t\\t\\tif(B.get(ix) < S.get(i)){\\r\\n\\t\\t\\t\\tix++;\\r\\n\\t\\t\\t\\tscore++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(score);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tprivate static class Kattio extends PrintWriter {\\r\\n\\t\\tprivate BufferedReader r;\\r\\n\\t\\tprivate StringTokenizer st;\\r\\n\\r\\n\\t\\t// standard input\\r\\n\\t\\tpublic Kattio() { this(System.in,System.out); }\\r\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\r\\n\\t\\t\\tsuper(o);\\r\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\r\\n\\t\\t}\\r\\n\\t\\t// USACO-style file input\\r\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\r\\n\\t\\t\\tsuper(new FileWriter(problemName+\\\".out\\\"));\\r\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName+\\\".in\\\"));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// returns null if no more input\\r\\n\\t\\tpublic String next() {\\r\\n\\t\\t\\ttry {\\r\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\r\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\r\\n\\t\\t\\t\\treturn st.nextToken();\\r\\n\\t\\t\\t} catch (Exception e) {}\\r\\n\\t\\t\\treturn null;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\r\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\r\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-573","source":"USACO Gold 2015 December","title":"High Card Low Card (Gold)","author":"Qi Wang"},"parent":{"name":"usaco-573","relativePath":"usaco-573.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"greedy-sorting","title":"Greedy Algorithms with Sorting"}}}}]},"problemInfo":{"uniqueId":"usaco-573","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=573"}},"pageContext":{"id":"usaco-573"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}