{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-835-lemonade-line/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-835\", source = \"USACO Silver 2018 Open\", title = \"Lemonade Line\", author = \"Mrinall Umasudhan, Ryan Chou\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_lemonade_silver_open18.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (C++)\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The greedy strategy is to have cows with a smaller waiting time to be at the back of the line.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"lemonade.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"lemonade.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\r\\n\\tvector<int> cows(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> cows[i];\\r\\n\\t}\\r\\n\\t\\r\\n\\tint ans = 0;\\r\\n\\tsort(cows.begin(), cows.end(), greater<int>());\\r\\n\\t\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tif (i <= cows[i]) {\\r\\n\\t\\t\\tans++;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\nclass cows {\\r\\n\\tint vals;\\r\\n\\tpublic cows(int vals)\\r\\n\\t{\\r\\n\\t\\tthis.vals = vals;\\r\\n\\t}\\r\\n\\tpublic int getVals(){\\r\\n\\t\\treturn this.vals;\\r\\n\\t}\\r\\n}\\r\\nclass Sort implements Comparator<cows> {            // Comparator for a specialized in O(log N) for simple time limits.\\r\\n\\tpublic int compare(cows a, cows b) {\\r\\n\\t\\treturn Integer.compare(b.vals, a.vals);\\r\\n\\t}\\r\\n}\\r\\npublic class lemonade{\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tScanner sc = new Scanner(new File(\\\"lemonade.in\\\"));\\r\\n\\t\\tPrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\\\"lemonade.out\\\")));\\r\\n\\t\\tint N = sc.nextInt();  ArrayList<cows> arr = new ArrayList<>(); int ans = 0;\\r\\n\\t\\tfor(int i = 0 ; i < N; i++){\\r\\n\\t\\t\\tarr.add(new cows(sc.nextInt()));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\twhile (true){\\r\\n\\t\\t\\tarr.sort(new Sort());\\r\\n\\t\\t\\tint toRemove = arr.get(0).getVals();\\r\\n\\t\\t\\tif(toRemove >= ans){\\r\\n\\t\\t\\t\\tarr.remove(0);\\r\\n\\t\\t\\t\\tans++;\\r\\n\\t\\t\\t}else{\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tout.println(ans);\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"import sys\\r\\n\\r\\nsys.stdin = open(\\\"lemonade.in\\\", \\\"r\\\")\\r\\nsys.stdout = open(\\\"lemonade.out\\\", \\\"w\\\")\\r\\n\\r\\nn = int(input())\\r\\ncows = list(map(int, input().split()))\\r\\ncows.sort(reverse=True)\\r\\nans = 0\\r\\n\\r\\nfor i in range(n):\\r\\n\\tif (i <= cows[i]):\\r\\n\\t\\tans += 1\\r\\n\\telse:\\r\\n\\t\\tbreak\\r\\n\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-835","source":"USACO Silver 2018 Open","title":"Lemonade Line","author":"Mrinall Umasudhan, Ryan Chou"},"parent":{"name":"usaco-835","relativePath":"usaco-835.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"greedy-sorting","title":"Greedy Algorithms with Sorting"}}}}]},"problemInfo":{"uniqueId":"usaco-835","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=835"}},"pageContext":{"id":"usaco-835"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}