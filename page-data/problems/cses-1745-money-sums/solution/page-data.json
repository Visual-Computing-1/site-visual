{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1745-money-sums/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1745\", source = \"CSES\", title = \"Money Sums\", author = \"Sofia Yang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\")\n  }, _props.components), {LanguageSection, JavaSection, HeaderLink, MATHSPAN, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/70018\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Editorial\"\n      })\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"solution\",\n          children: [_jsx(_components.a, {\n            href: \"#solution\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Solution\"]\n        }), _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Time Complexity:\"\n          }), \" \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(N\\\\cdot X)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>⋅</mo><mi>X</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\cdot X)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          })]\n        }), _jsxs(_components.h2, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class MoneySums {\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n\\r\\n\\tpublic static int maxSum = (int) 1e5;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\r\\n\\t\\tint N = io.nextInt();\\r\\n\\r\\n\\t\\tint[] value = new int[N + 1];\\r\\n\\t\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\t\\tvalue[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// DP[i][j] is true, if it is possible to make a sum of j with i coins.\\r\\n\\t\\tboolean[][] dp = new boolean[N + 1][maxSum + 1];\\r\\n\\r\\n\\t\\tdp[0][0] = true;\\r\\n\\r\\n\\t\\t/**\\r\\n\\t\\t * Loop through all coins and all possible sums.\\r\\n\\t\\t * 1. If it is possible to make the sum with less than i coins,\\r\\n\\t\\t * Then DP[i][sum] will be true.\\r\\n\\t\\t * 2. If it is possible to make a sum of (curSum - value[i])\\r\\n\\t\\t * DP[curSum] will also be true.\\r\\n\\t\\t */\\r\\n\\t\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\t\\tfor (int curSum = 0; curSum <= maxSum; curSum++) {\\r\\n\\t\\t\\t\\tdp[i][curSum] = dp[i - 1][curSum];\\r\\n\\t\\t\\t\\tint prevSum = curSum - value[i];\\r\\n\\t\\t\\t\\tif (prevSum >= 0 && dp[i - 1][prevSum]) {\\r\\n\\t\\t\\t\\t\\tdp[i][curSum] = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Check the number of possible sums.\\r\\n\\t\\tArrayList<Integer> possible = new ArrayList<>();\\r\\n\\t\\tfor (int sum = 1; sum <= maxSum; sum++) {\\r\\n\\t\\t\\tif (dp[N][sum]) {\\r\\n\\t\\t\\t\\tpossible.add(sum);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tio.println(possible.size());\\r\\n\\t\\tfor (int i : possible) {\\r\\n\\t\\t\\tio.print(i + \\\" \\\");\\r\\n\\t\\t}\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1745","source":"CSES","title":"Money Sums","author":"Sofia Yang"},"parent":{"name":"cses-1745","relativePath":"cses-1745.mdx"},"toc":{"cpp":[],"java":[{"depth":2,"value":"Solution","slug":"solution"},{"depth":2,"value":"Java Implementation","slug":"java-implementation"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"knapsack","title":"Knapsack DP"}}}}]},"problemInfo":{"uniqueId":"cses-1745","url":"https://cses.fi/problemset/task/1745"}},"pageContext":{"id":"cses-1745"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}