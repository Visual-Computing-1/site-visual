{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-671-lasers-and-mirrors/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-671\", source = \"USACO Gold 2016 December\", title = \"Lasers and Mirrors\", author = \"Maggie Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_lasers_gold_dec16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is optimal to use each fence post at most once, so we can use BFS to find the\\r\\nminimum number of fence posts needed to direct the laser to the barn. We store\\r\\nthe points on each horizontal and vertical line in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{lines}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">lines</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{lines}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">lines</span></span></span></span></span>\"\n      }), \". In the\\r\\nqueue \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"q\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\\\"application/x-tex\\\">q</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">q</span></span></span></span>\"\n      }), \", we store the index of the point and the direction of the incoming\\r\\nbeam. The array \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dist}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dist</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dist}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6111em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dist</span></span></span></span></span>\"\n      }), \" will store the number of edges of the shortest\\r\\npath from the laser to each point.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For every element in the queue, we process each unvisited point that the beam\\r\\ncan be deflected to by adding it into the queue and updating its distance as one\\r\\nmore than the current distance.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If we are able to deflect the beam to the barn, the number of mirrors needed is\\r\\none less than the distance.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\n#include <queue>\\r\\n#include <vector>\\r\\n#include <unordered_map>\\r\\nusing namespace std;\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tfreopen(\\\"lasers.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"lasers.out\\\", \\\"w\\\", stdout);\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\tvector<pair<int, int>> points(n + 2);\\r\\n\\t//lines[0] are vertical, lines[1] are horizontal\\r\\n\\tunordered_map<int, vector<int>> lines[2];\\r\\n\\tfor (int i = 0; i < n + 2; i++)\\r\\n\\t{\\r\\n\\t\\tcin >> points[i].first >> points[i].second;\\r\\n\\t\\tlines[0][points[i].first].push_back(i);\\r\\n\\t\\tlines[1][points[i].second].push_back(i);\\r\\n\\t}\\r\\n\\t//index of fence post and bool for direction of incoming beam\\r\\n\\t//true for horizontal, false for vertical\\r\\n\\tqueue<pair<int, bool>> q;\\r\\n\\tq.push({0, true});\\r\\n\\tq.push({0, false});\\r\\n\\t//dist[i] is number of edges to reach point i from the laser\\r\\n\\tvector<int> dist(n + 2, 1e9);\\r\\n\\tdist[0] = 0;\\r\\n\\t// BFS to find minimum number of fence posts to direct laser to barn\\r\\n\\twhile (!q.empty())\\r\\n\\t{\\r\\n\\t\\tint curr = q.front().first;\\r\\n\\t\\tbool beamdir = q.front().second;\\r\\n\\t\\tq.pop();\\r\\n\\t\\tint dir = (beamdir ? 0 : 1);\\r\\n\\t\\tint coord = (beamdir ? points[curr].first : points[curr].second);\\r\\n\\t\\tfor (int point : lines[dir][coord])\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (dist[point] == 1e9)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tq.push({point, !beamdir});\\r\\n\\t\\t\\t\\tdist[point] = dist[curr] + 1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << (dist[1] == 1e9 ? -1 : dist[1] - 1) << endl;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-671","source":"USACO Gold 2016 December","title":"Lasers and Mirrors","author":"Maggie Liu"},"parent":{"name":"usaco-671","relativePath":"usaco-671.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"bfs","title":"Breadth First Search (BFS)"}}}}]},"problemInfo":{"uniqueId":"usaco-671","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=671"}},"pageContext":{"id":"usaco-671"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}