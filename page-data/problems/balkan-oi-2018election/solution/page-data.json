{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/balkan-oi-2018election/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"balkan-18-election\", source = \"Balkan OI 2018\", title = \"Election\", author = \"Andi Qu, Benjamin Qi\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\")\n  }, _props.components), {HeaderLink, IncompleteSection, MATHSPAN, MATHDIV, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"method-1-offline\",\n      children: [_jsx(_components.a, {\n        href: \"#method-1-offline\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 1 (Offline)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider the greedy strategy: iterate from left to right and change \", _jsx(_components.code, {\n        children: \"T\"\n      }), \"s to\\r\\nsatisfy the increasing condition, then do the same from right to left.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can solve this problem offline by simulating this process.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://oj.uz/submission/61836\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://oj.uz/submission/61836\"\n      })\n    }), \"\\n\", _jsx(IncompleteSection, {}), \"\\n\", _jsxs(_components.h1, {\n      id: \"method-2-online\",\n      children: [_jsx(_components.a, {\n        href: \"#method-2-online\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 2 (Online)\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"a-simpler-case\",\n      children: [_jsx(_components.a, {\n        href: \"#a-simpler-case\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"A simpler case\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Consider the case where we only care about counting votes from left to right.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let a \", _jsx(_components.code, {\n        children: \"C\"\n      }), \" vote count as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"-1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">-1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">−</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" and a \", _jsx(_components.code, {\n        children: \"T\"\n      }), \" vote count as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">+</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" in an array \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\\\"application/x-tex\\\">V</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The answer to a query on the range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[l, r]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" is simply the maximum prefix sum in\\r\\nthat range. (i.e. The largest \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"V_l + V_{l + 1} + \\\\dots + V_k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>V</mi><mi>l</mi></msub><mo>+</mo><msub><mi>V</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>V</mi><mi>k</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">V_l + V_{l + 1} + \\\\dots + V_k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8917em;vertical-align:-0.2083em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2083em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">V</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3361em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \")\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If we count votes from right to left though, the answer is the maximum suffix\\r\\nsum instead.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can use a segment tree to answer both of these types of queries efficiently.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"combining-values\",\n      children: [_jsx(_components.a, {\n        href: \"#combining-values\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Combining values\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It would be really convenient if we could just calculate the maximum prefix and\\r\\nsuffix sums and add them. However, we would count some nullified votes twice if\\r\\nwe do this.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In each node of the segment tree that stores information about the range\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[l, r]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" we store the following information:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The maximum prefix sum in the range \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[l, r]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \". (Let this be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"L\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\\\"application/x-tex\\\">L</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">L</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The maximum suffix sum in the range \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[l, r]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \". (Let this be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"R\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The total sum of the range. (Let this be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"S\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The answer to a query on the range \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"[l, r]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \". (Let this be \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"A\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When we combine two nodes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \" (left child) and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" (right child) to make node\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span></span></span></span>\"\n      }), \",\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"w.L = \\\\max(u.L, u.S + v.L)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>L</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>L</mi><mo separator=\\\"true\\\">,</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>L</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">w.L = \\\\max(u.L, u.S + v.L)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"w.R = \\\\max(u.R + v.S, v.R)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>R</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>R</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo separator=\\\"true\\\">,</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>R</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">w.R = \\\\max(u.R + v.S, v.R)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"w.S = u.S + v.S\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo>=</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w.S = u.S + v.S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Finding \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w.A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w.A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \" is a bit more tricky though. We will show that it is equal to\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"w.A=\\\\max(\\\\max(u.A + v.S, u.S + v.A), u.L + v.R)\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>A</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>A</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo separator=\\\"true\\\">,</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>A</mi><mo stretchy=\\\"false\\\">)</mo><mo separator=\\\"true\\\">,</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>L</mi><mo>+</mo><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>R</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">w.A=\\\\max(\\\\max(u.A + v.S, u.S + v.A), u.L + v.R)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">)</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mclose\\\">)</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a range of length \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"L\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\\\"application/x-tex\\\">L</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">L</span></span></span></span>\"\n      }), \", this calculates\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max_i\\\\left(\\\\max(\\\\text{first }i\\\\text{ prefix sums})+\\\\max(\\\\text{last }L-i\\\\text{ suffix sums})\\\\right)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>i</mi></msub><mrow><mo fence=\\\"true\\\">(</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mtext>first </mtext><mi>i</mi><mtext> prefix sums</mtext><mo stretchy=\\\"false\\\">)</mo><mo>+</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mtext>last </mtext><mi>L</mi><mo>−</mo><mi>i</mi><mtext> suffix sums</mtext><mo stretchy=\\\"false\\\">)</mo><mo fence=\\\"true\\\">)</mo></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max_i\\\\left(\\\\max(\\\\text{first }i\\\\text{ prefix sums})+\\\\max(\\\\text{last }L-i\\\\text{ suffix sums})\\\\right)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop\\\">max</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\"><span class=\\\"mopen delimcenter\\\" style=\\\"top:0em;\\\">(</span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">first </span></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\"> prefix sums</span></span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">last </span></span><span class=\\\"mord mathnormal\\\">L</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\"> suffix sums</span></span><span class=\\\"mclose\\\">)</span><span class=\\\"mclose delimcenter\\\" style=\\\"top:0em;\\\">)</span></span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Claim 1:\"\n      }), \" This is a lower bound on the answer.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can say that the increasing condition must hold for the first \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" votes and\\r\\nthe decreasing condition must hold for the rest of the votes in the range.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Claim 2:\"\n      }), \" This lower bound can be attained.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider the greedy strategy mentioned in method 1. Then equality holds when we\\r\\nset \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" equal to one less than the position of the leftmost \", _jsx(_components.code, {\n        children: \"T\"\n      }), \" removed when\\r\\ndoing the right to left iteration.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Therefore, this is a lower bound and it can be attained.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The final complexity of this algorithm is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}((N + Q) \\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>Q</mi><mo stretchy=\\\"false\\\">)</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}((N + Q) \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">((</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">Q</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n#define FOR(i, x, y) for (int i = x; i < y; i++)\\r\\ntypedef long long ll;\\r\\nusing namespace std;\\r\\n\\r\\nstruct Node {\\r\\n\\tint l_max, r_max, tot, ans;\\r\\n\\r\\n\\tNode operator+(Node b) {\\r\\n\\t\\tNode ret;\\r\\n\\t\\tret.l_max = max(l_max, b.l_max + tot);\\r\\n\\t\\tret.r_max = max(r_max + b.tot, b.r_max);\\r\\n\\t\\tret.tot = tot + b.tot;\\r\\n\\t\\tret.ans = max(max(ans + b.tot, b.ans + tot), l_max + b.r_max);\\r\\n\\t\\treturn ret;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nNode segtree[2000001];\\r\\nchar s[500001];\\r\\nint n;\\r\\n\\r\\nvoid build(int node = 1, int l = 1, int r = n) {\\r\\n\\tif (l == r) {\\r\\n\\t\\tif (s[l] == 'T') segtree[node] = {1, 1, 1, 1};\\r\\n\\t\\telse segtree[node] = {0, 0, -1, 0};\\r\\n\\t} else {\\r\\n\\t\\tint mid = (l + r) / 2;\\r\\n\\t\\tbuild(node * 2, l, mid);\\r\\n\\t\\tbuild(node * 2 + 1, mid + 1, r);\\r\\n\\t\\tsegtree[node] = segtree[node * 2] + segtree[node * 2 + 1];\\r\\n\\t}\\r\\n}\\r\\n\\r\\nNode query(int a, int b, int node = 1, int l = 1, int r = n) {\\r\\n\\tif (l > b || r < a) return {0, 0, 0, 0};\\r\\n\\tif (l >= a && r <= b) return segtree[node];\\r\\n\\tint mid = (l + r) / 2;\\r\\n\\treturn query(a, b, node * 2, l, mid) + query(a, b, node * 2 + 1, mid + 1, r);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\tcin >> n;\\r\\n\\tFOR(i, 1, n + 1) cin >> s[i];\\r\\n\\tbuild();\\r\\n\\tint q;\\r\\n\\tcin >> q;\\r\\n\\twhile (q--) {\\r\\n\\t\\tint a, b;\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\tcout << query(a, b).ans << '\\\\n';\\r\\n\\t}\\r\\n\\treturn 0;\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"balkan-18-election","source":"Balkan OI 2018","title":"Election","author":"Andi Qu, Benjamin Qi"},"parent":{"name":"balkan-18-election","relativePath":"balkan-18-election.mdx"},"toc":{"cpp":[{"depth":1,"value":"Method 1 (Offline)","slug":"method-1-offline"},{"depth":1,"value":"Method 2 (Online)","slug":"method-2-online"},{"depth":2,"value":"A simpler case","slug":"a-simpler-case"},{"depth":2,"value":"Combining values","slug":"combining-values"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":1,"value":"Method 1 (Offline)","slug":"method-1-offline"},{"depth":1,"value":"Method 2 (Online)","slug":"method-2-online"},{"depth":2,"value":"A simpler case","slug":"a-simpler-case"},{"depth":2,"value":"Combining values","slug":"combining-values"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":1,"value":"Method 1 (Offline)","slug":"method-1-offline"},{"depth":1,"value":"Method 2 (Online)","slug":"method-2-online"},{"depth":2,"value":"A simpler case","slug":"a-simpler-case"},{"depth":2,"value":"Combining values","slug":"combining-values"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"segtree-ext","title":"More Applications of Segment Tree"}}}}]},"problemInfo":{"uniqueId":"balkan-18-election","url":"https://oj.uz/problem/view/BOI18_election"}},"pageContext":{"id":"balkan-18-election"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}