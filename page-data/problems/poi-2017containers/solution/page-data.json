{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/poi-2017containers/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"poi-17-containers\", source = \"POI 2017\", title = \"Containers\", author = \"Andi Qu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHDIV: _missingComponent(\"MATHDIV\")\n  }, _props.components), {MATHSPAN, HeaderLink, MATHDIV, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O((K + N) \\\\sqrt N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">(</mo><mi>K</mi><mo>+</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo><msqrt><mi>N</mi></msqrt><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O((K + N) \\\\sqrt N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">((</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1767em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span><span class=\\\"mord sqrt\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9267em;\\\"><span class=\\\"svg-align\\\" style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;padding-left:0.833em;\\\">N</span></span><span style=\\\"top:-2.8867em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"hide-tail\\\" style=\\\"min-width:0.853em;height:1.08em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl0 -0\\nc5.3,-9.3,12,-14,20,-14\\nH400000v40H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1133em;\\\"><span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's consider two naive solutions and try to combine them! (In general, this is\\r\\na good idea for square-root-decomposition problems.)\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"naive-solution-1---slow-update-fast-query\",\n      children: [_jsx(_components.a, {\n        href: \"#naive-solution-1---slow-update-fast-query\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Naive solution 1 - slow update; fast query\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keep an array that stores the number of containers on each position. When we\\r\\nprocess a crane, we can simply increment the positions that it puts containers\\r\\non.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Querying the final answer only takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time, but processing all of\\r\\nthe cranes can potentially take \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(KN)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>K</mi><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(KN)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time in total.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This solution would work well if \", _jsxs(_components.strong, {\n        children: [\"all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"d_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">d_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8444em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" were large\"]\n      }), \", as processing each\\r\\ncrane takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N / d_i)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi mathvariant=\\\"normal\\\">/</mi><msub><mi>d</mi><mi>i</mi></msub><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N / d_i)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord\\\">/</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"naive-solution-2---fast-update-slow-query\",\n      children: [_jsx(_components.a, {\n        href: \"#naive-solution-2---fast-update-slow-query\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Naive solution 2 - fast update; slow query\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp[x][y]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>y</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp[x][y]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" denote the prefix sum of the number of cranes with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"d_i = y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">d_i = y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8444em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n      }), \" and\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x \\\\equiv a_i \\\\pmod{y}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mi>i</mi></msub><mspace></mspace><mspace width=\\\"0.4444em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>y</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">x \\\\equiv a_i \\\\pmod{y}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4637em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.4444em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". When we process a crane, we change exactly two values\\r\\nin the DP array. The answer for position \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \" is simply\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\sum_{y = 0}^{\\\\max(d_i)} \\\\sum_{x \\\\leq p \\\\land x \\\\equiv p \\\\pmod{y}}dp[x][y].\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy=\\\"false\\\">)</mo></mrow></munderover><munder><mo>∑</mo><mrow><mi>x</mi><mo>≤</mo><mi>p</mi><mo>∧</mo><mi>x</mi><mo>≡</mo><mi>p</mi><mspace></mspace><mspace width=\\\"1em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>y</mi><mo stretchy=\\\"false\\\">)</mo></mrow></munder><mi>d</mi><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>y</mi><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum_{y = 0}^{\\\\max(d_i)} \\\\sum_{x \\\\leq p \\\\land x \\\\equiv p \\\\pmod{y}}dp[x][y].</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3.477em;vertical-align:-1.516em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.961em;\\\"><span style=\\\"top:-1.8829em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">0</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.386em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mop mtight\\\"><span class=\\\"mtight\\\">m</span><span class=\\\"mtight\\\">a</span><span class=\\\"mtight\\\">x</span></span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3281em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose mtight\\\">)</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.4032em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.809em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">x</span><span class=\\\"mrel mtight\\\">≤</span><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mbin mtight\\\">∧</span><span class=\\\"mord mathnormal mtight\\\">x</span><span class=\\\"mrel mtight\\\">≡</span><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mspace allowbreak mtight\\\"></span><span class=\\\"mspace mtight\\\" style=\\\"margin-right:0.5204em;\\\"></span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathrm mtight\\\">mod</span></span></span><span class=\\\"mspace mtight\\\" style=\\\"margin-right:0.3903em;\\\"></span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose mtight\\\">)</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.516em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Processing all of the cranes now only takes only \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(K)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(K)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time, but\\r\\nquerying the final answer can potentially take \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(NK)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(NK)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This solution would work well if \", _jsxs(_components.strong, {\n        children: [\"all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"d_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">d_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8444em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" were small\"]\n      }), \", as we querying the\\r\\nsolution takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N \\\\cdot \\\\max(d_i))\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>⋅</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N \\\\cdot \\\\max(d_i))</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mclose\\\">))</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"model-solution---fastish-update-fastish-query\",\n      children: [_jsx(_components.a, {\n        href: \"#model-solution---fastish-update-fastish-query\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Model solution - fast(ish) update; fast(ish) query\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"d_i \\\\geq \\\\sqrt N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>≥</mo><msqrt><mi>N</mi></msqrt></mrow><annotation encoding=\\\"application/x-tex\\\">d_i \\\\geq \\\\sqrt N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8444em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.04em;vertical-align:-0.1133em;\\\"></span><span class=\\\"mord sqrt\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9267em;\\\"><span class=\\\"svg-align\\\" style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;padding-left:0.833em;\\\">N</span></span><span style=\\\"top:-2.8867em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"hide-tail\\\" style=\\\"min-width:0.853em;height:1.08em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl0 -0\\nc5.3,-9.3,12,-14,20,-14\\nH400000v40H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1133em;\\\"><span></span></span></span></span></span></span></span></span>\"\n      }), \", then apply solution 1. Otherwise, apply solution 2.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After processing all the cranes, we can simply add the results from the two\\r\\nsolutions.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n#define FOR(i, x, y) for (int i = x; i < y; i++)\\r\\nusing namespace std;\\r\\n\\r\\nconst int k = 300;\\r\\nint containers[100001];\\r\\nint dp[100001 + k][k];\\r\\n\\r\\nint main() {\\r\\n\\tiostream::sync_with_stdio(false);\\r\\n\\tcin.tie(0);\\r\\n\\tint n, q;\\r\\n\\tcin >> n >> q;\\r\\n\\twhile (q--) {\\r\\n\\t\\tint a, l, d;\\r\\n\\t\\tcin >> a >> l >> d;\\r\\n\\t\\tif (d >= k)\\r\\n\\t\\t\\tFOR(i, 0, l) containers[a + i * d]++;\\r\\n\\t\\telse {\\r\\n\\t\\t\\tdp[a][d]++;\\r\\n\\t\\t\\tdp[a + (l * d)][d]--;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tFOR(j, 1, k) FOR(i, j, n + 1) dp[i][j] += dp[i - j][j];\\r\\n\\r\\n\\tFOR(i, 1, n + 1) {\\r\\n\\t\\tFOR(j, 1, k) containers[i] += dp[i][j];\\r\\n\\t\\tcout << containers[i] << ' ';\\r\\n\\t}\\r\\n\\treturn 0;\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"poi-17-containers","source":"POI 2017","title":"Containers","author":"Andi Qu"},"parent":{"name":"poi-17-containers","relativePath":"poi-17-containers.mdx"},"toc":{"cpp":[{"depth":2,"value":"Naive solution 1 - slow update; fast query","slug":"naive-solution-1---slow-update-fast-query"},{"depth":2,"value":"Naive solution 2 - fast update; slow query","slug":"naive-solution-2---fast-update-slow-query"},{"depth":2,"value":"Model solution - fast(ish) update; fast(ish) query","slug":"model-solution---fastish-update-fastish-query"}],"java":[{"depth":2,"value":"Naive solution 1 - slow update; fast query","slug":"naive-solution-1---slow-update-fast-query"},{"depth":2,"value":"Naive solution 2 - fast update; slow query","slug":"naive-solution-2---fast-update-slow-query"},{"depth":2,"value":"Model solution - fast(ish) update; fast(ish) query","slug":"model-solution---fastish-update-fastish-query"}],"py":[{"depth":2,"value":"Naive solution 1 - slow update; fast query","slug":"naive-solution-1---slow-update-fast-query"},{"depth":2,"value":"Naive solution 2 - fast update; slow query","slug":"naive-solution-2---fast-update-slow-query"},{"depth":2,"value":"Model solution - fast(ish) update; fast(ish) query","slug":"model-solution---fastish-update-fastish-query"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"sqrt","title":"Square Root Decomposition"}}}}]},"problemInfo":{"uniqueId":"poi-17-containers","url":"https://szkopul.edu.pl/problemset/problem/oNnWY6ZuzzhvG-jCmijiXkIk/site/?key=statement"}},"pageContext":{"id":"poi-17-containers"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}