{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cf-moamen-and-k-subarrays/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cf-1557B\", source = \"CF\", title = \"Moamen and k-subarrays\", author = \"Aadit Ambadkar\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, Spoiler, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/93703\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (C++)\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider the minimum number of needed subarrays. If this number is less than or equal to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" it is solvable using \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" subarrays.\\r\\nTo find the minimum number of subarrays, we can look for a configuration of subarrays where the number of subarrays is minimal. (Remember that the subarrays must be contiguous)\\r\\nSpecifically, in this configuration, picture a single subarray. The order of the elements inside the subarray never change, so the order of the elements inside the subarray is the same before and after reordering the subarrays.\\r\\nThis means that if we know the order of the sorted elements beforehand, we can apply a greedy algorithm which tries to maximize the size of the previous subarray.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example, in the first testcase, the ordering of the elements is like so:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After sorting the list looks like so:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We may then create a map mapping each element to the element which should be before it:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"value\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"6\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{map}[\\\\texttt{value}]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">map</mtext><mo stretchy=\\\"false\\\">[</mo><mtext mathvariant=\\\"monospace\\\">value</mtext><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{map}[\\\\texttt{value}]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">map</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">value</span></span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\infty\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∞</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\infty</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\">∞</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With this map in mind, we generate the subsets as shown:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-yellow-100 dark:bg-yellow-800\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-yellow-100 dark:bg-yellow-800\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-yellow-100 dark:bg-yellow-800\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-yellow-100 dark:bg-yellow-800\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-red-100 dark:bg-red-800\",\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"table\", {\n        children: [_jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Index:\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-yellow-100 dark:bg-yellow-800\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-green-100 dark:bg-green-800\",\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-red-100 dark:bg-red-800\",\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"th\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"4\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\texttt{arr}[i]\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n              })\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Thus, we need 4 subarrays at minimum.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Time Complexity Proof\",\n      children: _jsxs(_components.p, {\n        children: [\"Sorting Requires \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N\\\\log N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \", and repeated map insertions also require \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N\\\\log N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \". Hence the overall time complexity is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N\\\\log N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n \\r\\nvoid solve() {\\r\\n\\tint n, k; cin >> n >> k;\\r\\n\\tint arr[(int)1e5 + 5];\\r\\n\\tint sarr[(int)1e5 + 5];\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> arr[i];\\r\\n\\t\\tsarr[i] = arr[i];\\r\\n\\t}\\r\\n\\t// Map from one value to the value after it in the sorted array\\r\\n\\tmap<int, int> next;  \\r\\n\\tsort(sarr, sarr + n);\\r\\n\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\tnext[sarr[i]] = sarr[i + 1];\\r\\n\\t}\\r\\n\\tnext[sarr[n - 1]] = INT32_MAX;  // Ridiculously Large Number\\r\\n\\tint ans = 1;\\r\\n\\r\\n\\t// If the previous element in the unsorted array is not the same \\r\\n\\t// as the previous element in the sorted array, we need at least 1 more segment\\r\\n\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\tif (next[arr[i - 1]] != arr[i]) ans++; \\r\\n\\t}\\r\\n\\tcout << (ans <= k ? \\\"YES\\\" : \\\"NO\\\") << endl;\\r\\n}\\r\\n \\r\\nint main() {\\r\\n\\tios::sync_with_stdio(0); \\r\\n\\tcin.tie(0);\\r\\n\\tint t; \\r\\n\\tcin >> t; \\r\\n\\twhile (t--) solve();\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class MoamenSubarrays {\\r\\n\\tpublic static void main (String[] args) throws IOException {\\r\\n\\t\\tBufferedReader f = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(f.readLine());\\r\\n\\t\\r\\n\\t\\tint testNum = Integer.parseInt(st.nextToken());\\r\\n\\t\\tfor (int t = 0; t < testNum; t++) {\\r\\n\\t\\t\\tst = new StringTokenizer(f.readLine());\\r\\n\\t\\t\\tint n = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\tint k = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tint[] arr = new int[n];\\r\\n\\t\\t\\tint[] sarr = new int[n];\\r\\n\\t\\r\\n\\t\\t\\tst = new StringTokenizer(f.readLine());\\r\\n\\t\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\t\\tarr[i] = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\t\\tsarr[i] = arr[i];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tArrays.sort(sarr);\\r\\n\\t\\r\\n\\t\\t\\t// Map from one value to the value after it in the sorted array\\r\\n\\t\\t\\tTreeMap<Integer, Integer> next = new TreeMap<>(); \\r\\n\\t\\t\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\t\\t\\tnext.put(sarr[i], sarr[i + 1]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tnext.put(sarr[n - 1], Integer.MAX_VALUE);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t       \\r\\n\\t\\t\\tint ans = 1;\\r\\n\\t\\t\\t// If the previous element in the unsorted array is not the same \\r\\n\\t\\t\\t// as the previous element in the sorted array, we need at least 1 more segment\\r\\n\\t\\t\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif (next.get(arr[i - 1]) != arr[i]) ans++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tSystem.out.println(ans <= k ? \\\"YES\\\" : \\\"NO\\\");\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"for _ in range(int(input())):\\r\\n\\tn, k = map(int, input().split())\\r\\n\\tarr = list(map(int, input().split()))\\r\\n\\r\\n\\tsarr = arr.copy()\\r\\n\\tsarr.sort()\\r\\n\\t\\r\\n\\tafter = {}  # Map (dict) from one value to the value after it in the sorted array\\r\\n\\tfor i in range(n - 1):\\r\\n\\t\\tafter[sarr[i]] = sarr[i + 1]\\r\\n\\t\\r\\n\\tafter[sarr[n - 1]] = float('inf')\\r\\n\\tans = 1\\r\\n\\tfor i in range(1, n):\\r\\n\\t\\tif after[arr[i - 1]] != arr[i]:\\r\\n\\t\\t\\t# If the previous element in the unsorted array is not the same \\r\\n\\t\\t\\t# as the previous element in the sorted array, we need at least 1 more segment\\r\\n\\t\\t\\tans += 1\\r\\n\\r\\n\\tprint(\\\"YES\\\" if ans <= k else \\\"NO\\\")\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cf-1557B","source":"CF","title":"Moamen and k-subarrays","author":"Aadit Ambadkar"},"parent":{"name":"cf-1557B","relativePath":"cf-1557B.mdx"},"toc":{"cpp":[{"depth":2,"value":"Solution","slug":"solution"}],"java":[{"depth":2,"value":"Solution","slug":"solution"}],"py":[{"depth":2,"value":"Solution","slug":"solution"}]}},"allProblemInfo":{"edges":[{"node":{"module":null}}]},"problemInfo":{"uniqueId":"cf-1557B","url":"https://codeforces.com/contest/1557/problem/B"}},"pageContext":{"id":"cf-1557B"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}