{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-646-closing-the-farm/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-646\", source = \"USACO Gold 2016 Open\", title = \"Closing the Farm\", author = \"Nathan Gong, Melody Yu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, Youtube, LanguageSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_closing_gold_open16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: The video solution might not be the same as other solutions. Code in C++.\"\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"5G1CGuTfUJk\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class closing {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tScanner sc = new Scanner(new File(\\\"closing.in\\\"));\\r\\n\\t\\tPrintWriter out = new PrintWriter(\\\"closing.out\\\");\\r\\n\\r\\n\\t\\tint n = sc.nextInt();\\r\\n\\t\\tint m = sc.nextInt();\\r\\n\\r\\n\\t\\tArrayList<ArrayList<Integer>> adj = new ArrayList<>();\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tadj.add(new ArrayList<>());\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < m; i++) {\\r\\n\\t\\t\\tint a = sc.nextInt() - 1;\\r\\n\\t\\t\\tint b = sc.nextInt() - 1;\\r\\n\\t\\t\\tadj.get(a).add(b);\\r\\n\\t\\t\\tadj.get(b).add(a);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint[] order = new int[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\torder[i] = sc.nextInt() - 1;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tUnionFind graph = new UnionFind(n);\\r\\n\\t\\tboolean[] open = new boolean[n];\\r\\n\\t\\tArrayList<String> answers = new ArrayList<>();\\r\\n\\t\\r\\n\\t\\t// Process closings in reverse order:\\r\\n\\t\\t// Instead of closing each farm, we simulate opening farms\\r\\n\\t\\tfor (int i = n - 1; i >= 0; i--) {\\r\\n\\t\\t\\topen[order[i]] = true;\\r\\n\\r\\n\\t\\t\\t// Connect opening farm with neighbor iff it's open\\r\\n\\t\\t\\tfor (int neighbor : adj.get(order[i])) {\\r\\n\\t\\t\\t\\tif (open[neighbor]) {\\r\\n\\t\\t\\t\\t\\tgraph.union(order[i], neighbor);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Set answer to YES if # of connected components equals\\r\\n\\t\\t\\t// unopened barns + 1 (for component formed by open barns)\\r\\n\\t\\t\\tif (graph.components == i + 1) {\\r\\n\\t\\t\\t\\tanswers.add(\\\"YES\\\");\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse {\\r\\n\\t\\t\\t\\tanswers.add(\\\"NO\\\");\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tCollections.reverse(answers);\\r\\n\\t\\tfor (int i = 0; i < answers.size(); i++) {\\r\\n\\t\\t\\tout.println(answers.get(i));\\r\\n\\t\\t}\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n\\r\\n\\tpublic static class UnionFind {\\r\\n\\t\\tint[] nodes;\\r\\n\\t\\tint[] sizes;\\r\\n\\t\\tint components;\\r\\n\\r\\n\\t\\tUnionFind(int n) {\\r\\n\\t\\t\\tnodes = new int[n];\\r\\n\\t\\t\\tsizes = new int[n];\\r\\n\\t\\t\\tcomponents = n;\\r\\n\\t\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\t\\tnodes[i] = i;\\r\\n\\t\\t\\t\\tsizes[i] = 1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvoid union(int p, int q) {\\r\\n\\t\\t\\tint i = root(p);\\r\\n\\t\\t\\tint j = root(q);\\r\\n\\t\\t\\tif (i == j) return;\\r\\n\\r\\n\\t\\t\\tcomponents--;\\r\\n\\t\\t\\tif (sizes[i] < sizes[j]) {\\r\\n\\t\\t\\t\\tnodes[i] = nodes[j];\\r\\n\\t\\t\\t\\tsizes[j] += sizes[i];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse {\\r\\n\\t\\t\\t\\tnodes[j] = nodes[i];\\r\\n\\t\\t\\t\\tsizes[i] += sizes[j];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint root(int index) {\\r\\n\\t\\t\\twhile (nodes[index] != index) {\\r\\n\\t\\t\\t\\tnodes[index] = nodes[nodes[index]];\\r\\n\\t\\t\\t\\tindex = nodes[index];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn index;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tboolean connected(int p, int q) {\\r\\n\\t\\t\\treturn root(p) == root(q);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-646","source":"USACO Gold 2016 Open","title":"Closing the Farm","author":"Nathan Gong, Melody Yu"},"parent":{"name":"usaco-646","relativePath":"usaco-646.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dsu","title":"Disjoint Set Union"}}}}]},"problemInfo":{"uniqueId":"usaco-646","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=646"}},"pageContext":{"id":"usaco-646"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}