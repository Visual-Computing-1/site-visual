{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-1013-swapity-swap/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst id = \"usaco-1013\", source = \"USACO Bronze 2020 February\", title = \"Swap\", author = \"Benjamin Qi\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _props.components), {wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_swap_bronze_feb20.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C++ Version of Second Solution:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint N, K;\\r\\npair<int, int> A, B;\\r\\nvector<int> ori, cur;\\r\\n\\r\\nvector<int> apply(vector<int> v) {\\r\\n\\treverse(begin(v) + A.first, begin(v) + A.second + 1);\\r\\n\\treverse(begin(v) + B.first, begin(v) + B.second + 1);\\r\\n\\treturn v;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\t// fastio\\r\\n\\tcin.tie(0);\\r\\n\\tios::sync_with_stdio(0);\\r\\n\\tfreopen(\\\"swap.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"swap.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tcin >> N >> K >> A.first >> A.second >> B.first >> B.second;\\r\\n\\tA.first--, A.second--, B.first--, B.second--;\\r\\n\\r\\n\\tori.resize(N);\\r\\n\\r\\n\\t// Fill values in increasing order (ie [0, 1, 2, 3, etc])\\r\\n\\tiota(begin(ori), end(ori), 0);\\r\\n\\r\\n\\tcur = ori;\\r\\n\\tint period = 0;\\r\\n\\r\\n\\tdo {\\r\\n\\t\\tperiod++;\\r\\n\\t\\tcur = apply(cur);\\r\\n\\t} while (cur != ori);\\r\\n\\r\\n\\tfor (K %= period; K; K--) {\\r\\n\\t\\tcur = apply(cur);\\r\\n\\t}\\r\\n\\r\\n\\tfor (int t : cur) cout << t + 1 << \\\"\\\\n\\\";\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-1013","source":"USACO Bronze 2020 February","title":"Swap","author":"Benjamin Qi"},"parent":{"name":"usaco-1013","relativePath":"usaco-1013.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-graphs","title":"Introduction to Graphs"}}}}]},"problemInfo":{"uniqueId":"usaco-1013","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1013"}},"pageContext":{"id":"usaco-1013"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}