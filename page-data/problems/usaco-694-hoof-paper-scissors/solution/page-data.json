{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-694-hoof-paper-scissors/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-694\", source = \"USACO Gold 2017 January\", title = \"Hoof, Paper, Scissors\", author = \"Melody Yu, Neo Wang, Brad Ma\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    strong: \"strong\",\n    pre: \"pre\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, Youtube, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_hps_gold_jan17.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: The video solution might not be the same as other solutions. Code in C++.\"\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"YvPGN6ZPKCc\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The main observation for this problem is that we only need to keep track of the\\r\\nnumber of games played \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \", the number of times switched so far \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \", and the\\r\\ncurrent gesture \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" in order to determine the largest number of previous games\\r\\nwon for any game \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For every move, either Bessie can either switch or stay on her current gesture.\\r\\nIf she changes her gesture, then the next game \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">i+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7429em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" will have used \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">j+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \"\\r\\ngestures, which corresponds to the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span></span></span></span>\"\n      }), \" state\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp}[i+1][j+1][k]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>k</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[i+1][j+1][k]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \". We can simulate this for all 3 gestures. Then, we\\r\\njust increment \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp}[i][j][k]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>k</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp}[i][j][k]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" if Bessie wins at game \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" with gesture\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that you can just compare the current gesture to \", _jsx(_components.code, {\n        children: \"H, P, S\"\n      }), \" because there is\\r\\nalways exactly one way to win.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NK)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NK)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"//BeginCodeSnip{C++ Short Template}\\n#include <bits/stdc++.h> // see /general/running-code-locally\\nusing namespace std;\\n\\nusing ll = long long;\\n\\nusing vi = vector<int>;\\n#define pb push_back\\n#define all(x) begin(x), end(x)\\n#define sz(x) (int) (x).size()\\n\\nusing pi = pair<int,int>;\\n#define f first\\n#define s second\\n#define mp make_pair\\n\\nvoid setIO(string name = \\\"\\\") {\\n\\tcin.tie(0)->sync_with_stdio(0); // see /general/fast-io\\n\\tif (sz(name)) {\\n\\t\\tfreopen((name + \\\".in\\\").c_str(), \\\"r\\\", stdin); // see /general/input-output\\n\\t\\tfreopen((name + \\\".out\\\").c_str(), \\\"w\\\", stdout);\\n\\t}\\n}\\n//EndCodeSnip\\n\\r\\nconst int MX = 1e5+5;\\r\\n\\r\\nint dp[MX][25][3]; // dp[i][j][k] is the largest number of games she wins at games i with switches j with current item k\\r\\nint A[MX]; // 0 == H 1 == P 2 == S\\r\\n\\r\\nint main() {\\r\\n\\tsetIO(\\\"hps\\\");\\r\\n\\r\\n\\tint N, K;\\r\\n\\r\\n\\tcin >> N >> K;\\r\\n\\r\\n\\tfor(int i = 0; i < N; i++) {\\r\\n\\t\\tchar a; cin >> a;\\r\\n\\t\\tif(a == 'H') A[i] = 0;\\r\\n\\t\\tif(a == 'P') A[i] = 1;\\r\\n\\t\\tif(a == 'S') A[i] = 2;\\r\\n\\t}\\r\\n\\r\\n\\t// either she switches to h or p or s or stays\\r\\n\\r\\n\\tfor(int i = 0; i < N; i++) {\\r\\n\\t\\tfor(int j = 0; j <= K; j++) {\\r\\n\\t\\t\\tfor(int k = 0; k < 3; k++) {\\r\\n\\t\\t\\t\\tif(k == A[i]) dp[i][j][k]++;\\r\\n\\t\\t\\t\\tdp[i+1][j+1][0] = max(dp[i+1][j+1][0], dp[i][j][k]); // switch to not item\\r\\n\\t\\t\\t\\tdp[i+1][j+1][1] = max(dp[i+1][j+1][1], dp[i][j][k]); // switch to not item\\r\\n\\t\\t\\t\\tdp[i+1][j+1][2] = max(dp[i+1][j+1][2], dp[i][j][k]); // switch to not item\\r\\n\\t\\t\\t\\tdp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k]); // stay\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tint ret = 0;\\r\\n\\r\\n\\tfor(int i = 0; i < 3; i++) {\\r\\n\\t\\tret = max(ret, dp[N-1][K][i]);\\r\\n\\t}\\r\\n\\r\\n\\tcout << ret << endl;\\r\\n\\r\\n}\\n\"\n          })\n        })]\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class HoofPaperScissors {\\r\\n\\tstatic int[] moves;\\r\\n\\r\\n\\tpublic static void main (String[] args) throws IOException {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new FileReader(\\\"hps.in\\\"));\\r\\n\\t\\tPrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(\\\"hps.out\\\")));\\r\\n\\r\\n\\t\\tStringTokenizer inputLine = new StringTokenizer(br.readLine());\\r\\n\\t\\tint numGames = Integer.parseInt(inputLine.nextToken());\\r\\n\\t\\tint maximumSwitches = Integer.parseInt(inputLine.nextToken());\\r\\n\\t\\t// dp[game][switches][type] = maximum number of wins\\r\\n\\t\\t// at that game with at most that amount\\r\\n\\t\\t// of switches and that with that type active\\r\\n\\t\\tmoves = new int[numGames + 1];\\r\\n\\t\\tfor (int x = 1; x <= numGames; x++) {\\r\\n\\t\\t\\tchar c = br.readLine().charAt(0);\\r\\n\\t\\t\\t// set H as 0, P as 1, S as 2\\r\\n\\t\\t\\tif (c == 'H') {\\r\\n\\t\\t\\t\\tmoves[x] = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse if (c == 'P') {\\r\\n\\t\\t\\t\\tmoves[x] = 1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse {\\r\\n\\t\\t\\t\\tmoves[x] = 2;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint[][][] dp = new int[numGames + 1][maximumSwitches + 2][3];\\r\\n\\t\\tint maximum = 0;\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\tc = current game number\\r\\n\\t\\tn = number of switches\\r\\n\\t\\t */\\r\\n\\r\\n\\t\\tfor (int c = 1; c <= numGames; c++) {  // for each game\\r\\n\\t\\t\\t// for each switch amount\\r\\n\\t\\t\\tfor (int n = 1; n < maximumSwitches + 2; n++) {\\r\\n\\t\\t\\t\\t// try switching to the three possibilities\\r\\n\\t\\t\\t\\tint add1 = 0;\\r\\n\\t\\t\\t\\tif (moves[c] == 0) {\\r\\n\\t\\t\\t\\t\\tadd1 = 1;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// take the maximum of the game before + add (win or lose)\\r\\n\\t\\t\\t\\t// and switching from the other two options\\r\\n\\t\\t\\t\\tdp[c][n][0] = Math.max(dp[c - 1][n][0]\\r\\n\\t\\t\\t\\t+ add1, Math.max(dp[c - 1][n - 1][1] + add1,\\r\\n\\t\\t\\t\\tdp[c - 1][n - 1][2] + add1));\\r\\n\\r\\n\\t\\t\\t\\tint add2 = 0;\\r\\n\\t\\t\\t\\tif (moves[c] == 1) {\\r\\n\\t\\t\\t\\t\\tadd2 = 1;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdp[c][n][1] = Math.max(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdp[c - 1][n][1] + add2, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tMath.max(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdp[c - 1][n - 1][0] + add2,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdp[c - 1][n - 1][2] + add2\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\tint add3 = 0;\\r\\n\\t\\t\\t\\tif (moves[c] == 2) {\\r\\n\\t\\t\\t\\t\\tadd3 = 1;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdp[c][n][2] = Math.max(dp[c - 1][n][2] +\\r\\n\\t\\t\\t\\tadd3, Math.max(dp[c - 1][n - 1][0]\\r\\n\\t\\t\\t\\t+ add3, dp[c - 1][n - 1][1] + add3));\\r\\n\\r\\n\\t\\t\\t\\tif (c == numGames) {  // check maximum if it is the last row\\r\\n\\t\\t\\t\\t\\tmaximum = Math.max(maximum, Math.max(dp[numGames][n][0],\\r\\n\\t\\t\\t\\t\\tMath.max(dp[numGames][n][1], dp[numGames][n][2])));\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tpw.println(maximum);\\r\\n\\t\\tpw.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-694","source":"USACO Gold 2017 January","title":"Hoof, Paper, Scissors","author":"Melody Yu, Neo Wang, Brad Ma"},"parent":{"name":"usaco-694","relativePath":"usaco-694.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Solution","slug":"solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Solution","slug":"solution"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Solution","slug":"solution"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-dp","title":"Introduction to DP"}}}}]},"problemInfo":{"uniqueId":"usaco-694","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=694"}},"pageContext":{"id":"usaco-694"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}