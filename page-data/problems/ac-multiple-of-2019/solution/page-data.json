{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/ac-multiple-of-2019/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"ac-MultipleOf2019\", source = \"AtCoder Beginner Contest\", title = \"Multiple of 2019\", author = \"Maggie Liu, Brad Ma, Mohammad Nour Massri\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://img.atcoder.jp/abc164/editorial.pdf#page=10\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\nusing namespace std;\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tstring s;\\r\\n\\tcin >> s;\\r\\n\\tint num = 0, n = s.size(), pow = 1;\\r\\n\\t//initializes array with initializer list\\r\\n\\t//explained here: https://www.learncpp.com/cpp-tutorial/arrays-part-ii/\\r\\n\\tint count[2019]{1};\\r\\n\\tfor (int i = n - 1; i >= 0; i--)\\r\\n\\t{\\r\\n\\t\\t//find the remainder of the current number mod 2019\\r\\n\\t\\tnum = (num + pow * (s[i] - '0')) % 2019;\\r\\n\\t\\t//increment the count of this remainder\\r\\n\\t\\tcount[num]++;\\r\\n\\t\\tpow = pow * 10 % 2019;\\r\\n\\t}\\r\\n\\tlong long ans = 0;\\r\\n\\tfor (int i = 0; i < 2019; i++)\\r\\n\\t{\\r\\n\\t\\t//there are nC2 ways to pair the numbers with the same remainder\\r\\n\\t\\tans += (long long)count[i] * (count[i] - 1) / 2;\\r\\n\\t}\\r\\n\\tcout << ans << endl;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class MultipleOf2019 {\\r\\n\\tpublic static void main (String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tString numberString = io.next();\\r\\n\\t\\tint num = 0;\\r\\n\\t\\tint stringLength = numberString.length();\\r\\n\\t\\tint pow = 1;\\r\\n\\t\\tint[] count = new int[2019];\\r\\n\\t\\tcount[0] = 1;\\r\\n\\r\\n\\t\\tfor (int i = stringLength - 1; i >= 0; i--) {\\r\\n\\t\\t\\t// find the remainder of the current number mod 2019\\r\\n\\t\\t\\tnum = (num + pow * (numberString.charAt(i) - '0')) % 2019;\\r\\n\\t\\t\\t// increment the count of this remainder\\r\\n\\t\\t\\tcount[num]++;\\r\\n\\t\\t\\tpow = pow * 10 % 2019;\\r\\n\\t\\t}\\r\\n\\t\\tlong answer = 0;\\r\\n\\t\\tfor (int i = 0; i < 2019; i++) {\\r\\n\\t\\t\\t// there are nC2 ways to pair the numbers with the same remainder\\r\\n\\t\\t\\tanswer += (long) count[i] * (count[i] - 1) / 2;\\r\\n\\t\\t}\\r\\n\\t\\tio.println(answer);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"MOD = 2019\\r\\nstring = input()\\r\\n\\r\\ncount = [0] * MOD\\r\\ncount[0] = 1\\r\\n\\r\\ncur_num = 0\\r\\npower = 1\\r\\nfor c in reversed(string):\\r\\n\\t# find the remainder of the current number MOD 2019\\r\\n\\tcur_num = (int(c) * power + cur_num) % MOD\\r\\n\\t# increase the power of 10\\r\\n\\tpower = (power * 10) % MOD\\r\\n\\t# increase the count of this remainder\\r\\n\\tcount[cur_num] += 1\\r\\n\\r\\nans = 0\\r\\nfor rep in count:\\r\\n\\t# when remainder i repeats rep times then there is C(rep, 2) valid pairs\\r\\n\\tans += (rep * (rep - 1)) // 2\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"ac-MultipleOf2019","source":"AtCoder Beginner Contest","title":"Multiple of 2019","author":"Maggie Liu, Brad Ma, Mohammad Nour Massri"},"parent":{"name":"ac-MultipleOf2019","relativePath":"ac-MultipleOf2019.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"prefix-sums","title":"Introduction to Prefix Sums"}}}},{"node":{"module":{"frontmatter":{"id":"visual","title":"Visual"}}}}]},"problemInfo":{"uniqueId":"ac-MultipleOf2019","url":"https://atcoder.jp/contests/abc164/tasks/abc164_d"}},"pageContext":{"id":"ac-MultipleOf2019"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}