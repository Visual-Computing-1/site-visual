{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/lc-find-pivot-index/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"lc-FindPivotIndex\", source = \"LeetCode\", title = \"Find Pivot Index\", author = \"Qi Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {MATHSPAN, HeaderLink, MATHDIV, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution-1\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 1\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The pivot index must have the same sum on its left and its right. To calculate\\r\\nthis, we can create a prefix sum of the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{nums}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">nums</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{nums}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">nums</span></span></span></span></span>\"\n      }), \" array (in my solution it\\r\\nis cushioned with one \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \" at index \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \"). Loop through every index in the\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{psums}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">psums</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{psums}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6528em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">psums</span></span></span></span></span>\"\n      }), \" array and check whether\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\r \\\\texttt{psums}[i] \\\\stackrel{?}{=} \\\\texttt{psums}[\\\\text{size}(\\\\texttt{nums})] - \\\\texttt{psums}[i+1].\\r \\r\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">psums</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo><mover><mo><mo>=</mo></mo><mo stretchy=\\\"false\\\" lspace=\\\"0em\\\" rspace=\\\"0em\\\">?</mo></mover></mo><mtext mathvariant=\\\"monospace\\\">psums</mtext><mo stretchy=\\\"false\\\">[</mo><mtext>size</mtext><mo stretchy=\\\"false\\\">(</mo><mtext mathvariant=\\\"monospace\\\">nums</mtext><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mtext mathvariant=\\\"monospace\\\">psums</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\r \\\\texttt{psums}[i] \\\\stackrel{?}{=} \\\\texttt{psums}[\\\\text{size}(\\\\texttt{nums})] - \\\\texttt{psums}[i+1].\\r \\r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.403em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">psums</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\"><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.153em;\\\"><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop\\\">=</span></span></span><span style=\\\"top:-3.5669em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mclose mtight\\\">?</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">psums</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">size</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">nums</span></span><span class=\\\"mclose\\\">)]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">psums</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If this is true, we can return our current index because the problem wants the\\r\\nleft-most index. If it finishes the for-loop without returning, it means there\\r\\nis no valid pivot index so return \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"-1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">-1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">−</span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"//Created by Qi Wang\\r\\nclass Solution {\\r\\npublic:\\r\\n\\tint pivotIndex(vector<int>& nums) {\\r\\n\\t\\tvector<int> psums{0};\\r\\n\\t\\t//Constructing psums\\r\\n\\t\\tfor (int num : nums) psums.push_back(psums.back()+num);\\r\\n\\r\\n\\r\\n\\t\\tfor(int i = 0; i<psums.size()-1; i++){\\r\\n\\t\\t\\t//Checking whether the left and the right are equal in area\\r\\n\\t\\t\\tif(psums[i] == psums[nums.size()] - psums[i+1]){\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t}\\r\\n};\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-1\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"//Created by Qi Wang\\r\\nclass Solution {\\r\\n\\tpublic int pivotIndex(int[] nums) {\\r\\n\\t\\tList<Integer> psums = new ArrayList<>();\\r\\n\\r\\n\\t\\t//Constructing psums\\r\\n\\t\\tpsums.add(0);\\r\\n\\t\\tfor (int num : nums) psums.add(psums.get(psums.size()-1)+num);\\r\\n\\r\\n\\r\\n\\t\\tfor(int i = 0; i<psums.length-1; i++){\\r\\n\\t\\t\\t//Checking whether the left and the right are equal in area\\r\\n\\t\\t\\tif(psums.get(i) == psums.get(nums.length) - psums.get(i+1)){\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-2\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-2\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"# Created by Qi Wang\\r\\nclass Solution:\\r\\n\\tdef pivotIndex(self, nums: List[int]) -> int:\\r\\n\\t\\tpsums = [0]\\r\\n\\t\\tfor i in range(len(nums)):\\r\\n\\t\\t\\t# Notice i in psums is always one less than the current index\\r\\n\\t\\t\\tpsums.append(psums[i] + nums[i]);\\r\\n\\r\\n\\t\\tfor i in range(len(nums)):\\r\\n\\t\\t\\t# Checking whether the left and the right are equal in area\\r\\n\\t\\t\\tif psums[i] == psums[len(nums)] - psums[i+1]:\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\r\\n\\t\\treturn -1;\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution-2\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 2\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The alternate solution does not require an array to store the sums. Instead, we\\r\\nonly need the total sum of the array and the current sum at each index\\r\\n(exclusive of index). With this we check whether\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\r \\\\texttt{curSum} \\\\stackrel{?}{=} \\\\texttt{total} - \\\\texttt{curSum} - \\\\texttt{nums}[i].\\r \\r\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">curSum</mtext><mo><mover><mo><mo>=</mo></mo><mo stretchy=\\\"false\\\" lspace=\\\"0em\\\" rspace=\\\"0em\\\">?</mo></mover></mo><mtext mathvariant=\\\"monospace\\\">total</mtext><mo>−</mo><mtext mathvariant=\\\"monospace\\\">curSum</mtext><mo>−</mo><mtext mathvariant=\\\"monospace\\\">nums</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\r \\\\texttt{curSum} \\\\stackrel{?}{=} \\\\texttt{total} - \\\\texttt{curSum} - \\\\texttt{nums}[i].\\r \\r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.153em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">curSum</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\"><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.153em;\\\"><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop\\\">=</span></span></span><span style=\\\"top:-3.5669em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mclose mtight\\\">?</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">total</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">curSum</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">nums</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: This is technically the same solution as solution 1, but it is another way\\r\\nto think about approaching this question.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-3\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-3\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"//Created by Qi Wang\\r\\nclass Solution {\\r\\npublic:\\r\\n\\tint pivotIndex(vector<int>& nums) {\\r\\n\\t\\tint total = 0;\\r\\n\\t\\tfor(int x : nums)\\r\\n\\t\\t\\ttotal += x;\\r\\n\\r\\n\\t\\tint curSum = 0;\\r\\n\\t\\tfor(int i = 0; i<nums.size(); i++){\\r\\n\\t\\t\\t//curSum is up to i not inclusive of i.\\r\\n\\t\\t\\tif(curSum == total - curSum - nums[i]){\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//updating curSum\\r\\n\\t\\t\\tcurSum += nums[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t}\\r\\n};\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-4\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-4\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"//Created by Qi Wang\\r\\nclass Solution {\\r\\n\\tpublic int pivotIndex(int[] nums) {\\r\\n\\t\\tint total = 0;\\r\\n\\t\\tfor(int num : nums)\\r\\n\\t\\t\\ttotal += num;\\r\\n\\r\\n\\t\\tint curSum = 0;\\r\\n\\t\\tfor(int i = 0; i<nums.length; i++){\\r\\n\\t\\t\\t//curSum is up to i not inclusive of i.\\r\\n\\t\\t\\tif(curSum == total - curSum - nums[i]){\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//updating curSum\\r\\n\\t\\t\\tcurSum += nums[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-5\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-5\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"# Created by Qi Wang\\r\\nclass Solution:\\r\\n\\tdef pivotIndex(self, nums: List[int]) -> int:\\r\\n\\t\\ttotal = sum(nums);\\r\\n\\r\\n\\t\\tcurSum = 0;\\r\\n\\t\\tfor i in range(len(nums)):\\r\\n\\t\\t\\t# curSum is up to i not inclusive of i.\\r\\n\\t\\t\\tif curSum == total - curSum - nums[i]:\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t# updating curSum\\r\\n\\t\\t\\tcurSum += nums[i];\\r\\n\\t\\treturn -1;\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"lc-FindPivotIndex","source":"LeetCode","title":"Find Pivot Index","author":"Qi Wang"},"parent":{"name":"lc-FindPivotIndex","relativePath":"lc-FindPivotIndex.mdx"},"toc":{"cpp":[{"depth":2,"value":"Solution 1","slug":"solution-1"},{"depth":2,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Solution 2","slug":"solution-2"},{"depth":2,"value":"Implementation","slug":"implementation-3"}],"java":[{"depth":2,"value":"Solution 1","slug":"solution-1"},{"depth":2,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Solution 2","slug":"solution-2"},{"depth":2,"value":"Implementation","slug":"implementation-4"}],"py":[{"depth":2,"value":"Solution 1","slug":"solution-1"},{"depth":2,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Solution 2","slug":"solution-2"},{"depth":2,"value":"Implementation","slug":"implementation-5"}]}},"allProblemInfo":{"edges":[{"node":{"module":null}}]},"problemInfo":{"uniqueId":"lc-FindPivotIndex","url":"https://leetcode.com/problems/find-pivot-index"}},"pageContext":{"id":"lc-FindPivotIndex"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}