{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cf-array-destruction/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cf-1474C\", source = \"CF\", title = \"Array Destruction\", author = \"Kevin Sheng, Jesse Choe\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    strong: \"strong\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/86933\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Editorial\"\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^2\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^2\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"c-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#c-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"C++ Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"// iostream, vector, set, and algorithm\\r\\n#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAX_SIZE = 2000;\\r\\n\\r\\nint arr_size;\\r\\nint arr[MAX_SIZE];\\r\\n\\r\\nvector<pair<int, int>> pair_to_remove;\\r\\n\\r\\nbool works(int initial_sum) {\\r\\n\\tpair_to_remove.clear();\\r\\n\\t// This multiset stores the all of the undestroyed elements\\r\\n\\tmultiset<int> remaining;\\r\\n\\tfor (int i = 0; i < arr_size; i++) {\\r\\n\\t\\tremaining.insert(arr[i]);\\r\\n\\t}\\r\\n\\twhile (remaining.size()) {\\r\\n\\t\\t// The largest element that hasn't been removed\\r\\n\\t\\tint curr = *remaining.rbegin();\\r\\n\\t\\tremaining.erase(remaining.find(curr));\\r\\n\\t\\t// If this condition is true, then it is impossible to destruct the array with the given initial sum\\r\\n\\t\\tif (remaining.find(initial_sum - curr) == remaining.end()) {\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t}\\r\\n\\t\\tremaining.erase(remaining.find(initial_sum - curr));\\r\\n\\t\\tpair_to_remove.push_back({curr, initial_sum - curr});\\r\\n\\t\\tinitial_sum = curr;\\r\\n\\t}\\r\\n\\treturn remaining.empty();\\r\\n}\\r\\n\\r\\nvoid solve() {\\r\\n\\tcin >> arr_size;\\r\\n\\tarr_size *= 2;\\r\\n\\tfor(int i = 0; i < arr_size; i++){\\r\\n\\t\\tcin >> arr[i];\\r\\n\\t} \\r\\n\\tsort(arr, arr + arr_size);\\r\\n\\tfor (int i = 0; i < arr_size - 1; i++) {\\r\\n\\t\\t// The initial sum should be the largest element in the array and arr[i]\\r\\n\\t\\tint initial_sum = arr[i] + arr[arr_size - 1];\\r\\n\\t\\t/* \\r\\n\\t\\t * It suffices to check if the initial sum could destruct the array.\\r\\n\\t\\t * Then, we should print out the initial sum and each of pair of elements we destruct.\\r\\n\\t\\t */\\r\\n\\t\\tif (works(initial_sum)) {\\r\\n\\t\\t\\tcout << \\\"YES\\\" << endl;\\r\\n\\t\\t\\tcout << initial_sum << endl;\\r\\n\\t\\t\\tfor (pair<int, int> x: pair_to_remove) {\\r\\n\\t\\t\\t\\tcout << x.first << \\\" \\\" << x.second << endl;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << \\\"NO\\\" << endl;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tint t;\\r\\n\\tcin >> t;\\r\\n\\tfor (int i = 1; i <= t; i++) {\\r\\n\\t\\tsolve();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.BufferedReader;\\r\\nimport java.io.IOException;\\r\\nimport java.io.InputStreamReader;\\r\\nimport java.util.ArrayList;\\r\\nimport java.util.Arrays;\\r\\nimport java.util.TreeMap;\\r\\n\\r\\npublic final class DestroyArray {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint testNum = Integer.parseInt(read.readLine());\\r\\n\\t\\tfor (int t = 0; t < testNum; t++) {\\r\\n\\t\\t\\tint halfSize = Integer.parseInt(read.readLine());\\r\\n\\t\\t\\tTreeMap<Integer, Integer> nums = new TreeMap<>();\\r\\n\\t\\t\\tfor (int i : Arrays.stream(read.readLine().split(\\\" \\\")).mapToInt(Integer::parseInt).toArray()) {\\r\\n\\t\\t\\t\\tnums.put(i, nums.getOrDefault(i, 0) + 1);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tint validStart = -1;\\r\\n\\t\\t\\tArrayList<int[]> validMoves = null;\\r\\n\\t\\t\\tfor (int toRemove : nums.keySet()) {\\r\\n\\t\\t\\t\\tint start = nums.lastKey() + toRemove;\\r\\n\\t\\t\\t\\tint at = start;\\r\\n\\r\\n\\t\\t\\t\\tTreeMap<Integer, Integer> remaining = new TreeMap<>(nums);\\r\\n\\t\\t\\t\\tArrayList<int[]> moves = new ArrayList<>();\\r\\n\\t\\t\\t\\tfor (int i = 0; i < halfSize; i++) {\\r\\n\\t\\t\\t\\t\\tint largest = remaining.lastKey();\\r\\n\\t\\t\\t\\t\\tremaining.put(largest, remaining.get(largest) - 1);\\r\\n\\t\\t\\t\\t\\tif (remaining.get(largest) == 0) {\\r\\n\\t\\t\\t\\t\\t\\tremaining.remove(largest);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tint other = at - largest;\\r\\n\\t\\t\\t\\t\\tif (!remaining.containsKey(other)) {\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tat = largest;\\r\\n\\t\\t\\t\\t\\tremaining.put(other, remaining.get(other) - 1);\\r\\n\\t\\t\\t\\t\\tif (remaining.get(other) == 0) {\\r\\n\\t\\t\\t\\t\\t\\tremaining.remove(other);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tmoves.add(new int[] {largest, other});\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif (moves.size() == halfSize) {\\r\\n\\t\\t\\t\\t\\tvalidStart = start;\\r\\n\\t\\t\\t\\t\\tvalidMoves = moves;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (validMoves == null) {\\r\\n\\t\\t\\t\\tSystem.out.println(\\\"NO\\\");\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tSystem.out.printf(\\\"YES%n%d%n\\\", validStart);\\r\\n\\t\\t\\t\\tfor (int[] m : validMoves) {\\r\\n\\t\\t\\t\\t\\tSystem.out.printf(\\\"%d %d%n\\\", m[0], m[1]);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cf-1474C","source":"CF","title":"Array Destruction","author":"Kevin Sheng, Jesse Choe"},"parent":{"name":"cf-1474C","relativePath":"cf-1474C.mdx"},"toc":{"cpp":[{"depth":1,"value":"Solution","slug":"solution"},{"depth":2,"value":"C++ Implementation","slug":"c-implementation"}],"java":[{"depth":1,"value":"Solution","slug":"solution"},{"depth":2,"value":"Java Implementation","slug":"java-implementation"}],"py":[{"depth":1,"value":"Solution","slug":"solution"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-sorted-sets","title":"More Operations on Sorted Sets"}}}}]},"problemInfo":{"uniqueId":"cf-1474C","url":"https://codeforces.com/problemset/problem/1474/C"}},"pageContext":{"id":"cf-1474C"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}