{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cf-kayaking/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cf-863B\", source = \"CF\", title = \"Kayaking\", author = \"Danh Ta Chi Thanh, Brad Ma\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/54708\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>3</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">3</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tint N;\\r\\n\\tcin >> N;\\r\\n\\tN *= 2;\\r\\n\\r\\n\\tvector<int> people(N);\\r\\n\\tfor (int& p : people) {\\r\\n\\t\\tcin >> p;\\r\\n\\t}\\r\\n\\tsort(people.begin(), people.end());\\r\\n\\r\\n\\tint min_instability = INT32_MAX;\\r\\n\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\tfor (int j = i + 1; j < N; j++) {\\r\\n\\t\\t\\tvector<int> new_people;\\r\\n\\t\\t\\tfor (int p = 0; p < N; p++) {\\r\\n\\t\\t\\t\\tif (p != i && p != j) {\\r\\n\\t\\t\\t\\t\\tnew_people.push_back(people[k]);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tint total_instability = 0;\\r\\n\\t\\t\\tfor (int p = 0; p < N - 2; p += 2) {\\r\\n\\t\\t\\t\\ttotal_instability += new_people[p + 1] - new_people[p];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tmin_instability = min(min_instability, total_instability);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << min_instability << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Kayaking {\\r\\n\\tpublic static void main (String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tint N = io.nextInt() * 2;\\r\\n\\r\\n\\t\\tint[] people = new int[N];\\r\\n\\t\\tfor (int x = 0; x < people.length; x++) {\\r\\n\\t\\t\\tpeople[x] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\t\\tArrays.sort(people);\\r\\n\\r\\n\\t\\tint minInstability = Integer.MAX_VALUE;\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tfor (int j = i + 1; j < N; j++) {\\r\\n\\t\\t\\t\\tList<Integer> newPeople = new ArrayList<>();\\r\\n\\t\\t\\t\\tfor (int p = 0; p < N; p++) {\\r\\n\\t\\t\\t\\t\\tif ((p != i) && (p != j)) {\\r\\n\\t\\t\\t\\t\\t\\tnewPeople.add(people[p]);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tint totalInstability = 0;\\r\\n\\t\\t\\t\\tfor (int p = 0; p < (N - 2); p += 2) {\\r\\n\\t\\t\\t\\t\\ttotalInstability += newPeople.get(p + 1) - newPeople.get(p);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tminInstability = Math.min(minInstability, totalInstability);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(minInstability);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input()) * 2\\r\\npeople = sorted(int(i) for i in input().split())\\r\\nassert len(people) == n\\r\\n\\r\\nmin_instability = float('inf')\\r\\nfor i in range(n):\\r\\n\\tfor j in range(i + 1, n):\\r\\n\\t\\tnew_people = [people[p] for p in range(n) if p != i and p != j]\\r\\n\\t\\ttotal_instability = 0\\r\\n\\t\\tfor p in range(0, n - 2, 2):\\r\\n\\t\\t\\ttotal_instability += new_people[p + 1] - new_people[p]\\r\\n\\t\\tmin_instability = min(min_instability, total_instability)\\r\\n\\r\\nprint(min_instability)\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cf-863B","source":"CF","title":"Kayaking","author":"Danh Ta Chi Thanh, Brad Ma"},"parent":{"name":"cf-863B","relativePath":"cf-863B.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-sorting","title":"Introduction to Sorting"}}}}]},"problemInfo":{"uniqueId":"cf-863B","url":"https://codeforces.com/contest/863/problem/B"}},"pageContext":{"id":"cf-863B"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}