{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-620-milk-pails/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-620\", source = \"USACO Silver 2016 February\", title = \"Milk Pails\", author = \"Óscar Garries, Neo Wang, Nathan Gong\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_pails_silver_feb16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation-dfs\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-dfs\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation (DFS)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(XYK)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>X</mi><mi>Y</mi><mi>K</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(XYK)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">Y</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nbool vis[101][101][101];\\r\\nint x, y, k, m, sol;\\r\\n\\r\\nvoid ff (int curX, int curY, int curK) {\\r\\n\\tif (vis[curX][curY][curK] || curK > k) return;\\r\\n\\tvis[curX][curY][curK] = true;\\r\\n\\r\\n\\tsol = min (sol, abs(m - (curX + curY)));\\r\\n\\t//case 1\\r\\n\\tff (x, curY, curK + 1);\\r\\n\\tff (curX, y, curK + 1);\\r\\n\\t//case 2\\r\\n\\tff (0, curY, curK + 1);\\r\\n\\tff (curX, 0, curK + 1);\\r\\n\\t//case 3\\r\\n\\tint leftoverX = (curX + curY > y ? curX + curY - y : 0);\\r\\n\\tint leftoverY = (curY + curX > x ? curY + curX - x : 0);\\r\\n\\r\\n\\tff (leftoverX, min(y, curY + curX), curK + 1);\\r\\n\\tff (min(x, curX + curY), leftoverY, curK + 1);\\r\\n\\r\\n}\\r\\n\\r\\nint main () {\\r\\n\\tfreopen(\\\"pails.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"pails.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tcin >> x >> y >> k >> m;\\r\\n\\tsol = m;\\r\\n\\tff (0, 0, 0);\\r\\n\\tcout << sol << '\\\\n';\\r\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class pails {\\r\\n\\tstatic int x, y, k, m, sol;\\r\\n\\tstatic boolean[][][] vis;\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tScanner sc = new Scanner(new File(\\\"pails.in\\\"));\\r\\n\\t\\tPrintWriter out = new PrintWriter(\\\"pails.out\\\");\\r\\n\\r\\n\\t\\tx = sc.nextInt();\\r\\n\\t\\ty = sc.nextInt();\\r\\n\\t\\tk = sc.nextInt();\\r\\n\\t\\tm = sc.nextInt();\\r\\n\\t\\tsol = m;\\r\\n\\r\\n\\t\\tvis = new boolean[x+1][y+1][k+1];\\r\\n\\t\\tff(0, 0, 0);\\r\\n\\r\\n\\t\\tout.println(Math.abs(sol));\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic void ff(int curX, int curY, int curK) {\\r\\n\\t\\tif (vis[curX][curY][curK]) return;\\r\\n\\t\\tvis[curX][curY][curK] = true;\\r\\n\\r\\n\\t\\tif (curK == k) {\\r\\n\\t\\t\\tsol = Math.min(sol, Math.abs(m - (curX + curY)));\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//case 1\\r\\n\\t\\tff(x, curY, curK+1);\\r\\n\\t\\tff(curX, y, curK+1);\\r\\n\\t\\t//case 2\\r\\n\\t\\tff(0, curY, curK+1);\\r\\n\\t\\tff(curX, 0, curK+1);\\r\\n\\t\\t//case 3\\r\\n\\t\\tff(Math.min(curX+curY, x), Math.max((curX+curY)-x, 0), curK+1);\\r\\n\\t\\tff(Math.max((curX+curY)-y, 0), Math.min(curX+curY, y), curK+1);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"alternate-solution-bfs\",\n      children: [_jsx(_components.a, {\n        href: \"#alternate-solution-bfs\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Alternate Solution: BFS\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(XY)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(XY)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">Y</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can directly simulate all operations using BFS.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this problem, we care about states \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(i, j)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>i</mi><mo separator=\\\"true\\\">,</mo><mi>j</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(i, j)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" where pail \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"X\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\\\"application/x-tex\\\">X</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span></span></span></span>\"\n      }), \" has \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" and pail\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"Y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">Y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">Y</span></span></span></span>\"\n      }), \" has \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \" units of milk. We can perform a BFS starting from base state\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(0, 0)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mn>0</mn><mo separator=\\\"true\\\">,</mo><mn>0</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(0, 0)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">0</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" to compute \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dist}[i][j]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dist</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dist}[i][j]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dist</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \", the minimum number of steps to reach\\r\\neach state. Afterwards, compute the answer by iterating over all states where\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dist}[i][j] \\\\le K\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dist</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>≤</mo><mi>K</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dist}[i][j] \\\\le K</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dist</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span></span></span></span>\"\n      }), \" and finding the minimum \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"|i+j-M|\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∣</mi><mi>i</mi><mo>+</mo><mi>j</mi><mo>−</mo><mi>M</mi><mi mathvariant=\\\"normal\\\">∣</mi></mrow><annotation encoding=\\\"application/x-tex\\\">|i+j-M|</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">∣</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mord\\\">∣</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For every transition in the BFS, we simulate all possible actions.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Fill either pail completely to the top: set \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"X\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\\\"application/x-tex\\\">X</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span></span></span></span>\"\n        }), \" or \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"Y\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">Y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">Y</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Empty either pail: set \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" or \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"0\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pour the contents of one pail into another without overflowing or running out\\r\\nof milk.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To perform operation 3, we can find the amount poured to be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\min(i, Y-j)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>i</mi><mo separator=\\\"true\\\">,</mo><mi>Y</mi><mo>−</mo><mi>j</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\min(i, Y-j)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.22222em;\\\">Y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" or\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\min(j, X-i)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>j</mi><mo separator=\\\"true\\\">,</mo><mi>X</mi><mo>−</mo><mi>i</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\min(j, X-i)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">min</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" depending on which pail you pour from. Then add/subtract this\\r\\nquantity to each pail appropriately.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now iterate over all states \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(i, j)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>i</mi><mo separator=\\\"true\\\">,</mo><mi>j</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(i, j)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dist}[i][j] \\\\le K\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dist</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>≤</mo><mi>K</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dist}[i][j] \\\\le K</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dist</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span></span></span></span>\"\n      }), \" and\\r\\ncompute the minimum \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"|i+j-M|\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∣</mi><mi>i</mi><mo>+</mo><mi>j</mi><mo>−</mo><mi>M</mi><mi mathvariant=\\\"normal\\\">∣</mi></mrow><annotation encoding=\\\"application/x-tex\\\">|i+j-M|</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">∣</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mord\\\">∣</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\\r\\n#define FORE(i, a, b) for(int i = (a); i <= (b); i++)\\r\\n#define F0R(i, a) for(int i = 0; i < (a); i++)\\r\\n#define trav(a, x) for (auto& a : x)\\r\\n\\r\\nint X, Y, K, M;\\r\\n\\r\\nconst int MX = 101;\\r\\nconst int INF = 1e9 + 7;\\r\\n\\r\\nint dist[MX][MX];\\r\\n\\r\\nvoid setIn(string s) { freopen(s.c_str(),\\\"r\\\",stdin); }\\r\\nvoid setOut(string s) { freopen(s.c_str(),\\\"w\\\",stdout); }\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tsetIn(\\\"pails.in\\\");\\r\\n\\tsetOut(\\\"pails.out\\\");\\r\\n\\r\\n\\tcin >> X >> Y >> K >> M;\\r\\n\\r\\n\\tF0R(i, MX) F0R(j, MX) dist[i][j] = INF;\\r\\n\\r\\n\\tqueue<pair<int, int>> bfs;\\r\\n\\tbfs.push({0, 0});\\r\\n\\tdist[0][0] = 0;\\r\\n\\r\\n\\twhile(!bfs.empty()) {\\r\\n\\t\\tpair<int, int> top = bfs.front();\\r\\n\\t\\tbfs.pop();\\r\\n\\t\\tint ndist = dist[top.first][top.second]+1;\\r\\n\\r\\n\\t\\tint pourX = min(top.first, Y - top.second);\\r\\n\\t\\tint pourY = min(top.second, X - top.first);\\r\\n\\r\\n\\t\\tint nx[] = {top.first, 0, X, top.first, top.first - pourX, top.first + pourY }; // all possible pours\\r\\n\\t\\tint ny[] = {0, top.second, top.second, Y, top.second + pourX, top.second - pourY };\\r\\n\\r\\n\\t\\tF0R(i, 6) {\\r\\n\\t\\t\\tif(ndist > K || dist[nx[i]][ny[i]] != INF) continue;\\r\\n\\t\\t\\tdist[nx[i]][ny[i]] = ndist;\\r\\n\\t\\t\\tbfs.push({nx[i], ny[i]});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tint ret = INF;\\r\\n\\r\\n\\tF0R(i, MX) {\\r\\n\\t\\tF0R(j, MX) {\\r\\n\\t\\t\\tif(dist[i][j] <= K) ret = min(ret, abs(i+j-M));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tcout << ret << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class pails\\r\\n{\\r\\n\\tfinal static int MX = 101, INF = (int)1e9+7;\\r\\n\\tstatic int X, Y, K, M;\\r\\n\\tstatic int[][] dist;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException\\r\\n\\t{\\r\\n\\t\\tBufferedReader reader = new BufferedReader(new FileReader(\\\"pails.in\\\"));\\r\\n\\t\\tPrintWriter writer = new PrintWriter(\\\"pails.out\\\");\\r\\n\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(reader.readLine());\\r\\n\\t\\tX = Integer.parseInt(st.nextToken());\\r\\n\\t\\tY = Integer.parseInt(st.nextToken());\\r\\n\\t\\tK = Integer.parseInt(st.nextToken());\\r\\n\\t\\tM = Integer.parseInt(st.nextToken());\\r\\n\\r\\n\\t\\tdist = new int[MX][MX];\\r\\n\\t\\tfor(int i=0;i<=X;++i)\\r\\n\\t\\t\\tfor(int j=0;j<=Y;++j)\\r\\n\\t\\t\\t\\tdist[i][j]=INF;\\r\\n\\r\\n\\t\\tQueue<Pair<Integer, Integer> > bfs = new ArrayDeque<>();\\r\\n\\t\\tbfs.add(new Pair<Integer, Integer>(0, 0));\\r\\n\\t\\tdist[0][0]=0;\\r\\n\\r\\n\\t\\twhile(!bfs.isEmpty())\\r\\n\\t\\t{\\r\\n\\t\\t\\tPair<Integer, Integer> top = bfs.poll();\\r\\n\\t\\t\\tint ndist = dist[top.first][top.second]+1;\\r\\n\\r\\n\\t\\t\\tint pourX = Math.min(top.first, Y - top.second);\\r\\n\\t\\t\\tint pourY = Math.min(top.second, X - top.first);\\r\\n\\r\\n\\t\\t\\t//all 6 possible ways to pour\\r\\n\\t\\t\\tint nx[] = {top.first, 0, X, top.first, top.first-pourX, top.first+pourY};\\r\\n\\t\\t\\tint ny[] = {0, top.second, top.second, Y, top.second+pourX, top.second-pourY};\\r\\n\\r\\n\\t\\t\\tfor(int i=0;i<6;++i)\\r\\n\\t\\t\\t\\tif(ndist < dist[nx[i]][ny[i]])\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tdist[nx[i]][ny[i]] = ndist;\\r\\n\\t\\t\\t\\t\\tbfs.add(new Pair<Integer, Integer>(nx[i], ny[i]));\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint ret = INF;\\r\\n\\t\\tfor(int i=0;i<=X;++i)\\r\\n\\t\\t\\tfor(int j=0;j<=Y;++j)\\r\\n\\t\\t\\t\\tif(dist[i][j] <= K)\\r\\n\\t\\t\\t\\t\\tret = Math.min(ret, Math.abs(i+j-M));\\r\\n\\t\\twriter.println(ret);\\r\\n\\r\\n\\t\\treader.close();\\r\\n\\t\\twriter.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic class Pair<U, V>\\r\\n\\t{\\r\\n\\t\\tpublic U first;\\r\\n\\t\\tpublic V second;\\r\\n\\t\\tPair(U first, V second)\\r\\n\\t\\t{\\r\\n\\t\\t\\tthis.first = first;\\r\\n\\t\\t\\tthis.second = second;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-620","source":"USACO Silver 2016 February","title":"Milk Pails","author":"Óscar Garries, Neo Wang, Nathan Gong"},"parent":{"name":"usaco-620","relativePath":"usaco-620.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation (DFS)","slug":"implementation-dfs"},{"depth":2,"value":"Alternate Solution: BFS","slug":"alternate-solution-bfs"}],"java":[{"depth":2,"value":"Implementation (DFS)","slug":"implementation-dfs"},{"depth":2,"value":"Alternate Solution: BFS","slug":"alternate-solution-bfs"}],"py":[{"depth":2,"value":"Implementation (DFS)","slug":"implementation-dfs"},{"depth":2,"value":"Alternate Solution: BFS","slug":"alternate-solution-bfs"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"flood-fill","title":"Flood Fill"}}}},{"node":{"module":{"frontmatter":{"id":"bfs","title":"Breadth First Search (BFS)"}}}}]},"problemInfo":{"uniqueId":"usaco-620","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=620"}},"pageContext":{"id":"usaco-620"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}