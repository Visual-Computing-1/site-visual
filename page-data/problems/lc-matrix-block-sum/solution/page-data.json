{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/lc-matrix-block-sum/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"lc-MatrixBlockSum\", source = \"LeetCode\", title = \"Matrix Block Sum\", author = \"Jesse Choe\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(NM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(NM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">NM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"class Solution {\\r\\n\\tpublic:\\r\\n\\t\\tvector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int K) {\\r\\n\\t\\t\\tint n = mat.size(), m = mat[0].size();\\r\\n\\t\\t\\tvector<vector<int>> arr(n);\\r\\n\\t\\t\\tfor(int i=0; i<n; i++){\\r\\n\\t\\t\\t\\tfor(int j=0; j<m; j++){\\r\\n\\t\\t\\t\\t\\tarr[i].push_back(mat[i][j]);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvector<vector<int>> dp(n+1);\\r\\n\\t\\t\\tfor(int i=0; i<=n; i++){\\r\\n\\t\\t\\t\\tfor(int j=0; j<=m; j++){\\r\\n\\t\\t\\t\\t\\tdp[i].push_back(0);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tfor(int i=1; i<=n; i++){\\r\\n\\t\\t\\t\\tfor(int j=1; j<=m; j++){\\r\\n\\t\\t\\t\\t\\tdp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]+arr[i-1][j-1];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvector<vector<int>> answer;\\r\\n\\t\\t\\tfor(int i=1; i<=n; i++){\\r\\n\\t\\t\\t\\tvector<int> cur;\\r\\n\\t\\t\\t\\tfor(int j=1; j<=m; j++){\\r\\n\\t\\t\\t\\t\\tint a=max(1, i-K), b=max(1, j-K);\\r\\n\\t\\t\\t\\t\\tint c=min(n, i+K), d=min(m, j+K);\\r\\n\\t\\t\\t\\t\\tint blockSum=dp[c][d]-dp[c][b-1]-dp[a-1][d]+dp[a-1][b-1];\\r\\n\\t\\t\\t\\t\\tcur.push_back(blockSum);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tanswer.push_back(cur);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn answer;\\r\\n\\t\\t}\\r\\n};\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"lc-MatrixBlockSum","source":"LeetCode","title":"Matrix Block Sum","author":"Jesse Choe"},"parent":{"name":"lc-MatrixBlockSum","relativePath":"lc-MatrixBlockSum.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":null}}]},"problemInfo":{"uniqueId":"lc-MatrixBlockSum","url":"https://leetcode.com/problems/matrix-block-sum"}},"pageContext":{"id":"lc-MatrixBlockSum"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}