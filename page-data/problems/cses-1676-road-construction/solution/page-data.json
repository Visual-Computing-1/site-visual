{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1676-road-construction/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1676\", source = \"CSES\", title = \"Road Construction\", author = \"Oscar Garries, Sofia Yang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {MATHSPAN, LanguageSection, CPPSection, HeaderLink, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nstruct DSU {\\r\\n\\tvector<int> e;\\r\\n\\tvoid init (int n) { e = vector<int> (n, -1); }\\r\\n\\tint get (int x) { return (e[x] < 0 ? x : e[x] = get(e[x])); }\\r\\n\\tbool sameSet (int x, int y) { return get(x) == get(y); }\\r\\n\\tint size (int x) { return -e[get(x)]; }\\r\\n\\tbool unite (int x, int y) {\\r\\n\\t\\tx = get(x), y = get(y);\\r\\n\\t\\tif (x == y) return 0;\\r\\n\\t\\tif (e[x] > e[y]) swap(x, y);\\r\\n\\t\\te[x] += e[y];\\r\\n\\t\\te[y] = x;\\r\\n\\t\\treturn 1;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nint main () {\\r\\n\\tint n, m;\\r\\n\\tcin >> n >> m;\\r\\n\\tDSU dsu;\\r\\n\\tdsu.init(n);\\r\\n\\tint cc = n, large = 1;\\r\\n\\r\\n\\twhile (m--) {\\r\\n\\t\\tint x, y;\\r\\n\\t\\tcin >> x >> y;\\r\\n\\t\\tx--; y--;\\r\\n\\t\\tif (dsu.unite(x, y)) {\\r\\n\\t\\t\\tlarge = max(large, dsu.size(x));\\r\\n\\t\\t\\tcc--;\\r\\n\\t\\t}\\r\\n\\t\\tcout<< cc << ' ' << large << '\\\\n';\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation-1\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation-1\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.BufferedReader;\\r\\nimport java.io.IOException;\\r\\nimport java.io.InputStreamReader;\\r\\nimport java.io.PrintWriter;\\r\\nimport java.util.Arrays;\\r\\nimport java.util.StringTokenizer;\\r\\n\\r\\npublic class cses1676 {\\r\\n\\tpublic static int[] disjoint;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tPrintWriter pw = new PrintWriter(System.out);\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\r\\n\\t\\tint N = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint M = Integer.parseInt(st.nextToken());\\r\\n\\r\\n\\t\\t//Initialize.\\r\\n\\t\\tdisjoint = new int[N];\\r\\n\\t\\tArrays.fill(disjoint, -1);\\r\\n\\t\\t//The size of the largest connected component.\\r\\n\\t\\tint largestCC = 1;\\r\\n\\r\\n\\t\\t//Read in the connections.\\r\\n\\t\\twhile (M-- > 0) {\\r\\n\\t\\t\\tst = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tint a = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tint b = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tint newSize = union(a, b);\\r\\n\\t\\t\\tif (newSize != 0) {\\r\\n\\t\\t\\t\\tN--;\\r\\n\\t\\t\\t\\t//Check which connected component is larger.\\r\\n\\t\\t\\t\\tlargestCC = Integer.max(largestCC, newSize);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tpw.println(N + \\\" \\\" + largestCC);\\r\\n\\t\\t}\\r\\n\\t\\tpw.close();\\r\\n\\t}\\r\\n\\r\\n\\t/*Disjoint Set Union */\\r\\n\\r\\n\\t//Find the ancestor.\\r\\n\\tpublic static int find(int v) {\\r\\n\\t\\tif (disjoint[v] < 0) {\\r\\n\\t\\t\\treturn v;\\r\\n\\t\\t}\\r\\n\\t\\tdisjoint[v] = find(disjoint[v]);\\r\\n\\t\\treturn disjoint[v];\\r\\n\\t}\\r\\n\\r\\n\\tpublic static int union(int u, int v) {\\r\\n\\t\\t//Find the ancestor of both nodes\\r\\n\\t\\tu = find(u);\\r\\n\\t\\tv = find(v);\\r\\n\\r\\n\\t\\t//They are in the same connected component.\\r\\n\\t\\tif (u == v) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (disjoint[u] < disjoint[v]) {\\r\\n\\t\\t\\tint tempU = u;\\r\\n\\t\\t\\tu = v;\\r\\n\\t\\t\\tv = tempU;\\r\\n\\t\\t}\\r\\n\\t\\tdisjoint[v] += disjoint[u]; //Append u's children to v.\\r\\n\\t\\tdisjoint[u] = v; // Set v as u's parent.\\r\\n\\t\\treturn -disjoint[v];\\r\\n\\t}\\r\\n\\r\\n}\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1676","source":"CSES","title":"Road Construction","author":"Oscar Garries, Sofia Yang"},"parent":{"name":"cses-1676","relativePath":"cses-1676.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation-1"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dsu","title":"Disjoint Set Union"}}}}]},"problemInfo":{"uniqueId":"cses-1676","url":"https://cses.fi/problemset/task/1676"}},"pageContext":{"id":"cses-1676"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}