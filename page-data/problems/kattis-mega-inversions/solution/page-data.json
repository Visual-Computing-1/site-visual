{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/kattis-mega-inversions/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"kattis-megainversions\", source = \"Kattis\", title = \"Mega Inversions\", author = \"Benjamin Qi, Oscar Garries\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\")\n  }, _props.components), {MATHSPAN, HeaderLink, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"For each \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \", compute number of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" independently.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"with-indexed-sets\",\n      children: [_jsx(_components.a, {\n        href: \"#with-indexed-sets\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Indexed Sets\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n#include <ext/pb_ds/assoc_container.hpp>\\r\\n\\r\\nusing namespace std;\\r\\nusing namespace __gnu_pbds;\\r\\n\\r\\ntypedef long long ll;\\r\\ntypedef vector<int> vi;\\r\\ntypedef pair<int, int> pii;\\r\\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\\r\\n\\r\\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\\r\\n#define F0R(i, a) for (int i=0; i<(a); i++)\\r\\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\\r\\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\\r\\n\\r\\n#define sz(x) (int)(x).size()\\r\\n#define mp make_pair\\r\\n#define pb push_back\\r\\n#define f first\\r\\n#define s second\\r\\n#define lb lower_bound\\r\\n#define ub upper_bound\\r\\n\\r\\nconst int MOD = 1000000007;\\r\\n\\r\\nint n;\\r\\nll hi[100000], lo[100000];\\r\\nvi z;\\r\\nll ans = 0;\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);cin.tie(0);\\r\\n\\tcin >> n; z.resize(n);\\r\\n\\tF0R(i,n) cin >> z[i];\\r\\n\\r\\n\\tTree<pii> T1;\\r\\n\\tF0R(i,n) {\\r\\n\\t\\thi[i] = T1.size()-T1.order_of_key({z[i],MOD});\\r\\n\\t\\tT1.insert({z[i],i});\\r\\n\\t}\\r\\n\\tTree<pii> T2;\\r\\n\\tF0Rd(i,n) {\\r\\n\\t\\tlo[i] = T2.order_of_key({z[i],-MOD});\\r\\n\\t\\tT2.insert({z[i],i});\\r\\n\\t}\\r\\n\\tF0R(i,n) ans += lo[i]*hi[i];\\r\\n\\tcout << ans;\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"with-bits\",\n      children: [_jsx(_components.a, {\n        href: \"#with-bits\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With BITs\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nconst int MX = 2e5 + 5;\\r\\n\\r\\nll bit2[MX], bit1[MX];\\r\\nint n;\\r\\n\\r\\nvoid upd (int i, int val, ll ar[]) {\\r\\n\\tfor (; i <= n; i += i&(-i)) {\\r\\n\\t\\tar[i] += val;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nll query (int i, ll ar[]) {\\r\\n\\tll res = 0;\\r\\n\\tfor (; i; i -= i&(-i)) {\\r\\n\\t\\tres += ar[i];\\r\\n\\t}\\r\\n\\treturn res;\\r\\n}\\r\\n\\r\\nint main () {\\r\\n\\tcin >> n;\\r\\n\\tvector<int> ar(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> ar[i];\\r\\n\\t}\\r\\n\\r\\n\\tll sol = 0;\\r\\n\\tfor (int i = n - 1; i >= 0; i--) {\\r\\n\\t\\tsol += query(ar[i] - 1, bit2);\\r\\n\\t\\tll uno = query(ar[i] - 1, bit1);\\r\\n\\t\\tupd(ar[i], 1, bit1);\\r\\n\\t\\tupd(ar[i], uno, bit2);\\r\\n\\t}\\r\\n\\tcout << sol << '\\\\n';\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"kattis-megainversions","source":"Kattis","title":"Mega Inversions","author":"Benjamin Qi, Oscar Garries"},"parent":{"name":"kattis-megainversions","relativePath":"kattis-megainversions.mdx"},"toc":{"cpp":[{"depth":2,"value":"With Indexed Sets","slug":"with-indexed-sets"},{"depth":2,"value":"With BITs","slug":"with-bits"}],"java":[{"depth":2,"value":"With Indexed Sets","slug":"with-indexed-sets"},{"depth":2,"value":"With BITs","slug":"with-bits"}],"py":[{"depth":2,"value":"With Indexed Sets","slug":"with-indexed-sets"},{"depth":2,"value":"With BITs","slug":"with-bits"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"PURS","title":"Point Update Range Sum"}}}}]},"problemInfo":{"uniqueId":"kattis-megainversions","url":"https://open.kattis.com/problems/megainversions"}},"pageContext":{"id":"kattis-megainversions"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}