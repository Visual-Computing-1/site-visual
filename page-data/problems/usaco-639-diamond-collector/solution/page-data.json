{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-639-diamond-collector/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-639\", source = \"USACO Bronze 2016 Open\", title = \"Diamond Collector\", author = \"Danh Ta Chi Thanh, Ryan Chou\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_diamond_bronze_open16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (Java)\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\n#include <algorithm>\\r\\n#include <vector>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nint main(){\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\tfreopen(\\\"diamond.in\\\",\\\"r\\\",stdin);\\r\\n\\tfreopen(\\\"diamond.out\\\",\\\"w\\\",stdout);\\r\\n\\tint n,k;\\r\\n\\tcin >> n >> k;\\r\\n\\tvector<int> a;\\r\\n\\ta.resize(n);\\r\\n\\tfor (int i=0;i<n;++i) {\\r\\n\\t\\tcin >> a[i];\\r\\n\\t}\\r\\n\\tsort(a.begin(),a.end());\\r\\n\\tint ans=0;\\r\\n\\tfor (int i=0;i<n;++i) {\\r\\n\\t\\tint cnt=1;\\r\\n\\t\\tfor (int j=i+1;j<n;++j) {\\r\\n\\t\\t\\tif (a[j]-a[i]<=k) ++cnt;\\r\\n\\t\\t\\telse break;\\r\\n\\t\\t}\\r\\n\\t\\tans=max(cnt,ans);\\r\\n\\t}\\r\\n\\tcout << ans;\\r\\n\\treturn 0;\\r\\n}\\r\\n\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"fin = open('diamond.in', 'r')\\r\\n\\r\\nN, K = map(int, fin.readline().split())\\r\\n\\r\\ndiamonds = []\\r\\n\\r\\nfor _ in range(N):\\r\\n\\tdiamonds.append(int(fin.readline()))\\r\\n\\r\\nlargest = 0\\r\\ncurlargest = 0\\r\\nfor x in range(N):\\r\\n\\tfor y in range(N):\\r\\n\\t\\tif diamonds[y] >= diamonds[x] and diamonds[y] <= diamonds[x] + K:\\r\\n\\t\\t\\tcurlargest += 1\\r\\n\\tlargest = max(largest, curlargest)\\r\\n\\tcurlargest = 0\\r\\n\\r\\nprint(largest, file=open('diamond.out', 'w'))\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-639","source":"USACO Bronze 2016 Open","title":"Diamond Collector","author":"Danh Ta Chi Thanh, Ryan Chou"},"parent":{"name":"usaco-639","relativePath":"usaco-639.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-complete","title":"Basic Complete Search"}}}}]},"problemInfo":{"uniqueId":"usaco-639","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=639"}},"pageContext":{"id":"usaco-639"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}