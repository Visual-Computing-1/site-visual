{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1683-planets--kingdoms/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1683\", source = \"CSES\", title = \"Planets and Kingdoms\", author = \"Dong Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity\"\n      }), \": \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N+M)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N+M)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Just run\\r\\n\", _jsx(_components.a, {\n        href: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/graphs%20(12)/DFS/SCCK.h\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Kosaraju's\"\n      }), \"\\r\\nor\\r\\n\", _jsx(_components.a, {\n        href: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/graphs%20(12)/DFS/SCCT.h\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Tarjan's\"\n      }), \"\\r\\nSCC algorithm on the graph.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Then assign each component an \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"ID\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>I</mi><mi>D</mi></mrow><annotation encoding=\\\"application/x-tex\\\">ID</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">I</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">D</span></span></span></span>\"\n      }), \" (starting from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \").\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"with-kosarajus-scc\",\n      children: [_jsx(_components.a, {\n        href: \"#with-kosarajus-scc\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Kosaraju's SCC:\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\n/**\\r\\n * Description: Kosaraju's Algorithm, DFS twice to generate\\r\\n \\t* strongly connected components in topological order. $a,b$\\r\\n \\t* in same component if both $a\\\\to b$ and $b\\\\to a$ exist.\\r\\n * Time: O(N+M)\\r\\n * Source: Wikipedia\\r\\n * Verification: POI 8 peaceful commission\\r\\n*/\\r\\n\\r\\nstruct SCC {\\r\\n\\tint N; vector<vector<int>> adj, radj;\\r\\n\\tvector<int> todo, comp, comps; vector<bool> vis;\\r\\n\\tvoid init(int _N) { N = _N;\\r\\n\\t\\tadj.resize(N), radj.resize(N), comp = vector<int>(N,-1), vis.resize(N);\\r\\n\\t}\\r\\n\\tvoid ae(int x, int y) {\\r\\n\\t\\tadj[x].push_back(y), radj[y].push_back(x);\\r\\n\\t}\\r\\n\\tvoid dfs(int x) {\\r\\n\\t\\tvis[x] = 1; for(int y : adj[x]) if (!vis[y]) dfs(y);\\r\\n\\t\\ttodo.push_back(x); }\\r\\n\\tvoid dfs2(int x, int v) {\\r\\n\\t\\tcomp[x] = v;\\r\\n\\t\\tfor(int y : radj[x]) if (comp[y] == -1) dfs2(y,v);\\r\\n\\t}\\r\\n\\tvoid gen() { // fills allComp\\r\\n\\t\\tfor(int i=0; i<N; i++) if (!vis[i]) dfs(i);\\r\\n\\t\\treverse(begin(todo), end(todo));\\r\\n\\t\\tfor(int x : todo) if (comp[x] == -1) {\\r\\n\\t\\t\\tdfs2(x,x), comps.push_back(x);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\nint main() {\\r\\n\\r\\n\\tint n, m, a, b;\\r\\n\\tcin >> n >> m;\\r\\n\\r\\n\\tSCC graph;\\r\\n\\tgraph.init(n);\\r\\n\\twhile(m--) {\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\tgraph.ae(--a, --b);\\r\\n\\t}\\r\\n\\tgraph.gen();\\r\\n\\r\\n\\tint ID[200000]{};\\r\\n\\tint ids = 0;\\r\\n\\tfor(int i=0; i<n; i++) {\\r\\n\\t\\tif(!ID[graph.comp[i]]) {\\r\\n\\t\\t\\tID[graph.comp[i]] = ++ids;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ids << '\\\\n';\\r\\n\\tfor(int i=0; i<n; i++) {\\r\\n\\t\\tcout << ID[graph.comp[i]] << \\\" \\\\n\\\"[i==n-1];\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"with-tarjans-scc\",\n      children: [_jsx(_components.a, {\n        href: \"#with-tarjans-scc\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Tarjan's SCC\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\n/**\\r\\n * Description: Tarjan's, DFS once to generate\\r\\n \\t* strongly connected components in topological order. $a,b$\\r\\n \\t* in same component if both $a\\\\to b$ and $b\\\\to a$ exist.\\r\\n \\t* Uses less memory than Kosaraju b/c doesn't store reverse edges.\\r\\n * Time: O(N+M)\\r\\n * Source: KACTL\\r\\n \\t* https://github.com/kth-competitive-programming/kactl/blob/master/content/graph/SCC.h\\r\\n * Verification: https://cses.fi/problemset/task/1686/\\r\\n*/\\r\\n\\r\\nstruct SCC {\\r\\n\\tint N, ti = 0; vector<vector<int>> adj;\\r\\n\\tvector<int> disc, comp, st, comps;\\r\\n\\tvoid init(int _N) {\\r\\n\\t\\tN = _N;\\r\\n\\t\\tadj.resize(N), disc.resize(N), comp = vector<int>(N,-1);\\r\\n\\t}\\r\\n\\tvoid ae(int x, int y) {\\r\\n\\t\\tadj[x].push_back(y);\\r\\n\\t}\\r\\n\\tint dfs(int x) {\\r\\n\\t\\tint low = disc[x] = ++ti; st.push_back(x); // disc[y] != 0 -> in stack\\r\\n\\t\\tfor(int y : adj[x]) if (comp[y] == -1) low = min(low, disc[y]?:dfs(y));\\r\\n\\t\\tif (low == disc[x]) { // make new SCC, pop off stack until you find x\\r\\n\\t\\t\\tcomps.push_back(x); for (int y = -1; y != x;)\\r\\n\\t\\t\\t\\tcomp[y = st.back()] = x, st.pop_back();\\r\\n\\t\\t}\\r\\n\\t\\treturn low;\\r\\n\\t}\\r\\n\\tvoid gen() {\\r\\n\\t\\tfor(int i=0; i<N; i++) if (!disc[i]) dfs(i);\\r\\n\\t\\treverse(begin(comps), end(comps));\\r\\n\\t}\\r\\n};\\r\\n\\r\\nint main() {\\r\\n\\r\\n\\tint n, m, a, b;\\r\\n\\tcin >> n >> m;\\r\\n\\r\\n\\tSCC graph;\\r\\n\\tgraph.init(n);\\r\\n\\twhile(m--) {\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\tgraph.ae(--a, --b);\\r\\n\\t}\\r\\n\\tgraph.gen();\\r\\n\\r\\n\\tint ID[200000]{};\\r\\n\\tint ids = 0;\\r\\n\\tfor(int i=0; i<n; i++) {\\r\\n\\t\\tif(!ID[graph.comp[i]]) {\\r\\n\\t\\t\\tID[graph.comp[i]] = ++ids;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ids << '\\\\n';\\r\\n\\tfor(int i=0; i<n; i++) {\\r\\n\\t\\tcout << ID[graph.comp[i]] << \\\" \\\\n\\\"[i==n-1];\\r\\n\\t}\\r\\n\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1683","source":"CSES","title":"Planets and Kingdoms","author":"Dong Liu"},"parent":{"name":"cses-1683","relativePath":"cses-1683.mdx"},"toc":{"cpp":[{"depth":3,"value":"With Kosaraju&#39;s SCC:","slug":"with-kosarajus-scc"},{"depth":3,"value":"With Tarjan&#39;s SCC","slug":"with-tarjans-scc"}],"java":[{"depth":3,"value":"With Kosaraju&#39;s SCC:","slug":"with-kosarajus-scc"},{"depth":3,"value":"With Tarjan&#39;s SCC","slug":"with-tarjans-scc"}],"py":[{"depth":3,"value":"With Kosaraju&#39;s SCC:","slug":"with-kosarajus-scc"},{"depth":3,"value":"With Tarjan&#39;s SCC","slug":"with-tarjans-scc"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"SCC","title":"Strongly Connected Components"}}}}]},"problemInfo":{"uniqueId":"cses-1683","url":"https://cses.fi/problemset/task/1683"}},"pageContext":{"id":"cses-1683"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}