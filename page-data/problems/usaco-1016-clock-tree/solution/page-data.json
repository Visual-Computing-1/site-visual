{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-1016-clock-tree/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-1016\", source = \"USACO Silver 2020 February\", title = \"Clock Tree\", author = \"Melody Yu, Nathan Gong\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, Youtube, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_clocktree_silver_feb20.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can build a graph with the rooms as nodes and corridors as edges. Consider a simple case: there are 2 nodes in the graph and one edge.\\r\\nBessie can start from one of the rooms, go to its neighbor, increase the clock, go back, and increase the starting room's clock.\\r\\nDuring this process of moving back and forth, notice that the difference between two rooms' clock readings may only change by 1.\\r\\nIf the starting clock readings differ by one, Bessie can start from the bigger clock reading room and travel back and forth until both of the clocks point to 12.\\r\\nIf the starting clock readings differ by more than one, it is impossible for Bessie to make both clocks point to 12.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If there are more nodes, we can treat it similar to the two node case by considering the two groups in a bipartite partition. As all trees are bipartite graphs, this partition always exists.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The first time Bessie visits a neighbor node, the sum of clocks of the first group increases by 1.\\r\\nThen Bessie visits another neighbor node, the sum of clocks of the second group increases by 1.\\r\\nAs both sums increase by one, the difference between the sums does not change.\\r\\nThis process repeats until all clocks reach 12.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can check the initial sum difference between the two groups (mod 12) to figure out the final clock numbers, where we define \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{group0}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{group1}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n      }), \" as the sums of the clocks in each of the two groups of the bipartite partition.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group0}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n        }), \" is the same as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n        }), \" (mod 12), Bessie can start from any node.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group0}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n        }), \" is 1 smaller than \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n        }), \" (mod 12), Bessie can start from any node in \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n        }), \" is 1 smaller than \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group0}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n        }), \" (mod 12), Bessie can start from any node in \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group0}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group0}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group0</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group0}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group0</span></span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{group1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">group1</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{group1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">group1</span></span></span></span></span>\"\n        }), \" differ by at least 2 (mod 12), there's no way to get all clocks to point to 12.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"vMA54A2AT0I\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint N;\\r\\nvector<int> edges[100000];\\r\\nint A[100000];\\r\\nint sum0, sum1, nodes0, nodes1;\\r\\n\\r\\nvoid dfs(int i, int color, int par) {\\r\\n\\t// update color/sum\\r\\n\\tif (color == 0) {\\r\\n\\t\\tnodes0++;\\r\\n\\t\\tsum0 += A[i];\\r\\n\\t}\\r\\n\\telse {\\r\\n\\t\\tnodes1++;\\r\\n\\t\\tsum1 += A[i];\\r\\n\\t}\\r\\n\\t\\r\\n\\tfor (int j : edges[i]) {\\t\\t\\t\\t   \\r\\n\\t\\tif (j != par) {\\r\\n\\t\\t\\t// swap colors for the child\\r\\n\\t\\t\\tdfs(j, 1 - color, i);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"clocktree.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"clocktree.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tcin >> N;\\r\\n\\r\\n\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\tcin >> A[i];\\r\\n\\t}\\r\\n\\r\\n\\tfor (int i = 1; i < N; i++) {\\t\\r\\n\\t\\tint a, b;\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\ta--, b--;\\r\\n\\t\\tedges[a].push_back(b);\\r\\n\\t\\tedges[b].push_back(a);\\r\\n\\t}\\r\\n\\t\\r\\n\\tdfs(0, 0, -1);\\r\\n\\r\\n\\t// same mod means you can start anywhere\\r\\n\\tif ((sum0 % 12) == (sum1 % 12)) {\\r\\n\\t\\tcout << N;\\r\\n\\t}\\r\\n\\t// if group0 is 1 smaller than group1, we must start from group1\\r\\n\\telse if ((sum0 + 1) % 12 == (sum1 % 12)) {\\r\\n\\t\\tcout << nodes1;\\r\\n\\t}\\r\\n\\t// if group1 is 1 smaller than group0, we must start from group0\\r\\n\\telse if ((sum0 % 12) == ((sum1 + 1) % 12)) {\\r\\n\\t\\tcout << nodes0;\\r\\n\\t}\\r\\n\\t// no way to get all clocks pointing to 12\\r\\n\\telse {\\r\\n\\t\\tcout << 0;\\r\\n\\t}\\r\\n\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public class ClockTree {\\r\\n\\tstatic int[] clocks;\\r\\n\\tstatic List<List<Integer>> adj;\\r\\n\\tstatic int sum0 = 0, sum1 = 0, nodes0 = 0, nodes1 = 0;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"clocktree\\\");\\r\\n\\t\\t\\r\\n\\t\\tint n = io.nextInt();\\r\\n\\t\\tclocks = new int[n];\\r\\n\\t\\tadj = new ArrayList<>();\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tclocks[i] = io.nextInt();\\r\\n\\t\\t\\tadj.add(new ArrayList<>());\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\t\\tint a = io.nextInt() - 1;\\r\\n\\t\\t\\tint b = io.nextInt() - 1;\\r\\n\\t\\t\\tadj.get(a).add(b);\\r\\n\\t\\t\\tadj.get(b).add(a);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdfs(0, 0, -1);\\r\\n\\r\\n\\t\\t// same mod means you can start anywhere\\r\\n\\t\\tif ((sum0 % 12) == (sum1 % 12)) {\\r\\n\\t\\t\\tio.println(n);\\r\\n\\t\\t}\\r\\n\\t\\t// if group0 is 1 smaller than group1, we must start from group1\\r\\n\\t\\telse if ((sum0 + 1) % 12 == (sum1 % 12)) {\\r\\n\\t\\t\\tio.println(nodes1);\\r\\n\\t\\t}\\r\\n\\t\\t// if group1 is 1 smaller than group0, we must start from group0\\r\\n\\t\\telse if ((sum0 % 12) == ((sum1 + 1) % 12)) {\\r\\n\\t\\t\\tio.println(nodes0);\\r\\n\\t\\t}\\r\\n\\t\\t// no way to get all clocks pointing to 12\\r\\n\\t\\telse {\\r\\n\\t\\t\\tio.println(0);\\r\\n\\t\\t}\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic void dfs(int i, int color, int par) {\\r\\n\\t\\t// update color/sum\\r\\n\\t\\tif (color == 0) {\\r\\n\\t\\t\\tnodes0++;\\r\\n\\t\\t\\tsum0 += clocks[i];\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tnodes1++;\\r\\n\\t\\t\\tsum1 += clocks[i];\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\tfor (int j : adj.get(i)) {\\t\\t\\t\\t   \\r\\n\\t\\t\\tif (j != par) {\\r\\n\\t\\t\\t\\t// swap colors for the child\\r\\n\\t\\t\\t\\tdfs(j, 1 - color, i);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-1016","source":"USACO Silver 2020 February","title":"Clock Tree","author":"Melody Yu, Nathan Gong"},"parent":{"name":"usaco-1016","relativePath":"usaco-1016.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-tree","title":"Introduction to Tree Algorithms"}}}}]},"problemInfo":{"uniqueId":"usaco-1016","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1016"}},"pageContext":{"id":"usaco-1016"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}