{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-992-wormhole-sort/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-992\", source = \"USACO Silver 2020 January\", title = \"Wormhole Sort\", author = \"Óscar Garries, Neo Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"solution-1---dfs\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-1---dfs\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 1 - DFS\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_wormsort_silver_jan20.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconst int MX = 1e5;\\r\\n\\r\\nvector<pair<int, int>> g[MX];\\r\\nvector<int> ar(MX), component(MX);\\r\\nint n, m;\\r\\n\\r\\nvoid dfs (int v, int label, int minW) {\\r\\n\\tcomponent[v] = label;\\r\\n\\r\\n\\tfor (auto x: g[v]) {\\r\\n\\t\\tif (x.second < minW || component[x.first] != -1) continue;\\r\\n\\t\\tdfs (x.first, label, minW);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nbool ok (int minW) {\\r\\n\\tfill (component.begin(), component.end(), -1);\\r\\n\\tint label = -1;\\r\\n\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tif (component[i] != -1) continue;\\r\\n\\t\\tdfs(i, ++label, minW);\\r\\n\\t}\\r\\n\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tif (component[i] != component[ar[i]]) return false;\\r\\n\\t}\\r\\n\\r\\n\\treturn true;\\r\\n}\\r\\n\\r\\nint main () {\\r\\n\\tfreopen(\\\"wormsort.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"wormsort.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tcin >> n >> m;\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> ar[i];\\r\\n\\t\\tar[i]--;\\r\\n\\t}\\r\\n\\r\\n\\tfor (int i = 0; i < m; i++) {\\r\\n\\t\\tint a, b, w;\\r\\n\\t\\tcin >> a >> b >> w;\\r\\n\\t\\ta--; b--;\\r\\n\\t\\tg[a].push_back(make_pair(b, w));\\r\\n\\t\\tg[b].push_back(make_pair(a, w));\\r\\n\\t}\\r\\n\\r\\n\\tint sol = -1;\\r\\n\\tint lo = 1, hi = 1e9 + 1;\\r\\n\\tint top = hi;\\r\\n\\twhile (lo <= hi) {\\r\\n\\t\\tint mid = lo + (hi - lo)/2;\\r\\n\\r\\n\\t\\tif (ok(mid)) {\\r\\n\\t\\t\\tsol = max (sol, mid);\\r\\n\\t\\t\\tlo = mid + 1;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\thi = mid - 1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tcout << (sol == top ? -1 : sol) << '\\\\n';\\r\\n}\\r\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution-2---dsuuf--binary-search\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-2---dsuuf--binary-search\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 2 - DSU/UF + Binary Search\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Like the DFS solution, we binary search on the answer \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \". \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" is valid if all\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">p_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" are in the same component as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \", which we can query in\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\alpha(N))\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>α</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\alpha(N))</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.0037em;\\\">α</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">))</span></span></span></span>\"\n      }), \" using a Union Find/Disjoint Set data structure.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\n#define vt vector\\r\\n\\r\\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\\r\\n#define FORE(i, a, b) for(int i = (a); i <= (b); i++)\\r\\n#define F0R(i, a) for(int i = 0; i < (a); i++)\\r\\n#define trav(a, x) for (auto& a : x)\\r\\n\\r\\nvoid setIn(string s) { freopen(s.c_str(),\\\"r\\\",stdin); }\\r\\nvoid setOut(string s) { freopen(s.c_str(),\\\"w\\\",stdout); }\\r\\nvoid setIO(string s = \\\"\\\") {\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\tif (!s.empty()) { setIn(s+\\\".in\\\"), setOut(s+\\\".out\\\"); }\\r\\n}\\r\\n\\r\\nstruct UF {\\r\\n\\tvt<int> e;\\r\\n\\tUF(int n) : e(n, -1) {}\\r\\n\\tbool sameSet(int a, int b) { return find(a) == find(b); }\\r\\n\\tint size(int x) { return -e[find(x)]; }\\r\\n\\tint find(int x) { return e[x] < 0 ? x : e[x] = find(e[x]); }\\r\\n\\tbool join(int a, int b) {\\r\\n\\t\\ta = find(a), b = find(b);\\r\\n\\t\\tif (a == b) return false;\\r\\n\\t\\tif (e[a] > e[b]) swap(a, b);\\r\\n\\t\\te[a] += e[b]; e[b] = a;\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nconst int INF = 1e9+7;\\r\\n\\r\\nint N, M;\\r\\n\\r\\nstruct Edge {\\r\\n\\tint a, b, w;\\r\\n};\\r\\n\\r\\nint cows[(int)1e5+1];\\r\\nEdge edges[(int)1e5+1];\\r\\n\\r\\nbool check(int val) {\\r\\n\\tUF uf(N);\\r\\n\\tF0R(i, M) {\\r\\n\\t\\tif(edges[i].w >= val) uf.join(edges[i].a, edges[i].b);\\r\\n\\t}\\r\\n\\r\\n\\tFOR(i, 1, N+1) {\\r\\n\\t\\tif(!uf.sameSet(cows[i], i)) return false; //checks whether cows[i] can be sorted\\r\\n\\t}\\r\\n\\r\\n\\treturn true;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tsetIO(\\\"wormsort\\\"); cin >> N >> M;\\r\\n\\r\\n\\tFOR(i, 1, N+1) {\\r\\n\\t\\tcin >> cows[i];\\r\\n\\t}\\r\\n\\r\\n\\tF0R(i, M) {\\r\\n\\t\\tint a, b, c;\\r\\n\\t\\tcin >> a >> b >> c;\\r\\n\\t\\tedges[i] = {a, b, c};\\r\\n\\t}\\r\\n\\r\\n\\tint l = 0, r = INF;\\r\\n\\tint ret = -1;\\r\\n\\r\\n\\twhile(l <= r) {\\r\\n\\t\\tint mid = (l + r)/2;\\r\\n\\t\\tif(check(mid)) {\\r\\n\\t\\t\\tret = max(ret, mid);\\r\\n\\t\\t\\tl = mid+1;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tr = mid-1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif(ret == INF) cout << -1;\\r\\n\\telse cout << ret;\\r\\n}\\r\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution-3---dsuuf\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-3---dsuuf\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 3 - DSU/UF\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N + M\\\\log M)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>M</mi><mi>log</mi><mo>⁡</mo><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N + M\\\\log M)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can alternatively search for our weight by adding the weights greatest\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\rightarrow\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\rightarrow</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.3669em;\\\"></span><span class=\\\"mrel\\\">→</span></span></span></span>\"\n      }), \" least until all \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">p_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" are in the same component as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Our resulting time complexity is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" after an initial sorting of\\r\\nthe weights.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-2\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\n#define vt vector\\r\\n\\r\\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\\r\\n#define FORE(i, a, b) for(int i = (a); i <= (b); i++)\\r\\n#define F0R(i, a) for(int i = 0; i < (a); i++)\\r\\n#define trav(a, x) for (auto& a : x)\\r\\n\\r\\nvoid setIn(string s) { freopen(s.c_str(),\\\"r\\\",stdin); }\\r\\nvoid setOut(string s) { freopen(s.c_str(),\\\"w\\\",stdout); }\\r\\nvoid setIO(string s = \\\"\\\") {\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\tif (!s.empty()) { setIn(s+\\\".in\\\"), setOut(s+\\\".out\\\"); }\\r\\n}\\r\\n\\r\\nstruct UF {\\r\\n\\tvt<int> e;\\r\\n\\tUF(int n) : e(n, -1) {}\\r\\n\\tbool sameSet(int a, int b) { return find(a) == find(b); }\\r\\n\\tint size(int x) { return -e[find(x)]; }\\r\\n\\tint find(int x) { return e[x] < 0 ? x : e[x] = find(e[x]); }\\r\\n\\tbool join(int a, int b) {\\r\\n\\t\\ta = find(a), b = find(b);\\r\\n\\t\\tif (a == b) return false;\\r\\n\\t\\tif (e[a] > e[b]) swap(a, b);\\r\\n\\t\\te[a] += e[b]; e[b] = a;\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nstruct Edge {\\r\\n\\tint a, b, w;\\r\\n};\\r\\n\\r\\nbool comp(Edge a, Edge b) {\\r\\n\\treturn a.w > b.w;\\r\\n}\\r\\n\\r\\nint N, M;\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tsetIO(\\\"wormsort\\\");\\r\\n\\tcin >> N >> M;\\r\\n\\tvt<int> p(N+1);\\r\\n\\tFOR(i, 1, N+1) {\\r\\n\\t\\tint a; cin >> a;\\r\\n\\t\\tp[i] = a;\\r\\n\\t}\\r\\n\\r\\n\\tint ret = -1;\\r\\n\\r\\n\\tvt<Edge> w(M);\\r\\n\\r\\n\\tF0R(i, M) {\\r\\n\\t\\tint a, b, c; cin >> a >> b >> c;\\r\\n\\t\\tw[i] = {a, b, c};\\r\\n\\t}\\r\\n\\r\\n\\tsort(w.begin(), w.end(), comp);\\r\\n\\r\\n\\tUF uf(N);\\r\\n\\tFOR(i, 1, N+1) {\\r\\n\\t\\twhile(!uf.sameSet(i, p[i])) {\\r\\n\\t\\t\\tret++;\\r\\n\\t\\t\\tuf.join(w[ret].a, w[ret].b);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif(ret == -1) cout << -1;\\r\\n\\telse cout << w[ret].w;\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-992","source":"USACO Silver 2020 January","title":"Wormhole Sort","author":"Óscar Garries, Neo Wang"},"parent":{"name":"usaco-992","relativePath":"usaco-992.mdx"},"toc":{"cpp":[{"depth":2,"value":"Solution 1 - DFS","slug":"solution-1---dfs"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Solution 2 - DSU/UF + Binary Search","slug":"solution-2---dsuuf--binary-search"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Solution 3 - DSU/UF","slug":"solution-3---dsuuf"},{"depth":3,"value":"Implementation","slug":"implementation-2"}],"java":[{"depth":2,"value":"Solution 1 - DFS","slug":"solution-1---dfs"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Solution 2 - DSU/UF + Binary Search","slug":"solution-2---dsuuf--binary-search"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Solution 3 - DSU/UF","slug":"solution-3---dsuuf"},{"depth":3,"value":"Implementation","slug":"implementation-2"}],"py":[{"depth":2,"value":"Solution 1 - DFS","slug":"solution-1---dfs"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Solution 2 - DSU/UF + Binary Search","slug":"solution-2---dsuuf--binary-search"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Solution 3 - DSU/UF","slug":"solution-3---dsuuf"},{"depth":3,"value":"Implementation","slug":"implementation-2"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dfs","title":"Depth First Search (DFS)"}}}},{"node":{"module":{"frontmatter":{"id":"sorting-custom","title":"Custom Comparators and Coordinate Compression"}}}},{"node":{"module":{"frontmatter":{"id":"dsu","title":"Disjoint Set Union"}}}}]},"problemInfo":{"uniqueId":"usaco-992","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=992"}},"pageContext":{"id":"usaco-992"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}