{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-245-tractor/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-245\", source = \"USACO Silver 2013 February\", title = \"Tractor\", author = \"Maggie Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_tractor.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can create a graph where the cells of the field are vertices and two adjacent\\r\\nfields are connected by an edge. To find the connected component with at least\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\lceil\\\\frac{N^2}{2}\\\\rceil\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">⌈</mo><mfrac><msup><mi>N</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy=\\\"false\\\">⌉</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lceil\\\\frac{N^2}{2}\\\\rceil</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.3629em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">⌈</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.0179em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌉</span></span></span></span>\"\n      }), \" vertices, we can use DSU to keep track of the\\r\\ncomponents and add edges in increasing order of cost until we have a connected\\r\\ncomponent that covers at least half of the vertices.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First, iterate over every cell and add the edges between itself and its\\r\\nneighbors to the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{edges}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">edges</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{edges}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">edges</span></span></span></span></span>\"\n      }), \" vector. Only add an edge if the current cell\\r\\nhas a greater height than its neighbor to prevent adding an edge twice. Then,\\r\\nsort the edges in increasing order of cost. For each edge, unite the sets of the\\r\\ntwo vertices and stop when the connected component's size is at least\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\lceil\\\\frac{N^2}{2}\\\\rceil\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">⌈</mo><mfrac><msup><mi>N</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy=\\\"false\\\">⌉</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lceil\\\\frac{N^2}{2}\\\\rceil</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.3629em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">⌈</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.0179em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌉</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^2 \\\\cdot \\\\alpha(N))\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo>⋅</mo><mi>α</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^2 \\\\cdot \\\\alpha(N))</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.0037em;\\\">α</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">))</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\n#include <algorithm>\\r\\n#include <vector>\\r\\nusing namespace std;\\r\\nvoid init();\\r\\nbool unite(int a, int b);\\r\\n\\r\\nstruct Cell\\r\\n{\\r\\n\\tint i, j;\\r\\n};\\r\\nstruct Edge\\r\\n{\\r\\n\\tCell from, to;\\r\\n\\tint cost;\\r\\n};\\r\\n\\r\\nconst int MAX_N = 500;\\r\\nint parent[MAX_N * MAX_N];\\r\\nint comp_size[MAX_N * MAX_N]; // size of each component\\r\\nint n;\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tfreopen(\\\"tractor.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"tractor.out\\\", \\\"w\\\", stdout);\\r\\n\\tcin >> n;\\r\\n\\tint field[MAX_N][MAX_N];\\r\\n\\tfor (int i = 0; i < n; i++)\\r\\n\\t{\\r\\n\\t\\tfor (int j = 0; j < n; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tcin >> field[i][j];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tinit();\\r\\n\\tvector<Edge> edges;\\r\\n\\tint di[]{-1, 0, 1, 0}, dj[]{0, 1, 0, -1};\\r\\n\\tfor (int row = 0; row < n; row++)\\r\\n\\t{\\r\\n\\t\\tfor (int col = 0; col < n; col++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tfor (int d = 0; d < 4; d++)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tCell to = {row + di[d], col + dj[d]};\\r\\n\\t\\t\\t\\t// make sure the next cell is in bounds\\r\\n\\t\\t\\t\\t// and has a lower height to prevent adding an edge twice\\r\\n\\t\\t\\t\\tif (to.i >= 0 && to.i < n && to.j >= 0 && to.j < n\\r\\n\\t\\t\\t\\t\\t\\t&& field[row][col] >= field[to.i][to.j])\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tedges.push_back({\\r\\n\\t\\t\\t\\t\\t\\t{row, col}, to, field[row][col] - field[to.i][to.j]\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t// sort edges in increasing order of cost\\r\\n\\tsort(edges.begin(), edges.end(), [](Edge a, Edge b){\\r\\n\\t\\treturn a.cost < b.cost;\\r\\n\\t});\\r\\n\\r\\n\\tfor (Edge edge : edges)\\r\\n\\t{\\r\\n\\t\\t// if the connected component covers at least half the cells\\r\\n\\t\\tif (unite(edge.from.i * n + edge.from.j, edge.to.i * n + edge.to.j))\\r\\n\\t\\t{\\r\\n\\t\\t\\tcout << edge.cost << endl;\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvoid init()\\r\\n{\\r\\n\\tfor (int i = 0; i < n * n; i++)\\r\\n\\t{\\r\\n\\t\\tparent[i] = i;\\r\\n\\t\\tcomp_size[i] = 1;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint find(int a)\\r\\n{\\r\\n\\tif (a == parent[a])\\r\\n\\t{\\r\\n\\t\\treturn a;\\r\\n\\t}\\r\\n\\treturn parent[a] = find(parent[a]);\\r\\n}\\r\\n\\r\\nbool unite(int a, int b)\\r\\n{\\r\\n\\tint root_a = find(a), root_b = find(b);\\r\\n\\tif (root_a == root_b)\\r\\n\\t{\\r\\n\\t\\treturn false;\\r\\n\\t}\\r\\n\\tif (comp_size[root_a] > comp_size[root_b])\\r\\n\\t{\\r\\n\\t\\tswap(root_a, root_b);\\r\\n\\t}\\r\\n\\tparent[root_a] = root_b;\\r\\n\\tcomp_size[root_b] += comp_size[root_a];\\r\\n\\treturn comp_size[root_b] >= (n * n + 1) / 2;\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-245","source":"USACO Silver 2013 February","title":"Tractor","author":"Maggie Liu"},"parent":{"name":"usaco-245","relativePath":"usaco-245.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dsu","title":"Disjoint Set Union"}}}}]},"problemInfo":{"uniqueId":"usaco-245","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=245"}},"pageContext":{"id":"usaco-245"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}