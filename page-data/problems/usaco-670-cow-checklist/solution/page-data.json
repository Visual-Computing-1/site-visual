{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-670-cow-checklist/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-670\", source = \"USACO Gold 2016 December\", title = \"Cow Checklist\", author = \"Maggie Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_checklist_gold_dec16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(H \\\\cdot G)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>H</mi><mo>⋅</mo><mi>G</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(H \\\\cdot G)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.08125em;\\\">H</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">G</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\nusing namespace std;\\r\\n\\r\\nint energy(pair<int, int> a, pair<int, int> b)\\r\\n{\\r\\n\\tint dx = a.first - b.first, dy = a.second - b.second;\\r\\n\\treturn dx * dx + dy * dy;\\r\\n}\\r\\n\\r\\nint main()\\r\\n{\\r\\n\\tfreopen(\\\"checklist.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"checklist.out\\\", \\\"w\\\", stdout);\\r\\n\\tint h, g;\\r\\n\\tcin >> h >> g;\\r\\n\\tpair<int, int> hcows[1000], gcows[1000];\\r\\n\\tfor (int i = 0; i < h; i++)\\r\\n\\t{\\r\\n\\t\\tcin >> hcows[i].first >> hcows[i].second;\\r\\n\\t}\\r\\n\\tfor (int i = 0; i < g; i++)\\r\\n\\t{\\r\\n\\t\\tcin >> gcows[i].first >> gcows[i].second;\\r\\n\\t}\\r\\n\\t//dp[0][i][j] is min cost to visit i holsteins and j guernseys ending with holstein\\r\\n\\t//dp[1][i][j] is min cost to visit i holsteins and j guernseys ending with guernsey\\r\\n\\tlong long dp[2][1001][1001];\\r\\n\\tfor (int i = 0; i <= h; i++)\\r\\n\\t{\\r\\n\\t\\tfor (int j = 0; j <= g; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdp[0][i][j] = 1e18;\\r\\n\\t\\t\\tdp[1][i][j] = 1e18;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t//farmer john must start with the first holstein, so the cost is 0\\r\\n\\tdp[0][1][0] = 0;\\r\\n\\tint cost;\\r\\n\\tfor (int i = 0; i <= h; i++)\\r\\n\\t{\\r\\n\\t\\tfor (int j = 0; j <= g; j++)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (i > 0 && j > 0)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t//go from gcows[j - 1] to hcows[i - 1]\\r\\n\\t\\t\\t\\tcost = energy(hcows[i - 1], gcows[j - 1]);\\r\\n\\t\\t\\t\\tdp[0][i][j] = min(dp[0][i][j], dp[1][i - 1][j] + cost);\\r\\n\\t\\t\\t\\t//go from hcows[i - 1] to gcows[j - 1]\\r\\n\\t\\t\\t\\tcost = energy(gcows[j - 1], hcows[i - 1]);\\r\\n\\t\\t\\t\\tdp[1][i][j] = min(dp[1][i][j], dp[0][i][j - 1] + cost);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (i > 1)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t//go from hcows[i - 2] to hcows[i - 1]\\r\\n\\t\\t\\t\\tcost = energy(hcows[i - 1], hcows[i - 2]);\\r\\n\\t\\t\\t\\tdp[0][i][j] = min(dp[0][i][j], dp[0][i - 1][j] + cost);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (j > 1)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t//go from gcows[j - 2] to gcows[j - 1]\\r\\n\\t\\t\\t\\tcost =  energy(gcows[j - 1], gcows[j - 2]);\\r\\n\\t\\t\\t\\tdp[1][i][j] = min(dp[1][i][j], dp[1][i][j - 1] + cost);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << dp[0][h][g] << endl;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-670","source":"USACO Gold 2016 December","title":"Cow Checklist","author":"Maggie Liu"},"parent":{"name":"usaco-670","relativePath":"usaco-670.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"paths-grids","title":"Paths on Grids"}}}}]},"problemInfo":{"uniqueId":"usaco-670","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=670"}},"pageContext":{"id":"usaco-670"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}