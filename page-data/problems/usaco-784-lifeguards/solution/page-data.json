{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-784-lifeguards/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-784\", source = \"USACO Bronze 2018 January\", title = \"Lifeguards\", author = \"Danh Ta Chi Thanh, Ananth Kashyap\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_lifeguards_bronze_jan18.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NT)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>T</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NT)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">NT</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"T\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\\\"application/x-tex\\\">T</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span></span></span></span>\"\n      }), \" is the maximum time\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <cstdio>\\r\\n#include <algorithm>\\r\\n#include <vector>\\r\\n#include <utility>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\n#define start first\\r\\n#define end second\\r\\n\\r\\nint n,a,b,maxCover,covered;\\r\\nvector<pair<int,int>> shift;\\r\\nint numCover[1000];\\r\\n\\r\\nint main(){\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\tfreopen(\\\"lifeguards.in\\\",\\\"r\\\",stdin);\\r\\n\\tfreopen(\\\"lifeguards.out\\\",\\\"w\\\",stdout);\\r\\n\\tcin >> n; shift.resize(n);\\r\\n\\tfor (int i=0;i<n;++i) {\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\tshift[i]=make_pair(a,b);\\r\\n\\t\\tfor (int j=a;j<b;++j) {\\r\\n\\t\\t\\t++numCover[j];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfor (pair<int,int> lifeguard : shift) {\\r\\n\\t\\tfor (int t=lifeguard.start;t<lifeguard.end;++t) {\\r\\n\\t\\t\\t--numCover[t];\\r\\n\\t\\t}\\r\\n\\t\\tcovered=0;\\r\\n\\t\\tfor (int t=0;t<1000;++t) {\\r\\n\\t\\t\\tif (numCover[t]>0) {\\r\\n\\t\\t\\t\\tcovered++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfor (int t=lifeguard.start;t<lifeguard.end;++t) {\\r\\n\\t\\t\\t++numCover[t];\\r\\n\\t\\t}\\r\\n\\t\\tmaxCover=max(covered,maxCover);\\r\\n\\t}\\r\\n\\tcout << maxCover;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"file_in = open('lifeguards.in')\\r\\ndata = file_in.read().strip().split('\\\\n')\\r\\nn = int(data[0])\\r\\n\\r\\nlifeguards = [list(map(int, data[i + 1].split(' '))) for i in range(n)]\\r\\n\\r\\nMAX_TIME = 1000\\r\\nmax_time_covered = 0\\r\\n\\r\\n\\\"\\\"\\\"\\r\\nSimulate firing each lifeguard and computing the total\\r\\ntime covered by the remaining lifeguards\\r\\n\\\"\\\"\\\"\\r\\nfor i in range(n):\\r\\n\\ttime_covered = 0\\r\\n\\tfor v in range(1, MAX_TIME + 1):\\r\\n\\t\\tfor j in range(n):\\r\\n\\t\\t\\tif j != i:\\r\\n\\t\\t\\t\\tif v >= lifeguards[j][0] and v < lifeguards[j][1]:\\r\\n\\t\\t\\t\\t\\ttime_covered += 1\\r\\n\\t\\t\\t\\t\\tbreak\\r\\n\\tmax_time_covered = max(time_covered, max_time_covered)\\r\\n\\r\\nprint(max_time_covered, file=open('lifeguards.out', 'w'))\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-784","source":"USACO Bronze 2018 January","title":"Lifeguards","author":"Danh Ta Chi Thanh, Ananth Kashyap"},"parent":{"name":"usaco-784","relativePath":"usaco-784.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-complete","title":"Basic Complete Search"}}}}]},"problemInfo":{"uniqueId":"usaco-784","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=784"}},"pageContext":{"id":"usaco-784"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}