{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-919-painting-the-barn/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-919\", source = \"USACO Silver 2019 February\", title = \"Painting the Barn\", author = \"Qi Wang, Nathan Wang, Kevin Sheng\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_paintbarn_silver_feb19.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis (C++)\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsx(_components.p, {\n          children: \"From the official analysis (with minor modifications):\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconst int WIDTH = 1000;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"paintbarn.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"paintbarn.out\\\", \\\"w\\\", stdout);\\r\\n\\tint rect_num, paint_req;\\r\\n\\tcin >> rect_num >> paint_req;\\r\\n\\r\\n\\tint barn[WIDTH + 1][WIDTH + 1];\\r\\n\\tfor (int i = 0; i < rect_num; i++) {\\r\\n\\t\\tint start_x, start_y, end_x, end_y;\\r\\n\\t\\tcin >> start_x >> start_y >> end_x >> end_y;\\r\\n\\t\\t// Set up the prefix sums array with all the corners of the given rectangle\\r\\n\\t\\tbarn[start_x][start_y]++;\\r\\n\\t\\tbarn[start_x][end_y]--;\\r\\n\\t\\tbarn[end_x][start_y]--;\\r\\n\\t\\tbarn[end_x][end_y]++;\\r\\n\\t}\\r\\n\\r\\n\\tint valid_area = 0;\\r\\n\\t// Run 2D prefix sums on the array\\r\\n\\tfor (int x = 0; x < WIDTH; x++) {\\r\\n\\t\\tfor (int y = 0; y < WIDTH; y++) {\\r\\n\\t\\t\\tif (x > 0) barn[x][y] += barn[x - 1][y];\\r\\n\\t\\t\\tif (y > 0) barn[x][y] += barn[x][y - 1];\\r\\n\\t\\t\\tif (x > 0 && y > 0) barn[x][y] -= barn[x - 1][y - 1];\\r\\n\\t\\t\\tvalid_area += barn[x][y] == paint_req;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << valid_area << endl;\\r\\n}\\n\"\n          })\n        })]\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class PaintBarn {\\r\\n\\tstatic final int WIDTH = 1000;\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tKattio io = new Kattio(\\\"paintbarn\\\");\\r\\n\\t\\tint rectNum = io.nextInt();\\r\\n\\t\\tint paintReq = io.nextInt();\\r\\n\\t\\tint[][] barn = new int[WIDTH + 1][WIDTH + 1];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < rectNum; i++) {\\r\\n\\t\\t\\tint start_x = io.nextInt();\\r\\n\\t\\t\\tint start_y = io.nextInt();\\r\\n\\t\\t\\tint end_x = io.nextInt();\\r\\n\\t\\t\\tint end_y = io.nextInt();\\r\\n\\r\\n\\t\\t\\t// Set up the prefix sums array with all the corners of the given rectangle\\r\\n\\t\\t\\tbarn[start_x][start_y]++;\\r\\n\\t\\t\\tbarn[end_x][end_y]++;\\r\\n\\t\\t\\tbarn[start_x][end_y]--;\\r\\n\\t\\t\\tbarn[end_x][start_y]--;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint valid_area = 0;\\r\\n\\t\\t// Run 2D prefix sums on the array\\r\\n\\t\\tfor (int x = 0; x <= WIDTH; x++) {\\r\\n\\t\\t\\tfor (int y = 0; y <= WIDTH; y++) {\\r\\n\\t\\t\\t\\tif (x > 0) barn[x][y] += barn[x - 1][y];\\r\\n\\t\\t\\t\\tif (y > 0) barn[x][y] += barn[x][y - 1];\\r\\n\\t\\t\\t\\tif (x > 0 && y > 0) barn[x][y] -= barn[x - 1][y - 1];\\r\\n\\t\\t\\t\\tif (barn[x][y] == paintReq) {\\r\\n\\t\\t\\t\\t\\tvalid_area++;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tio.println(valid_area);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"WIDTH = 1000\\r\\n\\r\\nbarn = [[0 for _ in range(WIDTH + 1)] for _ in range(WIDTH + 1)]\\r\\nwith open('paintbarn.in') as read:\\r\\n\\trect_num, paint_req = [int(i) for i in read.readline().split()]\\r\\n\\tfor _ in range(rect_num):\\r\\n\\t\\tstart_x, start_y, end_x, end_y = [int(i) for i in read.readline().split()]\\r\\n\\t\\t# Set up the prefix sums array with all the corners of the given rectangle\\r\\n\\t\\tbarn[start_x][start_y] += 1\\r\\n\\t\\tbarn[start_x][end_y] -= 1\\r\\n\\t\\tbarn[end_x][start_y] -= 1\\r\\n\\t\\tbarn[end_x][end_y] += 1\\r\\n\\r\\nvalid_area = 0\\r\\n# Run 2D prefix sums on the array\\r\\nfor x in range(WIDTH + 1):\\r\\n\\tfor y in range(WIDTH + 1):\\r\\n\\t\\tif x > 0:\\r\\n\\t\\t\\tbarn[x][y] += barn[x - 1][y]\\r\\n\\t\\tif y > 0:\\r\\n\\t\\t\\tbarn[x][y] += barn[x][y - 1]\\r\\n\\t\\tif x > 0 and y > 0:\\r\\n\\t\\t\\tbarn[x][y] -= barn[x - 1][y - 1]\\r\\n\\t\\tvalid_area += barn[x][y] == paint_req\\r\\n\\r\\nprint(valid_area, file=open('paintbarn.out', 'w'))\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-919","source":"USACO Silver 2019 February","title":"Painting the Barn","author":"Qi Wang, Nathan Wang, Kevin Sheng"},"parent":{"name":"usaco-919","relativePath":"usaco-919.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"more-prefix-sums","title":"More on Prefix Sums"}}}}]},"problemInfo":{"uniqueId":"usaco-919","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=919"}},"pageContext":{"id":"usaco-919"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}