{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cf-save-the-nature/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cf-1223C\", source = \"CF\", title = \"Save the Nature\", author = \"Jesse Choe, Kevin Sheng\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/66993\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Editorial\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Binary search on the answer for the minimum number of tickets, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \", to sell to make the total ecological contribution to at least \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's try to determine the maximum contribution attainable with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" tickets.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The problem indicates that only \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\\\\%\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mi mathvariant=\\\"normal\\\">%</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x\\\\%</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8056em;vertical-align:-0.0556em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mord\\\">%</span></span></span></span>\"\n      }), \" of the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \"-th ticket and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y\\\\%\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mi mathvariant=\\\"normal\\\">%</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y\\\\%</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9444em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mord\\\">%</span></span></span></span>\"\n      }), \" of the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \"-th ticket could contribute to the total ecological contribution. We can precompute these multipliers \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"pct\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">pct</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8095em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" (either \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n      }), \", or \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x+y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x+y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n      }), \" depending on the ticket) over \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" tickets, then greedily match the largest multiplier with the highest value ticket. This can be done by sorting the multipliers \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"pct\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">pct</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8095em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" and tickets \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \" in decreasing order; then the maximum total ecological contribution would be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\sum\\\\limits_{i=1}^{t} p_i \\\\cdot pct_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></msubsup><msub><mi>p</mi><mi>i</mi></msub><mo>⋅</mo><mi>p</mi><mi>c</mi><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum\\\\limits_{i=1}^{t} p_i \\\\cdot pct_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:2.4582em;vertical-align:-0.9777em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.4806em;\\\"><span style=\\\"top:-2.1223em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop op-symbol small-op\\\">∑</span></span></span><span style=\\\"top:-3.95em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">t</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9777em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8095em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log^2 N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><msup><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msup><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log^2 N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1484em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8984em;\\\"><span style=\\\"top:-3.1473em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"c-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#c-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"C++ Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\n\\r\\nint n; vector<ll> p;\\r\\n\\r\\nll x, a, y, b, k;\\r\\n\\r\\nbool works(int sellTickets){\\r\\n\\tvector<ll> percentages(sellTickets);\\r\\n\\t\\r\\n\\t// Add x% to every a-th ticket.\\r\\n\\tfor(int i = a - 1; i < sellTickets; i += a){\\r\\n\\t\\tpercentages[i] += x;\\r\\n\\t}\\r\\n\\t\\r\\n\\t// Add y% to every b-th ticket\\r\\n\\tfor(int i = b - 1; i < sellTickets; i += b){\\r\\n\\t\\tpercentages[i] += y;\\r\\n\\t}\\r\\n\\t\\r\\n\\tsort(percentages.begin(), percentages.end(), greater<ll>());\\r\\n\\t\\r\\n\\tll cur = 0;\\r\\n\\tfor(int i = 0; i < sellTickets; i++){\\r\\n\\t\\tcur += percentages[i] * p[i] / 100;\\r\\n\\t}\\r\\n\\t\\r\\n\\treturn cur >= k;\\r\\n}\\r\\n\\r\\nvoid solve(){\\r\\n\\tcin >> n;\\r\\n\\tp.resize(n);\\r\\n\\t\\r\\n\\tfor(int i = 0; i < n; i++){\\r\\n\\t\\tcin >> p[i];\\r\\n\\t}\\r\\n\\t\\r\\n\\tsort(p.begin(), p.end(), greater<ll>());\\r\\n\\t\\r\\n\\tcin >> x >> a >> y >> b >> k;\\r\\n\\t\\r\\n\\tint l = 0, r = n, ans = -1;\\r\\n\\t\\r\\n\\twhile(l <= r){\\r\\n\\t\\tint mid = l + (r - l) / 2;\\r\\n\\t\\tif(works(mid)){\\r\\n\\t\\t\\tans = mid;\\r\\n\\t\\t\\tr = mid - 1;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tl = mid + 1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t\\r\\n\\tcout << ans << endl;\\r\\n}\\r\\n\\r\\nint main(){\\r\\n\\tint q; cin >> q;\\r\\n\\tfor(int i = 1; i <= q; i++){\\r\\n\\t\\tsolve();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.BufferedReader;\\r\\nimport java.io.IOException;\\r\\nimport java.io.InputStreamReader;\\r\\nimport java.util.Arrays;\\r\\nimport java.util.Comparator;\\r\\n\\r\\npublic final class SaveNature {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint queryNum = Integer.parseInt(read.readLine());\\r\\n\\t\\tfor (int q = 0; q < queryNum; q++) {\\r\\n\\t\\t\\tint ticketNum = Integer.parseInt(read.readLine());\\r\\n\\t\\t\\tlong[] tickets = Arrays.stream(read.readLine().split(\\\" \\\")).mapToLong(Long::parseLong).toArray();\\r\\n\\t\\t\\tArrays.sort(tickets);\\r\\n\\r\\n\\t\\t\\t// first the percentage of the proceeds, then the frequency\\r\\n\\t\\t\\tint[] prog1 = Arrays.stream(read.readLine().split(\\\" \\\")).mapToInt(Integer::parseInt).toArray();\\r\\n\\t\\t\\tint[] prog2 = Arrays.stream(read.readLine().split(\\\" \\\")).mapToInt(Integer::parseInt).toArray();\\r\\n\\t\\t\\tlong minRevenue = Long.parseLong(read.readLine());\\r\\n\\t\\t\\t// the frequency of both programs including a single ticket\\r\\n\\t\\t\\tlong comboFreq = (long) prog1[1] * prog2[1] / gcd(prog1[1], prog2[1]);\\r\\n\\r\\n\\t\\t\\tint lo = 0;\\r\\n\\t\\t\\tint hi = ticketNum;\\r\\n\\t\\t\\tint valid = -1;\\r\\n\\t\\t\\twhile (lo <= hi) {\\r\\n\\t\\t\\t\\tint mid = (lo + hi) / 2;\\r\\n\\t\\t\\t\\t// all the possible tickets that can be used to save the nature\\r\\n\\t\\t\\t\\tint[][] helpChances = new int[][] {\\r\\n\\t\\t\\t\\t\\t{prog1[0] + prog2[0], ((int) (mid / comboFreq))},\\r\\n\\t\\t\\t\\t\\t{prog1[0], (int) (mid / prog1[1] - mid / comboFreq)},\\r\\n\\t\\t\\t\\t\\t{prog2[0], (int) (mid / prog2[1] - mid / comboFreq)}\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t// sort the chances, the greatest percentage going first\\r\\n\\t\\t\\t\\tArrays.sort(helpChances, Comparator.comparingInt(c -> -c[0]));\\r\\n\\r\\n\\t\\t\\t\\t// since the tickets are sorted in increasing order, we go in reverse\\r\\n\\t\\t\\t\\tint ticketAt = ticketNum - 1;\\r\\n\\t\\t\\t\\tlong revenue = 0;\\r\\n\\t\\t\\t\\tfor (int[] chance : helpChances) {\\r\\n\\t\\t\\t\\t\\tfor (int i = 0; i < chance[1]; i++) {\\r\\n\\t\\t\\t\\t\\t\\trevenue += tickets[ticketAt--] * chance[0] / 100;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif (revenue >= minRevenue) {\\r\\n\\t\\t\\t\\t\\tvalid = mid;\\r\\n\\t\\t\\t\\t\\thi = mid - 1;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tlo = mid + 1;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tSystem.out.println(valid);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprivate static int gcd(int a, int b) {\\r\\n\\t\\treturn b == 0 ? a : gcd(b, a % b);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h3, {\n          id: \"python-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#python-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Python Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"from math import gcd\\r\\n\\r\\nfor _ in range(int(input())):\\r\\n\\tticket_num = int(input())\\r\\n\\ttickets = sorted([int(i) for i in input().split()], reverse=True)\\r\\n\\tprog1 = [int(i) for i in input().split()]\\r\\n\\tprog2 = [int(i) for i in input().split()]\\r\\n\\tmin_revenue = int(input())\\r\\n\\t# the frequency of both programs including a single ticket\\r\\n\\tcombo_freq = prog1[1] * prog2[1] // gcd(prog1[1], prog2[1])\\r\\n\\r\\n\\tlo = 0\\r\\n\\thi = ticket_num\\r\\n\\tvalid = -1\\r\\n\\twhile lo <= hi:\\r\\n\\t\\tmid = (lo + hi) // 2\\r\\n\\t\\t# all the possible tickets that can be used to save the nature\\r\\n\\t\\thelp_chances = sorted([\\r\\n\\t\\t\\t[prog1[0] + prog2[0], mid // combo_freq],\\r\\n\\t\\t\\t[prog1[0], mid // prog1[1] - mid // combo_freq],\\r\\n\\t\\t\\t[prog2[0], mid // prog2[1] - mid // combo_freq],\\r\\n\\t\\t], reverse=True)\\r\\n\\r\\n\\t\\tticket_at = 0\\r\\n\\t\\trevenue = 0\\r\\n\\t\\t\\\"\\\"\\\"\\r\\n\\t\\tsell the tickets, with the most expensive ticket\\r\\n\\t\\tand the greatest percentage going first to maximize revenue\\r\\n\\t\\t\\\"\\\"\\\"\\r\\n\\t\\tfor ch in help_chances:\\r\\n\\t\\t\\tfor _ in range(ch[1]):\\r\\n\\t\\t\\t\\trevenue += tickets[ticket_at] * ch[0] // 100\\r\\n\\t\\t\\t\\tticket_at += 1\\r\\n\\r\\n\\t\\tif revenue >= min_revenue:\\r\\n\\t\\t\\tvalid = mid\\r\\n\\t\\t\\thi = mid - 1\\r\\n\\t\\telse:\\r\\n\\t\\t\\tlo = mid + 1\\r\\n\\tprint(valid)\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cf-1223C","source":"CF","title":"Save the Nature","author":"Jesse Choe, Kevin Sheng"},"parent":{"name":"cf-1223C","relativePath":"cf-1223C.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"C++ Implementation","slug":"c-implementation"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"Java Implementation","slug":"java-implementation"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":3,"value":"Python Implementation","slug":"python-implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"binary-search","title":"Binary Search"}}}}]},"problemInfo":{"uniqueId":"cf-1223C","url":"https://codeforces.com/problemset/problem/1223/C"}},"pageContext":{"id":"cf-1223C"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}