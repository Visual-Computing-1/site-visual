{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1138-path-queries/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1138\", source = \"CSES\", title = \"Path Queries\", author = \"Benjamin Qi, Neo Wang\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\")\n  }, _props.components), {MATHSPAN, MATHDIV, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Explanation:\"\n      }), \" \", _jsx(_components.a, {\n        href: \"/CPH.pdf#page=174\",\n        children: \"CPH 18.2\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Unlike the above explanation, instead of storing the subtree size, we store the\\r\\nright index of the subtree in order to determine the bounds of each node's\\r\\nsubtree.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Notice that when we update a node with value \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A[s]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>s</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">A[s]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", the root-to-node sum\\r\\nfor each node in its subtree increases by the difference \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x-A[s]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>−</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>s</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">x-A[s]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \". Using ETT,\\r\\nthis is equivalent to a range update.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can use a Fenwick tree which supports range increment/decrements and point\\r\\nqueries in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When implementing your solution, recall that incrementing a range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[a, b]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[a, b]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" with\\r\\na Fenwick tree corresponds to the operations\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\text{upd}(a, x)\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext>upd</mtext><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>x</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{upd}(a, x)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">upd</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">)</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\text{upd}(b+1, -x)\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext>upd</mtext><mo stretchy=\\\"false\\\">(</mo><mi>b</mi><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mo>−</mo><mi>x</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{upd}(b+1, -x)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">upd</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">−</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">)</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O((N+Q)\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>+</mo><mi>Q</mi><mo stretchy=\\\"false\\\">)</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O((N+Q)\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">((</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">Q</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"//BeginCodeSnip{C++ Short Template}\\n#include <bits/stdc++.h> // see /general/running-code-locally\\nusing namespace std;\\n\\nusing ll = long long;\\n\\nusing vi = vector<int>;\\n#define pb push_back\\n#define all(x) begin(x), end(x)\\n#define sz(x) (int) (x).size()\\n\\nusing pi = pair<int,int>;\\n#define f first\\n#define s second\\n#define mp make_pair\\n\\nvoid setIO(string name = \\\"\\\") {\\n\\tcin.tie(0)->sync_with_stdio(0); // see /general/fast-io\\n\\tif (sz(name)) {\\n\\t\\tfreopen((name + \\\".in\\\").c_str(), \\\"r\\\", stdin); // see /general/input-output\\n\\t\\tfreopen((name + \\\".out\\\").c_str(), \\\"w\\\", stdout);\\n\\t}\\n}\\n//EndCodeSnip\\n\\r\\n/**\\r\\n * Author: Lukas Polacek\\r\\n * Date: 2009-10-30\\r\\n * License: CC0\\r\\n * Source: folklore/TopCoder\\r\\n * Description: Computes partial sums a[0] + a[1] + ... + a[pos - 1],\\r\\n * and updates single elements a[i],\\r\\n * taking the difference between the old and new value.\\r\\n * Time: Both operations are $O(\\\\log N)$.\\r\\n * Status: Stress-tested\\r\\n */\\r\\n\\r\\nstruct FT {\\r\\n\\tvector<ll> s;\\r\\n\\tFT(int n) : s(n) {}\\r\\n\\tvoid update(int pos, ll dif) { // a[pos] += dif\\r\\n\\t\\tfor (; pos < sz(s); pos |= pos + 1) s[pos] += dif;\\r\\n\\t}\\r\\n\\tll query(int pos) { // sum of values in [0, pos)\\r\\n\\t\\tll res = 0;\\r\\n\\t\\tfor (; pos > 0; pos &= pos - 1) res += s[pos-1];\\r\\n\\t\\treturn res;\\r\\n\\t}\\r\\n};\\r\\n\\r\\n\\r\\nconst int mx = 2e5+1;\\r\\n\\r\\nvi adj[mx];\\r\\nint A[mx];\\r\\nint st[mx];\\r\\nint en[mx];\\r\\nint timer = 0;\\r\\nFT ft(mx+1);\\r\\n\\r\\nvoid dfs(int x, int p) { // euler tour\\r\\n\\tst[x] = timer++;\\r\\n\\tfor(const int &e : adj[x]) if(e != p) dfs(e, x);\\r\\n\\ten[x] = timer-1;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\r\\n\\tint n, q;\\r\\n\\tcin >> n >> q;\\r\\n\\r\\n\\tfor(int i = 1; i <= n; i++) cin >> A[i];\\r\\n\\r\\n\\tfor(int i = 0; i < n-1; i++) {\\r\\n\\t\\tint a, b; cin >> a >> b;\\r\\n\\t\\tadj[a].pb(b);\\r\\n\\t\\tadj[b].pb(a);\\r\\n\\t}\\r\\n\\r\\n\\tdfs(1, 0);\\r\\n\\r\\n\\tfor(int i = 1; i <= n; i++) {\\r\\n\\t\\tft.update(st[i], A[i]);\\r\\n\\t\\tft.update(en[i]+1, -A[i]);\\r\\n\\t}\\r\\n\\r\\n\\tfor(int i = 0; i < q; i++) {\\r\\n\\t\\tint type, s; cin >> type >> s;\\r\\n\\t\\tif(type == 1) {\\r\\n\\t\\t\\tint x; cin >> x;\\r\\n\\t\\t\\tft.update(st[s], x-A[s]);\\r\\n\\t\\t\\tft.update(en[s]+1, -(x-A[s])); // increment by 1\\r\\n\\t\\t\\tA[s] = x;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tcout << ft.query(st[s]+1) << '\\\\n';\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1138","source":"CSES","title":"Path Queries","author":"Benjamin Qi, Neo Wang"},"parent":{"name":"cses-1138","relativePath":"cses-1138.mdx"},"toc":{"cpp":[],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"tree-euler","title":"Euler Tour Technique"}}}}]},"problemInfo":{"uniqueId":"cses-1138","url":"https://cses.fi/problemset/task/1138"}},"pageContext":{"id":"cses-1138"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}