{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-595-subsequences-summing-to-sevens/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-595\", source = \"USACO Silver 2016 January\", title = \"Subsequences Summing to Sevens\", author = \"Kevin Sheng, thetazero, Melody Yu (Video)\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, Youtube, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_div7_silver_jan16.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: The video solution might not be the same as other solutions. Code in C++.\"\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"wXNhLjiuTgw\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"c-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#c-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"C++ Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconst int MOD = 7;\\r\\n\\r\\nint main() {\\r\\n\\tfreopen(\\\"div7.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"div7.out\\\", \\\"w\\\", stdout);\\r\\n\\tint cow_num;\\r\\n\\tcin >> cow_num;\\r\\n\\r\\n\\tint longest_photo = 0;\\r\\n\\t// first[i] stores the index of the first time a prefix sum % 7 == i\\r\\n\\tvector<int> first(MOD, -1);\\r\\n\\tfirst[0] = 0;\\r\\n\\r\\n\\tint curr_remainder = 0;\\r\\n\\tfor (int i = 1; i <= cow_num; i++) {\\r\\n\\t\\tint cow;\\r\\n\\t\\tcin >> cow;\\r\\n\\t\\t\\r\\n\\t\\tcurr_remainder = (curr_remainder + cow) % MOD;\\r\\n\\t\\tif (first[curr_remainder] == -1){\\r\\n\\t\\t\\tfirst[curr_remainder] = i;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tlongest_photo = max(longest_photo, i - first[curr_remainder]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << longest_photo << endl;\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic final class Div7 {\\r\\n\\tprivate static final int MOD = 7;\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tlong start = System.currentTimeMillis();\\r\\n\\t\\tBufferedReader read = new BufferedReader(new FileReader(\\\"div7.in\\\"));\\r\\n\\t\\tint cowNum = Integer.parseInt(read.readLine());\\r\\n\\t\\t\\r\\n\\t\\tint maxLen = 0;\\r\\n\\t\\t// first[i] stores the index of the first time a prefix sum % 7 == i\\r\\n\\t\\tint[] first = new int[MOD];\\r\\n\\t\\tArrays.fill(first, -1);\\r\\n\\t\\tfirst[0] = 0;\\r\\n\\r\\n\\t\\tint runningMod = 0;\\r\\n\\t\\tfor (int c = 0; c < cowNum; c++) {\\r\\n\\t\\t\\tint cow = Integer.parseInt(read.readLine());\\r\\n\\t\\t\\trunningMod = (runningMod + cow) % MOD;\\r\\n\\t\\t\\tif (first[runningMod] == -1) {\\r\\n\\t\\t\\t\\tfirst[runningMod] = c;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tmaxLen = Math.max(maxLen, c - first[runningMod]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tPrintWriter written = new PrintWriter(\\\"div7.out\\\");\\r\\n\\t\\twritten.println(maxLen);\\r\\n\\t\\twritten.close();\\r\\n\\t\\tSystem.out.println(maxLen);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h2, {\n          id: \"python-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#python-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Python Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"MOD = 7\\r\\n\\r\\nwith open('div7.in') as read:\\r\\n\\tcows = [int(read.readline()) for _ in range(int(read.readline()))]\\r\\n\\r\\nbest_photo = 0\\r\\n# first_occ[i] stores the index of the first time a prefix sum % 7 == i\\r\\nfirst_occ = [-1 for _ in range(MOD)]\\r\\nfirst_occ[0] = 0\\r\\n\\r\\nrunning_mod = 0\\r\\nfor v, c in enumerate(cows):\\r\\n\\trunning_mod = (running_mod + c) % MOD\\r\\n\\r\\n\\tif first_occ[running_mod] == -1:\\r\\n\\t\\tfirst_occ[running_mod] = v\\r\\n\\telse:\\r\\n\\t\\tbest_photo = max(best_photo, v - first_occ[running_mod])\\r\\n\\r\\nprint(best_photo)\\r\\nprint(best_photo, file=open('div7.out', 'w'))\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-595","source":"USACO Silver 2016 January","title":"Subsequences Summing to Sevens","author":"Kevin Sheng, thetazero, Melody Yu (Video)"},"parent":{"name":"usaco-595","relativePath":"usaco-595.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"C++ Implementation","slug":"c-implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Java Implementation","slug":"java-implementation"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Python Implementation","slug":"python-implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"prefix-sums","title":"Introduction to Prefix Sums"}}}},{"node":{"module":{"frontmatter":{"id":"visual","title":"Visual"}}}}]},"problemInfo":{"uniqueId":"usaco-595","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=595"}},"pageContext":{"id":"usaco-595"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}