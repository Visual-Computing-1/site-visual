{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1635-coin-combinations-i-unordered/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1635\", source = \"CSES\", title = \"Coin Combinations I\", author = \"Michael Cao\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Warning: _missingComponent(\"Warning\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Info: _missingComponent(\"Info\"),\n    PySection: _missingComponent(\"PySection\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, MATHDIV, Warning, LanguageSection, CPPSection, JavaSection, Info, PySection, IncompleteSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this problem, we are asked the number of ways to achieve some value, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \",\\r\\nusing \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" coins of distinct values where the order of coins does not matter.\\r\\nThis is known as the \\\"Unordered Coin Change\\\" problem, which you can read about\\r\\nin \", _jsx(_components.a, {\n        href: \"/CPH.pdf\",\n        children: \"CPH Chapter 7\"\n      }), \" under \\\"Counting the Number of Solutions\\\".\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"main-idea\",\n      children: [_jsx(_components.a, {\n        href: \"#main-idea\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Main Idea\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To solve this problem, let \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp[w]}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp[w]</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp[w]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9167em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp[w]</span></span></span></span></span>\"\n      }), \" equal the number of ways to achieve\\r\\nthe sum of values, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span></span></span></span>\"\n      }), \". Then, for some weight \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span></span></span></span>\"\n      }), \", let's try to use each coin.\\r\\nFor \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp[w]}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp[w]</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp[w]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9167em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp[w]</span></span></span></span></span>\"\n      }), \", we'll transition from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{dp[w - coin[i]]}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">dp[w</mtext><mtext> </mtext><mtext mathvariant=\\\"monospace\\\">-</mtext><mtext> </mtext><mtext mathvariant=\\\"monospace\\\">coin[i]]</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{dp[w - coin[i]]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9167em;vertical-align:-0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">dp[w - coin[i]]</span></span></span></span></span>\"\n      }), \" for all\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{coin[x]}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">coin[x]</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{coin[x]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7778em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">coin[x]</span></span></span></span></span>\"\n      }), \" defines the value of the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \"-th coin.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So, the transitions are:\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"dp[w] = \\\\sum_{i=1}^n{(dp[w - coins[i]])}\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>w</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>w</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>s</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">dp[w] = \\\\sum_{i=1}^n{(dp[w - coins[i]])}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:2.9291em;vertical-align:-1.2777em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.6514em;\\\"><span style=\\\"top:-1.8723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.2777em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord mathnormal\\\">co</span><span class=\\\"mord mathnormal\\\">in</span><span class=\\\"mord mathnormal\\\">s</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]])</span></span></span></span></span></span>\"\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsxs(_components.p, {\n        children: [\"Remember to take your answer mod \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"10^9 + 7\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">10^9 + 7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8974em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n        }), \", as instructed in the problem\\r\\nstatement.\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example-code\",\n      children: [_jsx(_components.a, {\n        href: \"#example-code\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example Code\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nll dp[1000001];\\r\\n\\r\\nconst int MOD = (int) 1e9 + 7;\\r\\n\\r\\nint main(){\\r\\n\\tint n, x; cin >> n >> x;\\r\\n\\tvi coins(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> coins[i];\\r\\n\\t}\\r\\n\\tdp[0] = 1;\\r\\n\\tfor (int weight = 0; weight <= x; weight++) {\\r\\n\\t\\tfor (int i = 1; i <= n; i++) {\\r\\n\\t\\t\\tif(weight - coins[i - 1] >= 0) {\\r\\n\\t\\t\\t\\tdp[weight] += dp[weight - coins[i - 1]];\\r\\n\\t\\t\\t\\tdp[weight] %= MOD;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << dp[x] << '\\\\n';\\r\\n}\\n\"\n          })\n        })\n      }), _jsxs(JavaSection, {\n        children: [_jsx(Info, {\n          title: \"Note\",\n          children: _jsxs(_components.p, {\n            children: [\"An otherwise working solution that uses \", _jsx(_components.code, {\n              children: \"dp[i] %= m;\"\n            }), \" instead of\\r\\n\", _jsx(_components.code, {\n              children: \"if (dp[i] > M) dp[i] -= M;\"\n            }), \" may time out on CSES, but would work on USACO,\\r\\nwhich gives double time for Java (see line 32 of the solution).\"]\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class CountingCoins1 {\\r\\n\\tstatic BufferedReader r = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\tstatic PrintWriter pw = new PrintWriter(System.out);\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(r.readLine());\\r\\n\\t\\tint n = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint x = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint M = 1000000007;\\r\\n\\t\\tst = new StringTokenizer(r.readLine());\\r\\n\\t\\tint[] coins = new int[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tcoins[i] = Integer.parseInt(st.nextToken());\\r\\n\\t\\t}\\r\\n\\t\\tArrays.sort(coins);\\r\\n\\r\\n\\t\\tint[] dp = new int[x + 1];\\r\\n\\t\\tdp[0] = 1;\\r\\n\\r\\n\\t\\tfor (int i = 1; i < dp.length; i++) {\\r\\n\\t\\t\\tdp[i] = 0;\\r\\n\\t\\t\\tfor (int j = 0; j < n; j++) {\\r\\n\\t\\t\\t\\tif (coins[j] > i) {\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdp[i] += dp[i - coins[j]];\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// need to use -= M to pass for Java instead of %= M (which works in c++) to save time\\r\\n\\t\\t\\t\\t// this is the same thing as dp[i] % m within the constraints of this problem (dp[i] can never be > 2*M since we are only adding)\\r\\n\\t\\t\\t\\t// This wouldn't be a problem in USACO contests since USACO gives 2x time for java, but CSES doesn't\\r\\n\\t\\t\\t\\t// dp[i] %= m;\\r\\n\\t\\t\\t\\tif (dp[i] > M) dp[i] -= M;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tpw.println(dp[x]);\\r\\n\\t\\tpw.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      }), _jsx(PySection, {\n        children: _jsx(IncompleteSection, {\n          children: _jsx(_components.p, {\n            children: \"We don't currently have a Python solution for this problem. Please switch to\\r\\nanother language to view the solution code.\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1635","source":"CSES","title":"Coin Combinations I","author":"Michael Cao"},"parent":{"name":"cses-1635","relativePath":"cses-1635.mdx"},"toc":{"cpp":[{"depth":1,"value":"Main Idea","slug":"main-idea"},{"depth":2,"value":"Example Code","slug":"example-code"}],"java":[{"depth":1,"value":"Main Idea","slug":"main-idea"},{"depth":2,"value":"Example Code","slug":"example-code"}],"py":[{"depth":1,"value":"Main Idea","slug":"main-idea"},{"depth":2,"value":"Example Code","slug":"example-code"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"knapsack","title":"Knapsack DP"}}}}]},"problemInfo":{"uniqueId":"cses-1635","url":"https://cses.fi/problemset/task/1635"}},"pageContext":{"id":"cses-1635"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}