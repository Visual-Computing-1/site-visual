{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-789-mootube/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-789\", source = \"USACO Gold 2018 January\", title = \"Mootube\", author = \"Óscar Garries\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\")\n  }, _props.components), {LanguageSection, CPPSection, HeaderLink, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_mootube_gold_jan18.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nstruct DSU {\\r\\n\\tvector<int> e;\\r\\n\\tvoid init (int n) { e = vector<int>(n, -1); }\\r\\n\\tint get (int x) { return e[x] < 0 ? x : e[x] = get(e[x]); };\\r\\n\\tbool sameSet (int x, int y) { return get(x) == get(y); };\\r\\n\\tint size (int x) { return -e[get(x)]; }\\r\\n\\tbool unite (int x, int y) {\\r\\n\\t\\tx = get(x), y = get(y);\\r\\n\\t\\tif (x == y) return false;\\r\\n\\t\\tif (e[x] > e[y]) swap(x, y);\\r\\n\\t\\te[x] += e[y];\\r\\n\\t\\te[y] = x;\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nbool cmp (const pair<int, pair<int, int>>& a, const pair<int, pair<int, int>>& b) {\\r\\n\\treturn a.second.second > b.second.second;\\r\\n}\\r\\n\\r\\nint main () {\\r\\n\\tfreopen(\\\"mootube.in\\\", \\\"r\\\", stdin);\\r\\n\\tfreopen(\\\"mootube.out\\\", \\\"w\\\", stdout);\\r\\n\\r\\n\\tint n, q;\\r\\n\\tcin >> n >> q;\\r\\n\\tvector<pair<int, pair<int, int>>> edges(n - 1);\\r\\n\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\tint u, v, w;\\r\\n\\t\\tcin >> u >> v >> w;\\r\\n\\t\\tu--; v--;\\r\\n\\t\\tedges[i] = make_pair(w, make_pair(u, v));\\r\\n\\t}\\r\\n\\tvector<pair<int, pair<int, int>>> queries(q);\\r\\n\\tfor (int i = 0; i < q; i++) {\\r\\n\\t\\tint v, k;\\r\\n\\t\\tcin >> k >> v;\\r\\n\\t\\tv--;\\r\\n\\t\\tqueries[i] = make_pair(i, make_pair(v, k));\\r\\n\\t}\\r\\n\\tsort(queries.begin(), queries.end(), cmp);\\r\\n\\tsort(edges.begin(), edges.end(), greater<pair<int, pair<int, int>>>());\\r\\n\\r\\n\\tDSU dsu;\\r\\n\\tdsu.init(n);\\r\\n\\tvector<int> sol(q);\\r\\n\\tint idx = 0;\\r\\n\\tfor (auto query: queries) {\\r\\n\\t\\tint v = query.second.first;\\r\\n\\t\\tint curK = query.second.second;\\r\\n\\t\\twhile (idx < (int) edges.size() && edges[idx].first >= curK) {\\r\\n\\t\\t\\tdsu.unite(edges[idx].second.first, edges[idx].second.second);\\r\\n\\t\\t\\tidx++;\\r\\n\\t\\t}\\r\\n\\t\\tsol[query.first] = dsu.size(v) - 1;\\r\\n\\t}\\r\\n\\r\\n\\tfor (auto x: sol) {\\r\\n\\t\\tcout << x << '\\\\n';\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })]\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-789","source":"USACO Gold 2018 January","title":"Mootube","author":"Óscar Garries"},"parent":{"name":"usaco-789","relativePath":"usaco-789.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"dsu","title":"Disjoint Set Union"}}}}]},"problemInfo":{"uniqueId":"usaco-789","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=789"}},"pageContext":{"id":"usaco-789"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}