{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/apio-2017traveling-merchant/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"apio-17-TravelingMerchant\", source = \"APIO 2017\", title = \"Traveling Merchant\", author = \"Andi Qu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\")\n  }, _props.components), {MATHSPAN, HeaderLink, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"First, find the maximum profit of each footpath by comparing the buying and\\r\\nselling prices of the endpoints for each of the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"K\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\\\"application/x-tex\\\">K</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span></span></span></span>\"\n      }), \" items. We now have a\\r\\ndirected graph where each edge has a profit \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \" and a time to traverse \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ratios are inconvenient, so let's consider a simpler problem: given \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \", can we\\r\\nfind a profit cycle with profit \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"P\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\\\"application/x-tex\\\">P</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">P</span></span></span></span>\"\n      }), \" and time \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"T\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\\\"application/x-tex\\\">T</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span></span></span></span>\"\n      }), \" such that \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"P/T \\\\geq R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>P</mi><mi mathvariant=\\\"normal\\\">/</mi><mi>T</mi><mo>≥</mo><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">P/T \\\\geq R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">P</span><span class=\\\"mord\\\">/</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \"?\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is convenient because we can make it linear: this problem is equivalent to\\r\\nchecking whether we can find a profit cycle with profit \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"P\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\\\"application/x-tex\\\">P</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">P</span></span></span></span>\"\n      }), \" and time \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"T\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\\\"application/x-tex\\\">T</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">T</span></span></span></span>\"\n      }), \" such\\r\\nthat \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"P - TR \\\\geq 0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>P</mi><mo>−</mo><mi>T</mi><mi>R</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">P - TR \\\\geq 0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">P</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">TR</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \". If we weight each edge as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p - tR\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mo>−</mo><mi>t</mi><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p - tR</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">tR</span></span></span></span>\"\n      }), \", this is equivalent to\\r\\nchecking whether a non-negative cycle exists in the graph.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \" is good if \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R + 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">R + 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" is good, we can binary search for the largest good\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \". We can then use Floyd-Warshall to check whether there is a negative cycle.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"(For a similar problem, see Cruise from BkOI 2016. Beware though - it's\\r\\ngeometry!)\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\n#define FOR(i, x, y) for (int i = x; i < y; i++)\\r\\ntypedef long long ll;\\r\\nusing namespace std;\\r\\n\\r\\nconst ll INF = LLONG_MAX / 2;\\r\\n\\r\\nint n, m, x;\\r\\nll b[101][1001], s[101][1001];\\r\\nll graph[101][101], profit[101][101], graph2[101][101];\\r\\n\\r\\nvoid floyd_warshall(ll adj[101][101]) {\\r\\n\\tFOR(i, 1, n + 1)\\r\\n\\t\\tFOR(j, 1, n + 1)\\r\\n\\t\\t\\tFOR(k, 1, n + 1)\\r\\n\\t\\t\\t\\tadj[j][k] = min(adj[j][k], adj[j][i] + adj[i][k]);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tiostream::sync_with_stdio(false);\\r\\n\\tcin.tie(0);\\r\\n\\tcin >> n >> m >> x;\\r\\n\\tFOR(i, 1, n + 1) {\\r\\n\\t\\tFOR(j, 1, n + 1) graph[i][j] = INF;\\r\\n\\t\\tFOR(j, 1, x + 1) cin >> b[i][j] >> s[i][j];\\r\\n\\t}\\r\\n\\tFOR(i, 0, m) {\\r\\n\\t\\tint u, v, w;\\r\\n\\t\\tcin >> u >> v >> w;\\r\\n\\t\\tgraph[u][v] = w;\\r\\n\\t}\\r\\n\\tfloyd_warshall(graph);\\r\\n\\tFOR(i, 1, n + 1) FOR(j, 1, n + 1) FOR(k, 1, x + 1)\\r\\n\\t\\tif (s[j][k] != -1 && b[i][k] != -1)\\r\\n\\t\\t\\tprofit[i][j] = max(profit[i][j], s[j][k] - b[i][k]);\\r\\n\\r\\n\\tll l = 1, r = 1e9;\\r\\n\\twhile (l <= r) {\\r\\n\\t\\tll mid = (l + r) / 2;\\r\\n\\t\\tFOR(i, 1, n + 1) FOR(j, 1, n + 1)\\r\\n\\t\\t\\tgraph2[i][j] = mid * min(graph[i][j], INF / mid) - profit[i][j];\\r\\n\\t\\tfloyd_warshall(graph2);\\r\\n\\t\\tbool has_nonnegative_cycle = false;\\r\\n\\t\\tFOR(i, 1, n + 1) if (graph2[i][i] <= 0) has_nonnegative_cycle = true;\\r\\n\\t\\tif (has_nonnegative_cycle) l = mid + 1;\\r\\n\\t\\telse r = mid - 1;\\r\\n\\t}\\r\\n\\tcout << r;\\r\\n\\treturn 0;\\r\\n}\\n\"\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"apio-17-TravelingMerchant","source":"APIO 2017","title":"Traveling Merchant","author":"Andi Qu"},"parent":{"name":"apio-17-TravelingMerchant","relativePath":"apio-17-TravelingMerchant.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"sp-neg","title":"Shortest Paths with Negative Edge Weights"}}}}]},"problemInfo":{"uniqueId":"apio-17-TravelingMerchant","url":"https://oj.uz/problem/view/APIO17_merchant"}},"pageContext":{"id":"apio-17-TravelingMerchant"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}