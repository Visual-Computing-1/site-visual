{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-764-the-bovine-shuffle/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-764\", source = \"USACO Silver 2017 December\", title = \"The Bovine Shuffle\", author = \"Jesse Choe, Tanish Tyagi\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {MATHSPAN, LanguageSection, CPPSection, HeaderLink, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_shuffle_silver_dec17.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vl = vector<ll>;\\r\\nusing vb = vector<bool>;\\r\\nusing pl = pair<ll, ll>;\\r\\nusing vpl = vector<pl>;\\r\\nusing vc = vector<char>;\\r\\nusing vs = vector<string>;\\r\\nusing str = string;\\r\\n\\r\\n#define FastIO ios_base::sync_with_stdio(0); cin.tie(0)\\r\\n#define pb push_back\\r\\n#define mp make_pair\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sor(x) sort(all(x))\\r\\n#define ins insert\\r\\n#define f first\\r\\n#define s second\\r\\n#define sz(x) (ll)(x).size()\\r\\n#define len(x) (ll)(x).length()\\r\\n#define FOR(i, a, b) for(ll i=a; i<b; ++i)\\r\\n#define ROF(i, b, a) for(ll i=(b)-1; i>=a; --i)\\r\\n#define EACH(a, x) for(auto& a: x)\\r\\n#define lb(a, x) lower_bound(all(a), x) - begin(a)\\r\\n#define ub(a, x) upper_bound(all(a), x) - begin(a)\\r\\n\\r\\nvoid setIO(string fileName = \\\"\\\"){\\r\\n\\tFastIO;\\r\\n\\tif(len(fileName)){\\r\\n\\t\\tfreopen((fileName+\\\".in\\\").c_str(), \\\"r\\\", stdin);\\r\\n\\t\\tfreopen((fileName+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main(){\\r\\n\\tsetIO(\\\"shuffle\\\");\\r\\n\\tll n; cin >> n;\\r\\n\\tvl cnt(n), a(n);\\r\\n\\tFOR(i, 0, n){\\r\\n\\t\\tcin >> a[i];\\r\\n\\t\\ta[i]--;\\r\\n\\t\\tcnt[a[i]]++;\\r\\n\\t}\\r\\n\\tll ans = n;\\r\\n\\tqueue<ll> q;\\r\\n\\tFOR(i, 0, n){\\r\\n\\t\\tif(cnt[i] == 0){\\r\\n\\t\\t\\tq.push(i);\\r\\n\\t\\t\\tans--;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\twhile(!q.empty()){\\r\\n\\t\\tll cur = q.front();\\r\\n\\t\\tq.pop();\\r\\n\\t\\tif(--cnt[a[cur]] == 0){\\r\\n\\t\\t\\tq.push(a[cur]);\\r\\n\\t\\t\\tans--;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ans << endl;\\r\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h2, {\n          id: \"java-implementation\",\n          children: [_jsx(_components.a, {\n            href: \"#java-implementation\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java Implementation\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"//created by Tanish Tyagi\\r\\n\\r\\nimport java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class shuffle {\\r\\n\\tpublic static int n;\\r\\n\\tpublic static int[] parent;\\r\\n\\tpublic static int[] currStatus; // 0 is not-visited, 1 is visited, 2 is part of cycle\\r\\n\\tpublic static void count(int i) {\\r\\n\\t\\tHashSet<Integer> there = new HashSet<Integer>();\\r\\n\\t\\twhile (currStatus[i] == 0) {\\r\\n\\t\\t\\tthere.add(i);\\r\\n\\t\\t\\tcurrStatus[i] = 1;\\r\\n\\t\\t\\ti = parent[i];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//cycle is found, mark all nodes that are part of cycle\\r\\n\\t\\tif (there.contains(i)) {\\r\\n\\t\\t\\tint savei = i;\\r\\n\\t\\t\\tdo {\\r\\n\\t\\t\\t\\tcurrStatus[i] = 2;\\r\\n\\t\\t\\t\\ti = parent[i];\\r\\n\\t\\t\\t} while (i != savei);\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\t// Read in the parenting array.\\r\\n\\t\\tBufferedReader stdin = new BufferedReader(new FileReader(\\\"shuffle.in\\\"));\\r\\n\\t\\tStringTokenizer tok = new StringTokenizer(stdin.readLine());\\r\\n\\t\\tn = Integer.parseInt(tok.nextToken());\\r\\n\\t\\tStringTokenizer line = new StringTokenizer(stdin.readLine());\\r\\n\\r\\n\\t\\tparent = new int[n];\\r\\n\\t\\tfor (int i=0; i<n; i++)\\r\\n\\t\\t\\tparent[i] = Integer.parseInt(line.nextToken())-1;\\r\\n\\r\\n\\t\\tcurrStatus = new int[n];\\r\\n\\t\\tfor (int i=0; i<n; i++)\\r\\n\\t\\t\\tif (currStatus[i] == 0)\\r\\n\\t\\t\\t\\tcount(i);\\r\\n\\r\\n\\t\\t// get length of cycle and return\\r\\n\\t\\tint res = 0;\\r\\n\\t\\tfor (int i=0; i<n; i++)\\r\\n\\t\\t\\tif (currStatus[i] == 2)\\r\\n\\t\\t\\t\\tres++;\\r\\n\\r\\n\\t\\tPrintWriter out = new PrintWriter(new FileWriter(\\\"shuffle.out\\\"));\\r\\n\\t\\tout.println(res);\\r\\n\\t\\tout.close();\\r\\n\\t\\tstdin.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-764","source":"USACO Silver 2017 December","title":"The Bovine Shuffle","author":"Jesse Choe, Tanish Tyagi"},"parent":{"name":"usaco-764","relativePath":"usaco-764.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Java Implementation","slug":"java-implementation"}],"py":[]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"func-graphs","title":"(Optional) Introduction to Functional Graphs"}}}}]},"problemInfo":{"uniqueId":"usaco-764","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=764"}},"pageContext":{"id":"usaco-764"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}