{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-963-cow-gymnastics/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-963\", source = \"USACO Bronze 2019 December\", title = \"Cow Gymnastics\", author = \"Krish Thawani, Hua Zhi Vee, Jonathan Paulson, Ben Dodge\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\")\n  }, _props.components), {HeaderLink, Youtube, LanguageSection, CPPSection, JavaSection, PySection, MATHSPAN, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"video-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#video-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Video Solution\"]\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"f_-xoE_qWgw\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"official-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#official-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Official Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_gymnastics_bronze_dec19.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <fstream>\\r\\n#include <vector>\\r\\n\\r\\nusing std::cout;\\r\\nusing std::endl;\\r\\nusing std::vector;\\r\\n\\r\\ntemplate <typename T>\\r\\nint index(const vector<T>& vec, const T& n) {\\r\\n\\tfor (int i = 0; i < vec.size(); i++) {\\r\\n\\t\\tif (vec[i] == n) {\\r\\n\\t\\t\\treturn i;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn -1;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tstd::ifstream read(\\\"gymnastics.in\\\");\\r\\n\\tint session_num;\\r\\n\\tint cow_num;\\r\\n\\tread >> session_num >> cow_num;\\r\\n\\tvector<vector<int>> sessions(session_num, vector<int>(cow_num));\\r\\n\\tfor (int s = 0; s < session_num; s++) {\\r\\n\\t\\tfor (int c = 0; c < cow_num; c++) {\\r\\n\\t\\t\\tread >> sessions[s][c];\\r\\n\\t\\t\\tsessions[s][c]--;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tint better_pairs = 0;\\r\\n\\tfor (int c1 = 0; c1 < cow_num; c1++) {\\r\\n\\t\\tfor (int c2 = 0; c2 < cow_num; c2++) {\\r\\n\\t\\t\\tif (c1 == c2) {\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tbool better = true;\\r\\n\\t\\t\\tfor (const vector<int>& s : sessions) {\\r\\n\\t\\t\\t\\tif (index(s, c1) < index(s, c2)) {\\r\\n\\t\\t\\t\\t\\tbetter = false;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tbetter_pairs += better;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tstd::ofstream(\\\"gymnastics.out\\\") << better_pairs << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Gymnastics {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new FileReader(\\\"gymnastics.in\\\"));\\r\\n\\t\\tStringTokenizer initial = new StringTokenizer(read.readLine());\\r\\n\\t\\tint sessionNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tint cowNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tint[][] sessions = new int[sessionNum][cowNum];\\r\\n\\t\\tfor (int s = 0; s < sessionNum; s++) {\\r\\n\\t\\t\\tStringTokenizer session = new StringTokenizer(read.readLine());\\r\\n\\t\\t\\tfor (int c = 0; c < cowNum; c++) {\\r\\n\\t\\t\\t\\tsessions[s][c] = Integer.parseInt(session.nextToken()) - 1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint betterPairs = 0;\\r\\n\\t\\tfor (int c1 = 0; c1 < cowNum; c1++) {\\r\\n\\t\\t\\tfor (int c2 = 0; c2 < cowNum; c2++) {\\r\\n\\t\\t\\t\\tif (c1 == c2) {\\r\\n\\t\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tboolean valid = true;\\r\\n\\t\\t\\t\\tfor (int[] s : sessions) {\\r\\n\\t\\t\\t\\t\\tif (index(s, c1) < index(s, c2)) {\\r\\n\\t\\t\\t\\t\\t\\tvalid = false;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif (valid) {\\r\\n\\t\\t\\t\\t\\tbetterPairs++;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tPrintWriter written = new PrintWriter(\\\"gymnastics.out\\\");\\r\\n\\t\\twritten.println(betterPairs);\\r\\n\\t\\twritten.close();\\r\\n\\t}\\r\\n\\r\\n\\tstatic int index(int[] arr, int n) {\\r\\n\\t\\tfor (int i = 0; i < arr.length; i++) {\\r\\n\\t\\t\\tif (arr[i] == n) {\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"with open('gymnastics.in') as read:\\r\\n\\tsession_num, cow_num = [int(i) for i in read.readline().split()]\\r\\n\\tsessions = []\\r\\n\\tfor _ in range(session_num):\\r\\n\\t\\tsessions.append([int(c) - 1 for c in read.readline().split()])\\r\\n\\r\\nbetter_pairs = 0\\r\\nfor c1 in range(cow_num):\\r\\n\\tfor c2 in range(cow_num):\\r\\n\\t\\tif c1 == c2:\\r\\n\\t\\t\\tcontinue\\r\\n\\r\\n\\t\\tfor s in sessions:\\r\\n\\t\\t\\tif s.index(c1) < s.index(c2):\\r\\n\\t\\t\\t\\tbreak\\r\\n\\t\\telse:\\r\\n\\t\\t\\tbetter_pairs += 1\\r\\n\\r\\nprint(better_pairs, file=open('gymnastics.out', 'w'))\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"alternate-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#alternate-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Alternate Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We generate the ranking as we read the data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can create a 2D array of booleans which states if cow \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \" has a ranking higher than\\r\\ncow \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"B\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\\\"application/x-tex\\\">B</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span>\"\n      }), \" in any point of time. After reading every ranking, for all \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\frac{N(N-1)}{2}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mfrac><mrow><mi>N</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo>âˆ’</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\frac{N(N-1)}{2}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.355em;vertical-align:-0.345em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.01em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.485em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mbin mtight\\\">âˆ’</span><span class=\\\"mord mtight\\\">1</span><span class=\\\"mclose mtight\\\">)</span></span></span></span></span><span class=\\\"vlist-s\\\">â€‹</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span></span></span></span>\"\n      }), \"\\r\\npairs we set \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b[A][B]=\\\\text{true}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mtext>true</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">b[A][B]=\\\\text{true}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">true</span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Then we iterate though all pairs in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N^2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N^2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time and check if they\\r\\nsatisfy the condition. At least one of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b[A][B]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">b[A][B]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b[B][A]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi><mo stretchy=\\\"false\\\">[</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">b[B][A]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" must be true, and\\r\\nhence we only need to check if they are both true. If one of them is false, we\\r\\nincrement our \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{count}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">count</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{count}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5536em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">count</span></span></span></span></span>\"\n      }), \" by 1. This is because if both are true, then\\r\\nthe pair switches ranking order at some point and is not valid. If only one is true,\\r\\nthen the pair maintained a consistent order.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that at least one of them must be true, since in every ranking either \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A>B\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi><mo>&gt;</mo><mi>B</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A&gt;B</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7224em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span>\"\n      }), \"\\r\\nor \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"B>A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>B</mi><mo>&gt;</mo><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">B&gt;A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7224em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(K \\\\cdot N^2)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>K</mi><mo>â‹…</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(K \\\\cdot N^2)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">K</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">â‹…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <fstream>\\r\\n#include <vector>\\r\\n\\r\\nusing std::cout;\\r\\nusing std::endl;\\r\\nusing std::vector;\\r\\n\\r\\nint main() {\\r\\n\\tstd::ifstream read(\\\"gymnastics.in\\\");\\r\\n\\tint session_num;\\r\\n\\tint cow_num;\\r\\n\\tread >> session_num >> cow_num;\\r\\n\\t\\r\\n\\t/*\\r\\n\\t * better[c1][c2] = true\\r\\n\\t * if c1 was better than c2 in *any* session (0-indexed).\\r\\n\\t */\\r\\n\\tvector<vector<bool>> better(cow_num, vector<bool>(cow_num));\\r\\n\\tfor (int s = 0; s < session_num; s++) {\\r\\n\\t\\tvector<int> session(cow_num);\\r\\n\\t\\tfor (int& c : session) {\\r\\n\\t\\t\\tread >> c;\\r\\n\\t\\t\\tc--;\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < session.size(); i++) {\\r\\n\\t\\t\\tfor (int j = i + 1; j < session.size(); j++) {\\r\\n\\t\\t\\t\\tbetter[session[j]][session[i]] = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tint better_pairs = 0;\\r\\n\\tfor (int c1 = 0; c1 < cow_num; c1++) {\\r\\n\\t\\tfor (int c2 = c1 + 1; c2 < cow_num; c2++) {\\r\\n\\t\\t\\tbetter_pairs += !better[c1][c2] || !better[c2][c1];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tstd::ofstream(\\\"gymnastics.out\\\") << better_pairs << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Gymnastics {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new FileReader(\\\"gymnastics.in\\\"));\\r\\n\\r\\n\\t\\tStringTokenizer initial = new StringTokenizer(read.readLine());\\r\\n\\t\\tint sessionNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tint cowNum = Integer.parseInt(initial.nextToken());\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t * better[c1][c2] = true\\r\\n\\t\\t * if c1 was better than c2 in *any* session (0-indexed).\\r\\n\\t\\t */\\r\\n\\t\\tboolean[][] better = new boolean[cowNum][cowNum];\\r\\n\\t\\tfor (int s = 0; s < sessionNum; s++) {\\r\\n\\t\\t\\tStringTokenizer line = new StringTokenizer(read.readLine());\\r\\n\\t\\t\\tint[] session = new int[cowNum];\\r\\n\\t\\t\\tfor (int c = 0; c < cowNum; c++) {\\r\\n\\t\\t\\t\\tsession[c] = Integer.parseInt(line.nextToken()) - 1;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor (int i = 0; i < session.length; i++) {\\r\\n\\t\\t\\t\\tfor (int j = i + 1; j < session.length; j++) {\\r\\n\\t\\t\\t\\t\\tbetter[session[j]][session[i]] = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint betterPairs = 0;\\r\\n\\t\\tfor (int c1 = 0; c1 < cowNum; c1++) {\\r\\n\\t\\t\\tfor (int c2 = c1 + 1; c2 < cowNum; c2++) {\\r\\n\\t\\t\\t\\tif (!better[c1][c2] || !better[c2][c1]) {\\r\\n\\t\\t\\t\\t\\tbetterPairs++;\\r\\n\\t\\t\\t\\t}\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tPrintWriter written = new PrintWriter(\\\"gymnastics.out\\\");\\r\\n\\t\\twritten.println(betterPairs);\\r\\n\\t\\twritten.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"with open('gymnastics.in') as read:\\r\\n\\tsession_num, cow_num = [int(i) for i in read.readline().split()]\\r\\n\\t\\\"\\\"\\\"\\r\\n\\tbetter[c1][c2] = True\\r\\n\\tif c1 was better than c2 in *any* session (0-indexed).\\r\\n\\t\\\"\\\"\\\"\\r\\n\\tbetter = [[False for _ in range(cow_num)] for _ in range(cow_num)]\\r\\n\\tfor _ in range(session_num):\\r\\n\\t\\tsession = [int(c) - 1 for c in read.readline().split()]\\r\\n\\t\\tfor i in range(len(session)):\\r\\n\\t\\t\\tfor j in range(i + 1, len(session)):\\r\\n\\t\\t\\t\\tbetter[session[j]][session[i]] = True\\r\\n\\r\\nbetter_pairs = 0\\r\\nfor c1 in range(cow_num):\\r\\n\\tfor c2 in range(c1 + 1, cow_num):\\r\\n\\t\\tbetter_pairs += not better[c1][c2] or not better[c2][c1]\\r\\n\\r\\nprint(better_pairs, file=open('gymnastics.out', 'w'))\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-963","source":"USACO Bronze 2019 December","title":"Cow Gymnastics","author":"Krish Thawani, Hua Zhi Vee, Jonathan Paulson, Ben Dodge"},"parent":{"name":"usaco-963","relativePath":"usaco-963.mdx"},"toc":{"cpp":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Official Solution","slug":"official-solution"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Official Solution","slug":"official-solution"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Video Solution","slug":"video-solution"},{"depth":2,"value":"Official Solution","slug":"official-solution"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-complete","title":"Basic Complete Search"}}}}]},"problemInfo":{"uniqueId":"usaco-963","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=963"}},"pageContext":{"id":"usaco-963"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}