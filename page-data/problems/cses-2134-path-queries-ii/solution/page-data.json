{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-2134-path-queries-ii/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-2134\", source = \"CSES\", title = \"Path Queries II\", author = \"Dong Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This problem can solved with \", _jsx(_components.a, {\n        href: \"/plat/hld\",\n        children: \"Heavy Light Decomposition\"\n      }), \"; we can\\r\\nlabel each edge as either heavy or light. We can use a segment tree to keep\\r\\ntrack of the maximum value in each heavy chain.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, to change the value at node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \", we can just update the value in the\\r\\nsegment tree. To query the maximum value in the path from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \", we first\\r\\nfind the \", _jsx(_components.a, {\n        href: \"/gold/tree-euler#lca\",\n        children: \"Lowest Common Ancestor\"\n      }), \". We combine the path\\r\\nfrom \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"lca(a,b)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi><mi>c</mi><mi>a</mi><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">lca(a,b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and the path from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"lca(a,b)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi><mi>c</mi><mi>a</mi><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">lca(a,b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" to find our answer.\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(CPPSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"Time complexity: \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal O(N\\\\log^2 N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><msup><mrow><mi>log</mi><mo>‚Å°</mo></mrow><mn>2</mn></msup><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N\\\\log^2 N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1484em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8984em;\\\"><span style=\\\"top:-3.1473em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          })]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include \\\"bits/stdc++.h\\\"\\r\\nusing namespace std;\\r\\n\\r\\nconst int N = 2e5+5;\\r\\nconst int D = 19;\\r\\nconst int S = (1<<D);\\r\\n\\r\\nint n, q, v[N];\\r\\nvector<int> adj[N];\\r\\n\\r\\nint sz[N], p[N][D], dep[N];\\r\\nint st[S], id[N], tp[N];\\r\\n\\r\\nvoid update(int idx, int val, int i=1, int l=1, int r=n) {\\r\\n\\tif(l == r) { st[i] = val; return; }\\r\\n\\tint m = (l+r)/2;\\r\\n\\tif(idx <= m) update(idx, val, i*2, l, m);\\r\\n\\telse update(idx,  val, i*2+1, m+1, r);\\r\\n\\tst[i] = max(st[i*2], st[i*2+1]);\\r\\n}\\r\\nint query(int lo, int hi, int i=1, int l=1, int r=n) {\\r\\n\\tif(lo > r || hi < l) return 0;\\r\\n\\tif(lo <= l && r <= hi) return st[i];\\r\\n\\tint m = (l+r)/2;\\r\\n\\treturn max(query(lo, hi, i*2, l, m),\\r\\n\\t\\t\\tquery(lo, hi, i*2+1, m+1, r));\\r\\n}\\r\\n\\r\\nint dfs_sz(int cur, int par) {\\r\\n\\tsz[cur] = 1;\\r\\n\\tfor(int chi : adj[cur]) {\\r\\n\\t\\tif(chi == par) continue;\\r\\n\\t\\tdep[chi] = dep[cur] + 1;\\r\\n\\t\\tp[chi][0] = cur;\\r\\n\\t\\tsz[cur] += dfs_sz(chi, cur);\\r\\n\\t}\\r\\n\\treturn sz[cur];\\r\\n}\\r\\nvoid init_lca() {\\r\\n\\tfor(int d=1; d<18; d++)\\r\\n\\tfor(int i=1; i<=n; i++)\\r\\n\\t\\tp[i][d] = p[p[i][d-1]][d-1];\\r\\n}\\r\\nint ct = 1;\\r\\nvoid dfs_hld(int cur, int par, int top) {\\r\\n\\tid[cur] = ct++;\\r\\n\\ttp[cur] = top;\\r\\n\\tupdate(id[cur], v[cur]);\\r\\n\\tint h_chi = -1, h_sz = -1;\\r\\n\\tfor(int chi : adj[cur]) {\\r\\n\\t\\tif(chi == par) continue;\\r\\n\\t\\tif(sz[chi] > h_sz) {\\r\\n\\t\\t\\th_sz = sz[chi];\\r\\n\\t\\t\\th_chi = chi;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tif(h_chi == -1) return;\\r\\n\\tdfs_hld(h_chi, cur, top);\\r\\n\\tfor(int chi : adj[cur]) {\\r\\n\\t\\tif(chi == par || chi == h_chi) continue;\\r\\n\\t\\tdfs_hld(chi, cur, chi);\\r\\n\\t}\\r\\n}\\r\\nint lca(int a, int b) {\\r\\n\\tif(dep[a] < dep[b]) swap(a, b);\\r\\n\\tfor(int d=D-1; d>=0; d--) {\\r\\n\\t\\tif(dep[a] - (1<<d) >= dep[b]) {\\r\\n\\t\\t\\ta = p[a][d];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfor(int d=D-1; d>=0; d--) {\\r\\n\\t\\tif(p[a][d] != p[b][d]) {\\r\\n\\t\\t\\ta = p[a][d];\\r\\n\\t\\t\\tb = p[b][d];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tif(a != b) {\\r\\n\\t\\ta = p[a][0];\\r\\n\\t\\tb = p[b][0];\\r\\n\\t}\\r\\n\\treturn a;\\r\\n}\\r\\nint path(int chi, int par) {\\r\\n\\tint ret = 0;\\r\\n\\twhile(chi != par) {\\r\\n\\t\\tif(tp[chi] == chi) {\\r\\n\\t\\t\\tret = max(ret, v[chi]);\\r\\n\\t\\t\\tchi = p[chi][0];\\r\\n\\t\\t} else if(dep[tp[chi]] > dep[par]) {\\r\\n\\t\\t\\tret = max(ret, query(id[tp[chi]], id[chi]));\\r\\n\\t\\t\\tchi = p[tp[chi]][0];\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tret = max(ret, query(id[par]+1, id[chi]));\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn ret;\\r\\n}\\r\\nint main() {\\r\\n\\r\\n\\tscanf(\\\"%d%d\\\", &n, &q);\\r\\n\\tfor(int i=1; i<=n; i++) scanf(\\\"%d\\\", &v[i]);\\r\\n\\tfor(int i=2; i<=n; i++) {\\r\\n\\t\\tint a, b;\\r\\n\\t\\tscanf(\\\"%d%d\\\", &a, &b);\\r\\n\\t\\tadj[a].push_back(b);\\r\\n\\t\\tadj[b].push_back(a);\\r\\n\\t}\\r\\n\\tdfs_sz(1, 1);\\r\\n\\tinit_lca();\\r\\n\\tmemset(st, 0, sizeof st);\\r\\n\\tdfs_hld(1, 1, 1);\\r\\n\\twhile(q--) {\\r\\n\\t\\tint t;\\r\\n\\t\\tscanf(\\\"%d\\\", &t);\\r\\n\\t\\tif(t == 1) {\\r\\n\\t\\t\\tint s, x;\\r\\n\\t\\t\\tscanf(\\\"%d%d\\\", &s, &x);\\r\\n\\t\\t\\tv[s] = x;\\r\\n\\t\\t\\tupdate(id[s], v[s]);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tint a, b;\\r\\n\\t\\t\\tscanf(\\\"%d%d\\\", &a, &b);\\r\\n\\t\\t\\tint c = lca(a, b);\\r\\n\\t\\t\\tint res = max(max(path(a,c), path(b,c)), v[c]);\\r\\n\\t\\t\\tprintf(\\\"%d \\\", res);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-2134","source":"CSES","title":"Path Queries II","author":"Dong Liu"},"parent":{"name":"cses-2134","relativePath":"cses-2134.mdx"},"toc":{"cpp":[{"depth":1,"value":"Solution","slug":"solution"}],"java":[{"depth":1,"value":"Solution","slug":"solution"}],"py":[{"depth":1,"value":"Solution","slug":"solution"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"hld","title":"Heavy-Light Decomposition"}}}}]},"problemInfo":{"uniqueId":"cses-2134","url":"https://cses.fi/problemset/task/2134"}},"pageContext":{"id":"cses-2134"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}