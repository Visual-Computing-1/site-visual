{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-810-rest-stops/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-810\", source = \"USACO Silver 2018 Silver\", title = \"Rest Stops\", author = \"Vivian Han\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Suppose that early in the hike, there is a rest stop with tastiness \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \",\\r\\nbut later there is a rest stop with tastiness \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"B\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\\\"application/x-tex\\\">B</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span>\"\n      }), \" where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"B>A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>B</mi><mo>&gt;</mo><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">B&gt;A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7224em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \". Then, it is never\\r\\noptimal for Bessie to spend any time at the first rest stop with tastiness \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \".\\r\\nIf she did, she could spend the same amount of time at the later rest stop\\r\\ninstead and earn more tastiness units; she would still never be behind Farmer\\r\\nJohn. So, the only rest stops that Bessie might stop at are those that have\\r\\nmore tastiness than any subsequent rest stops.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can find these \\\"right-maximal\\\" rest stops in a single right-to-left (or end-to-start)\\r\\nscan, keeping track of the largest tastiness seen so far.\\r\\nIf the current stop exceeds the largest value seen so far, it is \\\"right-maximal.\\\"\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, we can perform a greedy algorithm: never stop at non-right-maximal\\r\\nrest stops. Bessie should stop at a right-maximal rest stop as long as possible\\r\\n(i.e., until Farmer John catches up with her). Then she proceeds until the next\\r\\nright-maximal rest stop.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To see the correctness of this greedy algorithm, suppose Bessie did not spend as\\r\\nlong as possible at some right-maximal rest stop \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \". Then she would leave this\\r\\nrest stop \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" seconds early, for some positive \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \". Suppose the next place\\r\\nBessie stops is rest stop \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"r\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n      }), \". We could improve Bessie's tastiness intake by\\r\\nhaving her spend \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" less second at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"r\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n      }), \", and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" more second at rest stop \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \".\\r\\nIt can be verified that Bessie will still never be behind Farmer John, and\\r\\nsince the tastiness at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"R\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\\\"application/x-tex\\\">R</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.00773em;\\\">R</span></span></span></span>\"\n      }), \" is greater than the tastiness at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"r\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n      }), \", we improved\\r\\nBessie's outcome. Therefore no optimal solution will leave a right-maximal rest\\r\\nstop early, and our greedy algorithm is correct.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <fstream>\\r\\nusing namespace std;\\r\\n\\r\\nconst int MAX_LEN = 100000;\\r\\nint x[MAX_LEN];  // x: position of each stop\\r\\nint c[MAX_LEN];  // c: tastiness value of each stop\\r\\nbool good[MAX_LEN];\\r\\n\\r\\nint main() {\\r\\n\\tint trailLen, stopNum, fRate, bRate;\\r\\n\\tifstream in(\\\"reststops.in\\\");\\r\\n\\tin >> trailLen >> stopNum >> fRate >> bRate;\\r\\n\\t// scan in rest stop data\\r\\n\\tfor (int i = 0 ; i < stopNum; i++) {\\r\\n\\t\\tin >> x[i] >> c[i];\\r\\n\\t}\\r\\n\\r\\n\\t// find all \\\"best\\\" stops\\r\\n\\tint max = 0;\\r\\n\\tfor (int i = stopNum-1; i >= 0; i--) {\\r\\n\\t\\tgood[i] = false;\\r\\n\\t\\tif (c[i] > max) {  \\r\\n\\t\\t\\t// there are no stops after stop i that are \\\"better\\\"\\r\\n\\t\\t\\tgood[i] = true;\\r\\n\\t\\t\\tmax = c[i];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// simulate the whole trail\\r\\n\\tlong long prevStopPos = 0;\\r\\n\\tlong long ans = 0;\\r\\n\\tfor (int i = 0; i < stopNum; i++) {\\r\\n\\t\\tif (good[i]) {\\r\\n\\t\\t\\tlong long travelDist = x[i] - prevStopPos;\\r\\n\\t\\t\\tlong long fTime = travelDist * fRate;\\r\\n\\t\\t\\tlong long bTime = travelDist * bRate;\\r\\n\\t\\t\\tlong long restTime = fTime - bTime;\\r\\n\\t\\t\\tans += restTime * c[i];\\r\\n\\t\\t\\tprevStopPos = x[i];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tofstream out;\\r\\n\\tout.open(\\\"reststops.out\\\");\\r\\n\\tout << ans << endl;\\r\\n\\tout.close();\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\n\\r\\npublic class RestStops {\\r\\n\\r\\n\\tstatic int[] x, c;\\r\\n\\t// x: position of each stop\\r\\n\\t// c: tastiness value of each stop\\r\\n\\tstatic boolean[] good;\\r\\n\\r\\n\\tpublic static void main(String[] args) throws IOException{\\r\\n\\t\\tBufferedReader br = new BufferedReader(new FileReader(\\\"reststops.in\\\"));\\r\\n\\t\\tString[] line = br.readLine().split(\\\" \\\");\\r\\n\\t\\tint trailLen = Integer.parseInt(line[0]);  \\r\\n\\t\\t// trail length is never used...\\r\\n\\t\\tint stopNum = Integer.parseInt(line[1]);\\r\\n\\t\\tint fRate = Integer.parseInt(line[2]);\\r\\n\\t\\tint bRate = Integer.parseInt(line[3]);\\r\\n\\r\\n\\t\\tx = new int[stopNum];\\r\\n\\t\\tc = new int[stopNum];\\r\\n\\t\\tgood = new boolean[stopNum];\\r\\n\\r\\n\\t\\t// scan in rest stop data\\r\\n\\t\\tfor (int i = 0 ; i < stopNum; i++) {\\r\\n\\t\\t\\tline = br.readLine().split(\\\" \\\");\\r\\n\\t\\t\\tx[i] = Integer.parseInt(line[0]);\\r\\n\\t\\t\\tc[i] = Integer.parseInt(line[1]);\\r\\n\\t\\t}\\r\\n\\t\\tbr.close();\\r\\n\\r\\n\\t\\t// find all \\\"best\\\" stops\\r\\n\\t\\tint max = 0;\\r\\n\\t\\tfor (int i = stopNum-1; i >= 0; i--) {\\r\\n\\t\\t\\tif (c[i] > max) {  \\r\\n\\t\\t\\t\\t// there are no stops after stop i that are \\\"better\\\"\\r\\n\\t\\t\\t\\tgood[i] = true;\\r\\n\\t\\t\\t\\tmax = c[i];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// simulate the whole trail\\r\\n\\t\\tint prevStopPos = 0;\\r\\n\\t\\tlong ans = 0;\\r\\n\\t\\tfor (int i = 0; i < stopNum; i++) {\\r\\n\\t\\t\\tif (good[i]) {\\r\\n\\t\\t\\t\\tlong travelDist = x[i] - prevStopPos;\\r\\n\\t\\t\\t\\tlong fTime = travelDist * fRate;\\r\\n\\t\\t\\t\\tlong bTime = travelDist * bRate;\\r\\n\\t\\t\\t\\tlong restTime = fTime - bTime;\\r\\n\\t\\t\\t\\tans += restTime * c[i];\\r\\n\\t\\t\\t\\tprevStopPos = x[i];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tBufferedWriter bw = new BufferedWriter(new FileWriter(\\\"reststops.out\\\"));\\r\\n\\t\\tbw.write(ans + \\\"\\\\n\\\");\\r\\n\\t\\tbw.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-810","source":"USACO Silver 2018 Silver","title":"Rest Stops","author":"Vivian Han"},"parent":{"name":"usaco-810","relativePath":"usaco-810.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"silver-conclusion","title":"Additional Practice for USACO Silver"}}}}]},"problemInfo":{"uniqueId":"usaco-810","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=810"}},"pageContext":{"id":"usaco-810"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}