{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/usaco-715-why-did-the-cow-cross-the-road-ii/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"usaco-715\", source = \"USACO Silver 2017 February\", title = \"Why Did the Cow Cross the Road II\", author = \"Albert Zhu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://www.usaco.org/current/data/sol_maxcross_silver_feb17.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Official Analysis\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nvoid setIO(string prob) {\\r\\n\\tfreopen((prob + \\\".in\\\").c_str(), \\\"r\\\", stdin);\\r\\n\\tfreopen((prob + \\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n}\\r\\n\\r\\nconst int MAX_N = 1e5;\\r\\n\\r\\nint sigs[MAX_N];\\r\\nint presum[MAX_N];\\r\\n\\r\\nint main() {\\r\\n\\tsetIO(\\\"maxcross\\\");\\r\\n\\tint n, k, b;\\r\\n\\tcin >> n >> k >> b;\\r\\n\\t\\r\\n\\t// input broken signals\\r\\n\\tfor (int i = 0; i < b; i++) {\\r\\n\\t\\tint x;\\r\\n\\t\\tcin >> x;\\r\\n\\t\\tsigs[x]++;\\r\\n\\t}\\r\\n\\t\\r\\n\\t// prefix sums precomputation\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tpresum[i + 1] = sigs[i + 1] + presum[i];\\r\\n\\t}\\r\\n\\r\\n\\tint ret = INT_MAX;\\r\\n\\t// find the answer\\r\\n\\tfor (int i = 0; i <= n - k; i++) {\\r\\n\\t\\tret = min(ret, presum[i + k] - presum[i]);\\r\\n\\t}\\r\\n\\tcout << ret << '\\\\n';\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class MaxCross {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader in = new BufferedReader(new FileReader(\\\"maxcross.in\\\"));\\r\\n\\t\\tPrintWriter pw = new PrintWriter(\\\"maxcross.out\\\");\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(in.readLine());\\r\\n\\t\\t\\r\\n\\t\\tint n = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint k = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint b = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\r\\n\\t\\tint[] sigs = new int[n + 1];\\r\\n\\t\\tint[] presum = new int[n + 1];\\r\\n\\r\\n\\t\\t// input broken signals\\r\\n\\t\\tfor (int i = 0; i < b; i++) {\\r\\n\\t\\t\\tsigs[Integer.parseInt(in.readLine())]++;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// prefix sums precomputation\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tpresum[i + 1] = sigs[i + 1] + presum[i];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tint ret = n + 1;\\r\\n\\t\\t// find the answer\\r\\n\\t\\tfor (int i = 0; i <= n - k; i++) {\\r\\n\\t\\t\\tret = Math.min(ret, presum[i + k] - presum[i]);\\r\\n\\t\\t}\\r\\n\\t\\tpw.println(ret);\\r\\n\\t\\tpw.close();\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"usaco-715","source":"USACO Silver 2017 February","title":"Why Did the Cow Cross the Road II","author":"Albert Zhu"},"parent":{"name":"usaco-715","relativePath":"usaco-715.mdx"},"toc":{"cpp":[{"depth":2,"value":"Implementation","slug":"implementation"}],"java":[{"depth":2,"value":"Implementation","slug":"implementation"}],"py":[{"depth":2,"value":"Implementation","slug":"implementation"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"prefix-sums","title":"Introduction to Prefix Sums"}}}},{"node":{"module":{"frontmatter":{"id":"visual","title":"Visual"}}}}]},"problemInfo":{"uniqueId":"usaco-715","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=715"}},"pageContext":{"id":"usaco-715"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}