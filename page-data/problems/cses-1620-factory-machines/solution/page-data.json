{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1620-factory-machines/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1620\", source = \"CSES\", title = \"Factory Machines\", author = \"Michael Cao\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this problem, you're given \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" machines and asked the minimum time these\\r\\nmachines need to work to create \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" products such that the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \"-th machine\\r\\ncreates a product in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">k_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8444em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"binary-search\",\n      children: [_jsx(_components.a, {\n        href: \"#binary-search\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Binary Search\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Observe that the time needed to create at least \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" products is monotonic. In\\r\\nother words, if the given machines can create \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" products in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">y_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" time, then\\r\\nthe same machines can create at least \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" products in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y_2 > y_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>&gt;</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">y_2 &gt; y_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7335em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" time. Using\\r\\nthis property, we can binary search over the answer. Read\\r\\n\", _jsx(_components.a, {\n        href: \"/silver/binary-search\",\n        children: \"this module\"\n      }), \" for more information.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For some value we binary search for, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"ans\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">ans</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">an</span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \", we are left with the task of\\r\\nchecking whether we can create \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \" products in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"ans\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">ans</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">an</span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \" time. To do this, observe\\r\\nthat it's optimal for every machine to work simultaneously. Then, in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"ans\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">ans</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">an</span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \" time,\\r\\nmachine \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" can create \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\lfloor \\\\frac{ans}{k_i} \\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><msub><mi>k</mi><mi>i</mi></msub></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lfloor \\\\frac{ans}{k_i} \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1951em;vertical-align:-0.4451em;\\\"></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6954em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3281em;\\\"><span style=\\\"top:-2.357em;margin-left:-0.0315em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">an</span><span class=\\\"mord mathnormal mtight\\\">s</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.4451em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      }), \" products.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Overall, the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" machines can create\\r\\n‎‎\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\sum_{i=1}^{n} \\\\lfloor \\\\frac{ans}{k_i} \\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><msub><mi>k</mi><mi>i</mi></msub></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum_{i=1}^{n} \\\\lfloor \\\\frac{ans}{k_i} \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2494em;vertical-align:-0.4451em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop op-symbol small-op\\\" style=\\\"position:relative;top:0em;\\\">∑</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8043em;\\\"><span style=\\\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.2029em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2997em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6954em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3281em;\\\"><span style=\\\"top:-2.357em;margin-left:-0.0315em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">an</span><span class=\\\"mord mathnormal mtight\\\">s</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.4451em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      }), \" products. If this sum\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\geq t\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≥</mo><mi>t</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\geq t</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6151em;\\\"></span><span class=\\\"mord mathnormal\\\">t</span></span></span></span>\"\n      }), \", then \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"ans\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding=\\\"application/x-tex\\\">ans</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">an</span><span class=\\\"mord mathnormal\\\">s</span></span></span></span>\"\n      }), \" is valid.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tint n; ll t; cin >> n >> t;\\r\\n\\tvector<ll> k(n);\\r\\n\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\tcin >> k[i];\\r\\n\\t}\\r\\n\\tll lo = 0; ll hi = 1e18; ll ans = 0;\\r\\n\\twhile (lo <= hi) {\\r\\n\\t\\tll mid = (lo + hi) /2;\\r\\n\\t\\tll sum = 0;\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tsum += (mid / k[i]);\\r\\n\\t\\t\\tif(sum >= t){ //deal with overflow\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tif (sum >= t) {\\r\\n\\t\\t\\tans = mid;\\r\\n\\t\\t\\thi = mid-1;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tlo = mid+1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tcout << ans << \\\"\\\\n\\\";\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class FactoryMachines {\\r\\n\\tpublic static void main(String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\r\\n\\t\\tint n = io.nextInt();  // number of machines\\r\\n\\t\\tint goal = io.nextInt();\\r\\n\\r\\n\\t\\tint[] machines = new int[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tmachines[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlong lo = 0;\\r\\n\\t\\tlong hi = (long) 1e18;\\r\\n\\t\\tlong ans = 0;\\r\\n\\t\\twhile (lo <= hi) {\\r\\n\\t\\t\\tlong mid = (lo + hi) / 2;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tlong n_produced = 0;\\r\\n\\t\\t\\tfor (int machine : machines) {\\r\\n\\t\\t\\t\\tn_produced += mid / machine;\\r\\n\\t\\t\\t\\t// Break as soon as we hit our goal\\r\\n\\t\\t\\t\\tif (n_produced >= goal) {\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (n_produced >= goal) {\\r\\n\\t\\t\\t\\tans = mid;\\r\\n\\t\\t\\t\\thi = mid - 1;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tlo = mid + 1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tio.println(ans);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\t\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"_, goal = map(int, input().split())\\r\\nmachines = list(map(int, input().split()))\\r\\n\\r\\nlo = 0\\r\\nhi = int(1e18)\\r\\nans = 0\\r\\nwhile lo <= hi:\\r\\n\\tmid = (lo + hi) // 2\\r\\n\\r\\n\\tn_produced = 0\\r\\n\\tfor machine in machines:\\r\\n\\t\\tn_produced += mid // machine\\r\\n\\r\\n\\tif n_produced >= goal:\\r\\n\\t\\tans = mid\\r\\n\\t\\thi = mid - 1\\r\\n\\telse:\\r\\n\\t\\tlo = mid + 1\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1620","source":"CSES","title":"Factory Machines","author":"Michael Cao"},"parent":{"name":"cses-1620","relativePath":"cses-1620.mdx"},"toc":{"cpp":[{"depth":1,"value":"Binary Search","slug":"binary-search"}],"java":[{"depth":1,"value":"Binary Search","slug":"binary-search"}],"py":[{"depth":1,"value":"Binary Search","slug":"binary-search"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"binary-search","title":"Binary Search"}}}}]},"problemInfo":{"uniqueId":"cses-1620","url":"https://cses.fi/problemset/task/1620"}},"pageContext":{"id":"cses-1620"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}