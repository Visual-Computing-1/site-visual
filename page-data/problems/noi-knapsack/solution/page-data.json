{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/noi-knapsack/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"noi-18-knapsack\", source = \"Singapore NOI\", title = \"Knapsack\", author = \"Kevin Sheng\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    br: \"br\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Warning: _missingComponent(\"Warning\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, Warning, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that the bound on \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \" is rather small and that \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq W_i \\\\leq S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>W</mi><mi>i</mi></msub><mo>≤</mo><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq W_i \\\\leq S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">W</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \", so we can group the items together by weight.\", _jsx(_components.br, {}), \"\\nAfter this, we can implement the knapsack problem on the grouped together items. We also sort items of the same weight by reverse value, as it is always optimal to select the item with greater value among two items of the same weight.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that you only need to consider the most valuable \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\lfloor\\\\frac{S}{i}\\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mi>S</mi><mi>i</mi></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lfloor\\\\frac{S}{i}\\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2173em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8723em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      }), \"\\r\\nitems for the set of all objects with weight \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \".\\r\\nSo in total you will need to consider \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\sum_{i=1}^S \\\\lfloor\\\\frac{S}{i}\\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>S</mi></msubsup><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mi>S</mi><mi>i</mi></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum_{i=1}^S \\\\lfloor\\\\frac{S}{i}\\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.3262em;vertical-align:-0.345em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop op-symbol small-op\\\" style=\\\"position:relative;top:0em;\\\">∑</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9812em;\\\"><span style=\\\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.2029em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2997em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8723em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      }), \" items.\\r\\nThis expression approximates to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(S \\\\log S)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>S</mi><mi>log</mi><mo>⁡</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(S \\\\log S)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\ln(1+S) < \\\\sum_{i=1}^S \\\\frac{1}{i} < 1 + \\\\ln(S)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo><mo>&lt;</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>S</mi></msubsup><mfrac><mn>1</mn><mi>i</mi></mfrac><mo>&lt;</mo><mn>1</mn><mo>+</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\ln(1+S) &lt; \\\\sum_{i=1}^S \\\\frac{1}{i} &lt; 1 + \\\\ln(S)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">ln</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.3262em;vertical-align:-0.345em;\\\"></span><span class=\\\"mop\\\"><span class=\\\"mop op-symbol small-op\\\" style=\\\"position:relative;top:0em;\\\">∑</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9812em;\\\"><span style=\\\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.2029em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2997em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8451em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">ln</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\\r\\nEach item weight takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(S)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(S)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" to process, making the total time\\r\\ncomplexity \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(S^2 \\\\log S)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>S</mi><mn>2</mn></msup><mi>log</mi><mo>⁡</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(S^2 \\\\log S)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implemention\",\n      children: [_jsx(_components.a, {\n        href: \"#implemention\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implemention\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(S^2 \\\\log S)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><msup><mi>S</mi><mn>2</mn></msup><mi>log</mi><mo>⁡</mo><mi>S</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(S^2 \\\\log S)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <map>\\r\\n#include <algorithm>\\r\\n\\r\\nusing std::cout;\\r\\nusing std::endl;\\r\\nusing std::vector;\\r\\nusing std::pair;\\r\\n\\r\\nint main() {\\r\\n\\tint limit;\\r\\n\\tint type_num;\\r\\n\\tstd::cin >> limit >> type_num;\\r\\n\\t\\r\\n\\tstd::map<int, vector<pair<int, int>>> by_weight;\\r\\n\\tfor (int t = 0; t < type_num; t++) {\\r\\n\\t\\tint value;\\r\\n\\t\\tint weight;\\r\\n\\t\\tint amt;\\r\\n\\t\\tstd::cin >> value >> weight >> amt;\\r\\n\\t\\tif (weight <= limit && amt > 0) {\\r\\n\\t\\t\\tby_weight[weight].push_back({value, amt});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t\\r\\n\\t/*\\r\\n\\t * best[i][j] contains the most value we can\\r\\n\\t * get using j weight and the first i weight types\\r\\n\\t */\\r\\n\\tvector<vector<long long>> best(\\r\\n\\t\\tby_weight.size() + 1, vector<long long>(limit + 1, INT32_MIN)\\r\\n\\t);\\r\\n\\tbest[0][0] = 0;\\r\\n\\tint at = 1;\\r\\n\\tfor (auto& [w, items] : by_weight) {\\r\\n\\t\\t// sort items in reverse order by value\\r\\n\\t\\tstd::sort(items.begin(), items.end(), std::greater<pair<int, int>>());\\r\\n\\t\\tfor (int i = 0; i <= limit; i++) {\\r\\n\\t\\t\\tbest[at][i] = best[at - 1][i];\\r\\n\\t\\t\\tint copies = 0;\\r\\n\\t\\t\\tint type_at = 0;\\r\\n\\t\\t\\tint curr_used = 0;\\r\\n\\t\\t\\tlong long profit = 0;\\r\\n\\t\\t\\t// go through as many items until we run out of items or usable weight\\r\\n\\t\\t\\twhile ((copies + 1) * w <= i && type_at < items.size()) {\\r\\n\\t\\t\\t\\tcopies++;\\r\\n\\t\\t\\t\\tprofit += items[type_at].first;\\r\\n\\t\\t\\t\\tif (best[at - 1][i - copies * w] != INT32_MIN) {\\r\\n\\t\\t\\t\\t\\tbest[at][i] = std::max(\\r\\n\\t\\t\\t\\t\\t\\tbest[at][i],\\r\\n\\t\\t\\t\\t\\t\\tbest[at - 1][i - copies * w] + profit\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tcurr_used++;\\r\\n\\t\\t\\t\\tif (curr_used == items[type_at].second) {\\r\\n\\t\\t\\t\\t\\tcurr_used = 0;\\r\\n\\t\\t\\t\\t\\ttype_at++;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tat++;\\r\\n\\t}\\r\\n\\tcout << *std::max_element(best.back().begin(), best.back().end()) << endl;\\r\\n}\\n\"\n          })\n        })\n      }), _jsxs(JavaSection, {\n        children: [_jsx(Warning, {\n          children: _jsx(_components.p, {\n            children: \"Due to Java's (relatively) slow speed, this solution will often TLE on the last subtask.\"\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class knapsack {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tStringTokenizer initial = new StringTokenizer(read.readLine());\\r\\n\\t\\tint limit = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tint typeNum = Integer.parseInt(initial.nextToken());\\r\\n\\t\\tHashMap<Integer, ArrayList<int[]>> byWeight = new HashMap<>();\\r\\n\\t\\tfor (int t = 0; t < typeNum; t++) {\\r\\n\\t\\t\\tStringTokenizer item = new StringTokenizer(read.readLine());\\r\\n\\t\\t\\tint value = Integer.parseInt(item.nextToken());\\r\\n\\t\\t\\tint weight = Integer.parseInt(item.nextToken());\\r\\n\\t\\t\\tint amt = Integer.parseInt(item.nextToken());\\r\\n\\t\\t\\tif (weight <= limit && amt > 0) {\\r\\n\\t\\t\\t\\tif (!byWeight.containsKey(weight)) {\\r\\n\\t\\t\\t\\t\\tbyWeight.put(weight, new ArrayList<>());\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tbyWeight.get(weight).add(new int[] {value, amt});\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t * best[i][j] contains the most value we can\\r\\n\\t\\t * get using j weight and the first i weight types\\r\\n\\t\\t */\\r\\n\\t\\tlong[][] best = new long[byWeight.size() + 1][limit + 1];\\r\\n\\t\\tfor (long[] row : best) {\\r\\n\\t\\t\\tArrays.fill(row, Integer.MIN_VALUE);\\r\\n\\t\\t}\\r\\n\\t\\tbest[0][0] = 0;\\r\\n\\t\\tint at = 1;\\r\\n\\t\\tfor (var pair : byWeight.entrySet()) {\\r\\n\\t\\t\\tint w = pair.getKey();\\r\\n\\t\\t\\tArrayList<int[]> items = pair.getValue();\\r\\n\\t\\t\\t// sort items in reverse order by value\\r\\n\\t\\t\\titems.sort(Comparator.comparingInt(i -> -i[0]));\\r\\n\\t\\t\\tfor (int i = 0; i <= limit; i++) {\\r\\n\\t\\t\\t\\tbest[at][i] = best[at - 1][i];\\r\\n\\t\\t\\t\\tint copies = 0;\\r\\n\\t\\t\\t\\tint typeAt = 0;\\r\\n\\t\\t\\t\\tint currUsed = 0;\\r\\n\\t\\t\\t\\tlong profit = 0;\\r\\n\\t\\t\\t\\t// go through as many items until we run out of items or usable weight\\r\\n\\t\\t\\t\\twhile ((copies + 1) * w <= i && typeAt < items.size()) {\\r\\n\\t\\t\\t\\t\\tcopies++;\\r\\n\\t\\t\\t\\t\\tprofit += items.get(typeAt)[0];\\r\\n\\t\\t\\t\\t\\tif (best[at - 1][i - copies * w] != Integer.MIN_VALUE) {\\r\\n\\t\\t\\t\\t\\t\\tbest[at][i] = Math.max(\\r\\n\\t\\t\\t\\t\\t\\t\\tbest[at][i],\\r\\n\\t\\t\\t\\t\\t\\t\\tbest[at - 1][i - copies * w] + profit\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tcurrUsed++;\\r\\n\\t\\t\\t\\t\\tif (currUsed == items.get(typeAt)[1]) {\\r\\n\\t\\t\\t\\t\\t\\tcurrUsed = 0;\\r\\n\\t\\t\\t\\t\\t\\ttypeAt++;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tat++;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlong mostValue = 0;\\r\\n\\t\\tfor (int i = 0; i <= limit; i++) {\\r\\n\\t\\t\\tmostValue = Math.max(mostValue, best[byWeight.size()][i]);\\r\\n\\t\\t}\\r\\n\\t\\tSystem.out.println(mostValue);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"noi-18-knapsack","source":"Singapore NOI","title":"Knapsack","author":"Kevin Sheng"},"parent":{"name":"ojuz-knapsack","relativePath":"ojuz-knapsack.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implemention","slug":"implemention"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implemention","slug":"implemention"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implemention","slug":"implemention"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"knapsack","title":"Knapsack DP"}}}}]},"problemInfo":{"uniqueId":"noi-18-knapsack","url":"https://oj.uz/problem/view/NOI18_knapsack"}},"pageContext":{"id":"noi-18-knapsack"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}