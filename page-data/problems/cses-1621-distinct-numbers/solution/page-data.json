{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/cses-1621-distinct-numbers/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"cses-1621\", source = \"CSES\", title = \"Distinct Numbers\", author = \"Andrew Wang, Maggie Liu\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\")\n  }, _props.components), {HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"method-1---sorting\",\n      children: [_jsx(_components.a, {\n        href: \"#method-1---sorting\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 1 - Sorting\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sort the array of numbers. Loop through the array and increment the answer for\\r\\nevery distinct number. Distinct numbers can be found if the current number isn't\\r\\nequal to the previous number in the array.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log{N})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log{N})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tint N;\\r\\n\\tcin >> N;\\r\\n\\tvector<int> arr(N);\\r\\n\\tfor (int i = 0; i < N; i++)\\r\\n\\t\\tcin >> arr[i];\\r\\n\\tsort(arr.begin(), arr.end());\\r\\n\\tint ans = 1;\\r\\n\\tfor (int i = 1; i < N; i++) {\\r\\n\\t\\t/*\\r\\n\\t\\t * if the current number is different from the previous\\r\\n\\t\\t * it is a distinct number so we add 1 to the answer\\r\\n\\t\\t */\\r\\n\\t\\tans += (arr[i] != arr[i - 1]);\\r\\n\\t}\\r\\n\\tcout << ans << endl;\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class DistinctNumbers {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint n = Integer.parseInt(br.readLine());\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\tint[] arr = new int[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tarr[i] = Integer.parseInt(st.nextToken());\\r\\n\\t\\t}\\r\\n\\t\\tArrays.sort(arr);\\r\\n\\t\\tint ans = 1;\\r\\n\\t\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\t\\t/*\\r\\n\\t\\t\\t * if the current number is different from the previous\\r\\n\\t\\t\\t * it is a distinct number so we add 1 to the answer\\r\\n\\t\\t\\t */\\r\\n\\t\\t\\tif (arr[i] != arr[i - 1]) {\\r\\n\\t\\t\\t\\tans++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tSystem.out.println(ans);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"n = int(input())\\r\\n# create a sorted list of the numbers\\r\\nnumbers = sorted(map(int, input().split()))\\r\\nans = 1\\r\\nfor i in range(1, n):\\r\\n\\t# if the current number is different from the previous\\r\\n\\t# it is a distinct number so we add 1 to the answer\\r\\n\\tif numbers[i] != numbers[i - 1]:\\r\\n\\t\\tans += 1\\r\\nprint(ans)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"method-2---sets\",\n      children: [_jsx(_components.a, {\n        href: \"#method-2---sets\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 2 - Sets\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See \", _jsx(_components.a, {\n        href: \"/bronze/intro-sets#solution---distinct-numbers\",\n        children: \"this module\"\n      }), \".\"]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"cses-1621","source":"CSES","title":"Distinct Numbers","author":"Andrew Wang, Maggie Liu"},"parent":{"name":"cses-1621","relativePath":"cses-1621.mdx"},"toc":{"cpp":[{"depth":2,"value":"Method 1 - Sorting","slug":"method-1---sorting"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Method 2 - Sets","slug":"method-2---sets"}],"java":[{"depth":2,"value":"Method 1 - Sorting","slug":"method-1---sorting"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Method 2 - Sets","slug":"method-2---sets"}],"py":[{"depth":2,"value":"Method 1 - Sorting","slug":"method-1---sorting"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Method 2 - Sets","slug":"method-2---sets"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"intro-sets","title":"Introduction to Sets & Maps"}}}},{"node":{"module":{"frontmatter":{"id":"intro-sorting","title":"Introduction to Sorting"}}}}]},"problemInfo":{"uniqueId":"cses-1621","url":"https://cses.fi/problemset/task/1621"}},"pageContext":{"id":"cses-1621"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}