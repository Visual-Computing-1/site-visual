{
    "componentChunkName": "component---src-templates-solution-template-tsx",
    "path": "/problems/poi-2014cards/solution",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"poi-14-cards\", source = \"POI\", title = \"Cards\", author = \"Dong Liu, Dustin Miao\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\")\n  }, _props.components), {MATHSPAN, HeaderLink, LanguageSection, CPPSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"explanation\",\n      children: [_jsx(_components.a, {\n        href: \"#explanation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Explanation\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can use a segment tree to solve this problem.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For each segment tree node with the range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[l, r]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \", we will store if it's possible to arrange the cards \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"l\\\\dots r\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi><mo>…</mo><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l\\\\dots r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n      }), \" so that we either\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"don't flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"l\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n        }), \" and card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"r\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"don't flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"l\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n        }), \" and flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"r\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"l\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n        }), \" and don't flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"r\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"flip card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"l\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n        }), \" and card \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"r\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can represent these states in a 2 by 2 matrix \", _jsx(_components.code, {\n        children: \"bool[2][2]\"\n      }), \" where the first dimension stores whether we flip card \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"l\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n      }), \" and the second dimension stores whether we flip card \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"r\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To calculate the states for a specific segment tree node, we loop through all possible states of our left child node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(a, b)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(a, b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and all possible states of our right child node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(c, d)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>c</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(c, d)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". If the transition from \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \" to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"c\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n      }), \" works, then \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(a, d)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>d</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(a, d)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" works since we're only considering endpoints.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To perform a swap operation with index \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \", we simply swap the cards at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \". We can just recalculate all nodes in the segment tree that are related to either \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" or \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \". Since there are around \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" ranges in the segment tree that contain \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \" or \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \", this whole swap operation takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal O(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal O(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additionally, we also have to print if we can form a non-decreasing list using the cards. To do this, if any states of the root node in our segment tree (which covers \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[1, n]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>n</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[1, n]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \") is possible, then our answer is yes (\", _jsx(_components.code, {\n        children: \"TAK\"\n      }), \"), otherwise no (\", _jsx(_components.code, {\n        children: \"NIE\"\n      }), \").\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nconst int N = 1 << 18;\\r\\n\\r\\nint n, q, aa[N][2];\\r\\nbool tt[N << 1][2][2];\\r\\n\\r\\nvoid pull(int i, int l, int r) {\\r\\n\\tmemset(tt[i], 0, sizeof(tt[i]));\\r\\n\\tint j = i << 1, k = i << 1 | 1;\\r\\n\\tint m = (l + r) >> 1;\\r\\n\\tfor (int a = 0; a < 2; ++a)\\r\\n\\t\\tfor (int b = 0; b < 2; ++b)\\r\\n\\t\\t\\tfor (int c = 0; c < 2; ++c)\\r\\n\\t\\t\\t\\tfor (int d = 0; d < 2; ++d)\\r\\n\\t\\t\\t\\t\\tif (tt[j][a][b] && tt[k][c][d] && aa[m][b] <= aa[m + 1][c])\\r\\n\\t\\t\\t\\t\\t\\ttt[i][a][d] = 1;\\r\\n}\\r\\n\\r\\nvoid build(int k = 1, int l = 0, int r = n - 1) {\\r\\n\\tif (l == r) { tt[k][0][0] = tt[k][1][1] = 1; return; }\\r\\n\\tint m = (l + r) >> 1;\\r\\n\\tbuild(k << 1, l, m);\\r\\n\\tbuild(k << 1 | 1, m + 1, r);\\r\\n\\tpull(k, l, r);\\r\\n}\\r\\n\\r\\nvoid update(int i, int k = 1, int l = 0, int r = n - 1) {\\r\\n\\tif (l == r) { tt[k][0][0] = tt[k][1][1] = 1; return; }\\r\\n\\tint m = (l + r) >> 1;\\r\\n\\tif (i <= m) update(i, k << 1, l, m);\\r\\n\\telse update(i, k << 1 | 1, m + 1, r);\\r\\n\\tpull(k, l, r);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tscanf(\\\"%d\\\", &n);\\r\\n\\tfor (int i = 0; i < n; ++i) {\\r\\n\\t\\tscanf(\\\"%d%d\\\", aa[i], aa[i] + 1); \\r\\n\\t}\\r\\n\\tbuild();\\r\\n\\tscanf(\\\"%d\\\", &q);\\r\\n\\twhile (q--) {\\r\\n\\t\\tint i, j;\\r\\n\\t\\tscanf(\\\"%d%d\\\", &i, &j);\\r\\n\\t\\tswap(aa[--i], aa[--j]);\\r\\n\\t\\tupdate(i), update(j);\\r\\n\\t\\tbool ok = tt[1][0][0] || tt[1][0][1] || tt[1][1][0] || tt[1][1][1];\\r\\n\\t\\tprintf(\\\"%s\\\\n\\\", ok ? \\\"TAK\\\" : \\\"NIE\\\");\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"alternate-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#alternate-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Alternate Solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can reduce the number of states stored in the segment tree to just two:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The minimum last value of the interval given that we take the lesser side of the first card (denote this as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"FF\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>F</mi><mi>F</mi></mrow><annotation encoding=\\\"application/x-tex\\\">FF</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The minimum last value of the interval given that we take the greater side of the first card (denote this as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"SS\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">SS</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span></span>\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note that it will always be optimal to take the lesser side of the last side given that we can take both. This, in turn, prepares the current interval with the next merging step, if applicable.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's denote the array of cards as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A.FF\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A.FF</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span></span>\"\n      }), \" is the front side and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A.SS\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A.SS</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span></span>\"\n      }), \" is the back side. Without loss of generality, assume that \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A[i].FF \\\\leq A[i].SS\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>≤</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A[i].FF \\\\leq A[i].SS</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span></span>\"\n      }), \" for all \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i \\\\in [1, n]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>n</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">i \\\\in [1, n]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6986em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">∈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \". We consider merging interval \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" to create interval \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span></span></span></span>\"\n      }), \" corresponds to the array elements \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[l, r]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \". Note that this implies \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \" corresponds to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[l, m]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>m</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[l, m]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" corresponds to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[m + 1, r]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[m + 1, r]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m = \\\\lfloor \\\\frac {l + r} 2 \\\\rfloor\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy=\\\"false\\\">⌊</mo><mfrac><mrow><mi>l</mi><mo>+</mo><mi>r</mi></mrow><mn>2</mn></mfrac><mo stretchy=\\\"false\\\">⌋</mo></mrow><annotation encoding=\\\"application/x-tex\\\">m = \\\\lfloor \\\\frac {l + r} 2 \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2251em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">⌊</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8801em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">⌋</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"w.FF = \\\\begin{cases} v.FF & u.FF \\\\leq A[m + 1].FF \\\\\\\\ v.SS & A[tm + 1].FF < u.FF \\\\leq A[tm + 1].SS \\\\\\\\ \\\\infty & \\\\text{otherwise}\\\\end{cases}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>=</mo><mrow><mo fence=\\\"true\\\">{</mo><mtable rowspacing=\\\"0.36em\\\" columnalign=\\\"left left\\\" columnspacing=\\\"1em\\\"><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>≤</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>t</mi><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>&lt;</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>≤</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>t</mi><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mi mathvariant=\\\"normal\\\">∞</mi></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">w.FF = \\\\begin{cases} v.FF &amp; u.FF \\\\leq A[m + 1].FF \\\\\\\\ v.SS &amp; A[tm + 1].FF &lt; u.FF \\\\leq A[tm + 1].SS \\\\\\\\ \\\\infty &amp; \\\\text{otherwise}\\\\end{cases}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:4.32em;vertical-align:-1.91em;\\\"></span><span class=\\\"minner\\\"><span class=\\\"mopen\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.35em;\\\"><span style=\\\"top:-2.2em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎩</span></span></span><span style=\\\"top:-2.192em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span style=\\\"height:0.316em;width:0.8889em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\\\"top:-3.15em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎨</span></span></span><span style=\\\"top:-4.292em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span style=\\\"height:0.316em;width:0.8889em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\\\"top:-4.6em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎧</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.85em;\\\"><span></span></span></span></span></span></span><span class=\\\"mord\\\"><span class=\\\"mtable\\\"><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.41em;\\\"><span style=\\\"top:-4.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span><span style=\\\"top:-2.97em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span><span style=\\\"top:-1.53em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">∞</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.91em;\\\"><span></span></span></span></span></span><span class=\\\"arraycolsep\\\" style=\\\"width:1em;\\\"></span><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.41em;\\\"><span style=\\\"top:-4.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span><span style=\\\"top:-2.97em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span><span style=\\\"top:-1.53em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord\\\">otherwise</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.91em;\\\"><span></span></span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span></span></span></span>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"w.SS = \\\\begin{cases} v.FF & u.SS \\\\leq A[m + 1].FF \\\\\\\\ v.SS & A[tm + 1].FF < u.SS \\\\leq A[tm + 1].SS \\\\\\\\ \\\\infty & \\\\text{otherwise}\\\\end{cases}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi><mo>=</mo><mrow><mo fence=\\\"true\\\">{</mo><mtable rowspacing=\\\"0.36em\\\" columnalign=\\\"left left\\\" columnspacing=\\\"1em\\\"><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi><mo>≤</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>v</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mrow><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>t</mi><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>&lt;</mo><mi>u</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi><mo>≤</mo><mi>A</mi><mo stretchy=\\\"false\\\">[</mo><mi>t</mi><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mi mathvariant=\\\"normal\\\">∞</mi></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"false\\\"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">w.SS = \\\\begin{cases} v.FF &amp; u.SS \\\\leq A[m + 1].FF \\\\\\\\ v.SS &amp; A[tm + 1].FF &lt; u.SS \\\\leq A[tm + 1].SS \\\\\\\\ \\\\infty &amp; \\\\text{otherwise}\\\\end{cases}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:4.32em;vertical-align:-1.91em;\\\"></span><span class=\\\"minner\\\"><span class=\\\"mopen\\\"><span class=\\\"delimsizing mult\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.35em;\\\"><span style=\\\"top:-2.2em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎩</span></span></span><span style=\\\"top:-2.192em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span style=\\\"height:0.316em;width:0.8889em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\\\"top:-3.15em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎨</span></span></span><span style=\\\"top:-4.292em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span style=\\\"height:0.316em;width:0.8889em;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\\\"top:-4.6em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.15em;\\\"></span><span class=\\\"delimsizinginner delim-size4\\\"><span>⎧</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.85em;\\\"><span></span></span></span></span></span></span><span class=\\\"mord\\\"><span class=\\\"mtable\\\"><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.41em;\\\"><span style=\\\"top:-4.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span><span style=\\\"top:-2.97em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span><span style=\\\"top:-1.53em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">∞</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.91em;\\\"><span></span></span></span></span></span><span class=\\\"arraycolsep\\\" style=\\\"width:1em;\\\"></span><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.41em;\\\"><span style=\\\"top:-4.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span></span></span><span style=\\\"top:-2.97em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">t</span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span></span></span><span style=\\\"top:-1.53em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.008em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord\\\">otherwise</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.91em;\\\"><span></span></span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span></span></span></span>\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that we choose \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\infty\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∞</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\infty</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\">∞</span></span></span></span>\"\n      }), \" to be the default value, because under our merge conditions, infinity conveniently overrides all other operators. This means that if any point of the array is discontinuous (or unable to be made into a non-decreasing sequence), node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" in the segment tree, which corresponds to the entire array, will also have \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"w.FF = w.SS = \\\\infty\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>F</mi><mi>F</mi><mo>=</mo><mi>w</mi><mi mathvariant=\\\"normal\\\">.</mi><mi>S</mi><mi>S</mi><mo>=</mo><mi mathvariant=\\\"normal\\\">∞</mi></mrow><annotation encoding=\\\"application/x-tex\\\">w.FF = w.SS = \\\\infty</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.13889em;\\\">FF</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mord\\\">.</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">SS</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\">∞</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log{N})\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log{N})</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nusing ll = long long;\\r\\nusing pll = pair<ll, ll>;\\r\\n\\r\\n#define MP make_pair\\r\\n#define FF first\\r\\n#define SS second\\r\\n\\r\\nconst ll llinf = 999999999999999;\\r\\n\\r\\nll N, Q;\\r\\npll A[200005], T[800005];\\r\\n\\r\\nvoid merge(int t, int tl, int tr) {\\r\\n\\tT[t] = MP(llinf, llinf);\\r\\n\\tint tm = (tl + tr) >> 1;\\r\\n\\t// for first val\\r\\n\\tif (T[t << 1].FF <= A[tm + 1].SS)\\r\\n\\t\\tT[t].FF = T[t << 1 | 1].SS;\\r\\n\\tif (T[t << 1].FF <= A[tm + 1].FF)\\r\\n\\t\\tT[t].FF = T[t << 1 | 1].FF;\\r\\n\\t// for second val\\r\\n\\tif (T[t << 1].SS <= A[tm + 1].SS)\\r\\n\\t\\tT[t].SS = T[t << 1 | 1].SS;\\r\\n\\tif (T[t << 1].SS <= A[tm + 1].FF)\\r\\n\\t\\tT[t].SS = T[t << 1 | 1].FF;\\r\\n}\\r\\n\\r\\nvoid build(ll t = 1, ll tl = 1, ll tr = N) {\\r\\n\\tT[t] = MP(llinf, llinf);\\r\\n\\tif (tl == tr) {\\r\\n\\t\\tT[t] = A[tl];\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\tll tm = (tl + tr) >> 1;\\r\\n\\tbuild(t << 1, tl, tm);\\r\\n\\tbuild(t << 1 | 1, tm + 1, tr);\\r\\n\\tmerge(t, tl, tr);\\r\\n}\\r\\n\\r\\nvoid update(int i, pll v, int t = 1, int tl = 1, int tr = N) {\\r\\n\\tif (tl == tr) {\\r\\n\\t\\tT[t] = A[tl] = v;\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\tll tm = (tl + tr) >> 1;\\r\\n\\tif (i <= tm)\\r\\n\\t\\tupdate(i, v, t << 1, tl, tm);\\r\\n\\telse \\r\\n\\t\\tupdate(i, v, t << 1 | 1, tm + 1, tr);\\r\\n\\tmerge(t, tl, tr);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\t\\r\\n\\tcin >> N;\\r\\n\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\tcin >> A[i].FF >> A[i].SS;\\r\\n\\t\\tif (A[i].FF > A[i].SS)\\r\\n\\t\\t\\tswap(A[i].FF, A[i].SS);\\r\\n\\t}   \\r\\n\\tbuild();\\r\\n\\tcin >> Q;\\r\\n\\twhile (Q--) {\\r\\n\\t\\tint a, b; cin >> a >> b;\\r\\n\\t\\tpll t = A[a];\\r\\n\\t\\tupdate(a, A[b]);\\r\\n\\t\\tupdate(b, t);\\r\\n\\t\\tif (T[1].FF == llinf)\\r\\n\\t\\t\\tcout << \\\"NIE\\\\n\\\";\\r\\n\\t\\telse \\r\\n\\t\\t\\tcout << \\\"TAK\\\\n\\\";\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  source,\n  title,\n  author,\n  default: MDXContent\n};\n","frontmatter":{"id":"poi-14-cards","source":"POI","title":"Cards","author":"Dong Liu, Dustin Miao"},"parent":{"name":"poi-14-cards","relativePath":"poi-14-cards.mdx"},"toc":{"cpp":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}],"java":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}],"py":[{"depth":2,"value":"Explanation","slug":"explanation"},{"depth":2,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Alternate Solution","slug":"alternate-solution"},{"depth":2,"value":"Implementation","slug":"implementation-1"}]}},"allProblemInfo":{"edges":[{"node":{"module":{"frontmatter":{"id":"segtree-ext","title":"More Applications of Segment Tree"}}}}]},"problemInfo":{"uniqueId":"poi-14-cards","url":"https://szkopul.edu.pl/problemset/problem/qpsk3ygf8MU7D_1Es0oc_xd8/site/?key=statement"}},"pageContext":{"id":"poi-14-cards"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}