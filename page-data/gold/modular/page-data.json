{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/modular",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*<Resource source=\"CF\" title=\"CodeNCode - Number Theory Course\" url=\"77137\">lots of advanced stuff you don't need to know at this level</Resource>\n*/\n/*Some silver problems involve $10^9+7$, should this be introduced in silver?*/\n/*\nFinally, since $x ^ y$ for some $y \\neq 1$ equals $x ^ {y - 1}$, and $x$ otherwise, we can compute these sums efficently.*/\n/*#### Example: Sprinkers 2\n\nThere aren't many good examples of Modular Inverses in USACO. One problem where it was useful was the platinum problem \"Sprinkers 2\".\n\n<FocusProblem problem=\"dp[2]\" />\n\nFor the sake of example, we'll skip the details of this problem. Also, if you want to attempt it yourself, you should probably do that first. In this problem, our DP transition relies on dividing our answer at some state by $2$, under a prime moduli.\n\nTo perform this, we'll instead multiply by $500000004$ or the modular inverse of $2$, and take it under the prime moduli for the same result.\n*/\n/*To find a modular inverse of some number modulo $p$, simply raise it to the power of $p-2$.*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"modular\", title = \"Modular Arithmetic\", author = \"Darren Yao, Michael Cao, Andi Qu, Benjamin Qi, Andrew Wang\", contributors = \"Kevin Sheng\", prerequisites = [\"divisibility\"], description = \"Working with remainders from division.\", frequency = 2;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    Optional: _missingComponent(\"Optional\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {Resources, Resource, HeaderLink, MATHSPAN, MATHDIV, FocusProblem, Spoiler, LanguageSection, CPPSection, JavaSection, PySection, Optional, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [\"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"AryanshS\",\n        title: \"The Art of Modular Arithmetic\",\n        url: \"https://aryansh-s.github.io/The_Art_of_Modular_Arithmetic.pdf\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"introduces modular arithmetic through numerous math-contest-level examples and problems\"\n        })\n      }), _jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"13.3 - Modular Arithmetic\",\n        children: _jsx(_components.p, {\n          children: \"very brief, module is based off this\"\n        })\n      }), _jsx(Resource, {\n        source: \"David Altizio\",\n        title: \"Modular Arithmetic\",\n        url: \"https://davidaltizio.web.illinois.edu/ModularArithmetic.pdf\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"plenty of examples from math contests\"\n        })\n      }), _jsx(Resource, {\n        source: \"CPH\",\n        title: \"21.2 - Modular Arithmetic\",\n        starred: true\n      }), _jsx(Resource, {\n        source: \"PAPS\",\n        title: \"16.4 - Modular Arithmetic\"\n      }), _jsx(Resource, {\n        source: \"CF\",\n        title: \"Spheniscine - Modular Arithmetic for Beginners\",\n        url: \"https://codeforces.com/blog/entry/72527\",\n        children: _jsx(_components.p, {\n          children: \"some practice probs\"\n        })\n      }), _jsx(Resource, {\n        source: \"MONT@Modern Olympiad Number Theory\",\n        title: \"2, 5 - Modular Arithmetic\",\n        url: \"https://artofproblemsolving.com/community/c6h2344755\",\n        starred: true\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"introduction\",\n      children: [_jsx(_components.a, {\n        href: \"#introduction\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Introduction\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.p, {\n      children: [\"In \", _jsx(_components.strong, {\n        children: \"modular arithmetic\"\n      }), \", instead of working with integers themselves, we work\\r\\nwith their remainders when divided by \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \". We call this taking modulo \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \". For\\r\\nexample, if we take \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m = 23\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi><mo>=</mo><mn>23</mn></mrow><annotation encoding=\\\"application/x-tex\\\">m = 23</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">23</span></span></span></span>\"\n      }), \", then instead of working with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x = 247\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mo>=</mo><mn>247</mn></mrow><annotation encoding=\\\"application/x-tex\\\">x = 247</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">247</span></span></span></span>\"\n      }), \", we use\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x \\\\bmod 23 = 17\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mn>23</mn><mo>=</mo><mn>17</mn></mrow><annotation encoding=\\\"application/x-tex\\\">x \\\\bmod 23 = 17</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">23</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">17</span></span></span></span>\"\n      }), \". Usually, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \" will be a large prime, given in the problem; the\\r\\ntwo most common values are \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"10^9 + 7\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">10^9 + 7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8974em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"998\\\\,244\\\\,353=119\\\\cdot 2^{23}+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>998</mn><mtext> </mtext><mn>244</mn><mtext> </mtext><mn>353</mn><mo>=</mo><mn>119</mn><mo>⋅</mo><msup><mn>2</mn><mn>23</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">998\\\\,244\\\\,353=119\\\\cdot 2^{23}+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">998</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">244</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">353</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">119</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8974em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">23</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \".\\r\\nModular arithmetic is used to avoid dealing with numbers that overflow built-in\\r\\ndata types, because we can take remainders, according to the following formulas:\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"(a+b) \\\\bmod m = (a \\\\bmod m + b \\\\bmod m) \\\\bmod m\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>=</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>+</mo><mi>b</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo stretchy=\\\"false\\\">)</mo><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">(a+b) \\\\bmod m = (a \\\\bmod m + b \\\\bmod m) \\\\bmod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"(a-b) \\\\bmod m = (a \\\\bmod m - b \\\\bmod m) \\\\bmod m\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo>−</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>=</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>−</mo><mi>b</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo stretchy=\\\"false\\\">)</mo><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">(a-b) \\\\bmod m = (a \\\\bmod m - b \\\\bmod m) \\\\bmod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"(a \\\\cdot b) \\\\pmod{m} = ((a \\\\bmod m) \\\\cdot (b \\\\bmod m)) \\\\bmod m\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo>⋅</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo><mspace></mspace><mspace width=\\\"1em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>m</mi><mo stretchy=\\\"false\\\">)</mo><mo>=</mo><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo stretchy=\\\"false\\\">)</mo><mo>⋅</mo><mo stretchy=\\\"false\\\">(</mo><mi>b</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">(a \\\\cdot b) \\\\pmod{m} = ((a \\\\bmod m) \\\\cdot (b \\\\bmod m)) \\\\bmod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:1em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">((</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">))</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"a^b \\\\bmod {m} = (a \\\\bmod m)^b \\\\bmod m\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><msup><mi>a</mi><mi>b</mi></msup><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>=</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><msup><mo stretchy=\\\"false\\\">)</mo><mi>b</mi></msup><mtext> </mtext><mo lspace=\\\"0.22em\\\" rspace=\\\"0.22em\\\"><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a^b \\\\bmod {m} = (a \\\\bmod m)^b \\\\bmod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8991em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">m</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1491em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\"><span class=\\\"mclose\\\">)</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.0556em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"modular-exponentiation\",\n      children: [_jsx(_components.a, {\n        href: \"#modular-exponentiation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Modular Exponentiation\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"expo\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Binary Exponentiation\",\n        url: \"algebra/binary-exp.html\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Binary exponentiation\"\n      }), \" can be used to efficently compute \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ n \\\\mod m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mspace></mspace><mspace width=\\\"0.6667em\\\"/><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ n \\\\mod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.6667em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \". To\\r\\ndo this, let's break down \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" into binary components. For example,\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"5 ^ {10}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>5</mn><mn>10</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">5 ^ {10}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">5</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">10</span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"5 ^ {1010_2}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>5</mn><mrow><mn>101</mn><msub><mn>0</mn><mn>2</mn></msub></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">5 ^ {1010_2}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">5</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">101</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"5 ^ 8 \\\\cdot 5 ^ 2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>5</mn><mn>8</mn></msup><mo>⋅</mo><msup><mn>5</mn><mn>2</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">5 ^ 8 \\\\cdot 5 ^ 2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">5</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">8</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">5</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \". Then, if we know \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mi>y</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" for\\r\\nall \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"y\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n      }), \" which are powers of two (\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mn>1</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ 2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ 2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ 4\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ 4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\dots\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>…</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\dots</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.123em;\\\"></span><span class=\\\"minner\\\">…</span></span></span></span>\"\n      }), \" ,\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ {2^{\\\\lfloor{\\\\log_2n} \\\\rfloor}}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><msup><mn>2</mn><mrow><mo stretchy=\\\"false\\\">⌊</mo><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>n</mi></mrow><mo stretchy=\\\"false\\\">⌋</mo></mrow></msup></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ {2^{\\\\lfloor{\\\\log_2n} \\\\rfloor}}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0397em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.0397em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9667em;\\\"><span style=\\\"top:-2.9667em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5357em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mopen mtight\\\">⌊</span><span class=\\\"mord mtight\\\"><span class=\\\"mop mtight\\\"><span class=\\\"mop mtight\\\"><span class=\\\"mtight\\\">l</span><span class=\\\"mtight\\\">o</span><span class=\\\"mtight\\\" style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3448em;\\\"><span style=\\\"top:-2.3448em;margin-right:0.1em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.6444em;\\\"></span><span class=\\\"mord mtight\\\">2</span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2996em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace mtight\\\" style=\\\"margin-right:0.2453em;\\\"></span><span class=\\\"mord mathnormal mtight\\\">n</span></span><span class=\\\"mclose mtight\\\">⌋</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", we can compute \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x ^ n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding=\\\"application/x-tex\\\">x ^ n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6644em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6644em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" in\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log n)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To deal with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \", observe that modulo doesn't affect multiplications, so we can\\r\\ndirectly implement the above \\\"binary exponentiation\\\" algorithm while adding a\\r\\nline to take results \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\pmod m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mspace></mspace><mspace width=\\\"0.4444em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>m</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\pmod m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0em;\\\"></span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.4444em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---exponentiation\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---exponentiation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Exponentiation\"]\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Solution\",\n      children: _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nusing ll = long long;\\r\\n\\r\\nll binpow(ll x, ll n, ll m) {\\r\\n\\tassert(n >= 0);\\r\\n\\tx %= m;  // note: m * m must be less than 2^63 to avoid ll overflow\\r\\n\\tll res = 1;\\r\\n\\twhile (n > 0) {\\r\\n\\t\\tif (n % 2 == 1)  // if n is odd\\r\\n\\t\\t\\tres = res * x % m;\\r\\n\\t\\tx = x * x % m;\\r\\n\\t\\tn /= 2;  // divide by two\\r\\n\\t}\\r\\n\\treturn res;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tint t;\\r\\n\\tcin >> t;\\r\\n\\tfor (int i = 0; i < t; i++) {\\r\\n\\t\\tint a, b;\\r\\n\\t\\tcin >> a >> b;\\r\\n\\t\\tcout << binpow(a, b, 1e9 + 7) << \\\"\\\\n\\\";\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\r\\npublic class Exponentation {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tPrintWriter out = new PrintWriter(System.out);\\r\\n\\t\\tint n = Integer.parseInt(br.readLine());\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tlong a = Long.parseLong(st.nextToken());\\r\\n\\t\\t\\tlong b = Long.parseLong(st.nextToken());\\r\\n\\t\\t\\tout.println(binpow(a, b, (long) 1e9+7));\\r\\n\\t\\t}\\r\\n\\t\\tout.close();\\r\\n\\t}\\r\\n\\r\\n\\tpublic static long binpow(long x, long n, long m) {\\r\\n\\t\\tassert(n >= 0);\\r\\n\\t\\tx %= m;  // note: m * m must be less than 2^63 to avoid ll overflow\\r\\n\\t\\tlong res = 1;\\r\\n\\t\\twhile (n > 0) {\\r\\n\\t\\t\\tif (n % 2 == 1)  // if n is odd\\r\\n\\t\\t\\t\\tres = res * x % m;\\r\\n\\t\\t\\tx = x * x % m;\\r\\n\\t\\t\\tn /= 2;  // divide by two\\r\\n\\t\\t}\\r\\n\\t\\treturn res;\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })\n        }), _jsxs(PySection, {\n          children: [_jsxs(_components.p, {\n            children: [\"We can use Python's builtin \", _jsx(_components.code, {\n              children: \"pow\"\n            }), \" function to efficently compute modulo powers.\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"MOD = 10 ** 9 + 7\\r\\n \\r\\nfor _ in range(int(input())):\\r\\n\\tfirst, second = [int(i) for i in input().split()]\\r\\n\\tprint(pow(first, second, MOD))\\n\"\n            })\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"modular-inverse\",\n      children: [_jsx(_components.a, {\n        href: \"#modular-inverse\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Modular Inverse\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.strong, {\n        children: \"modular inverse\"\n      }), \" is the equivalent of the reciprocal in real-number\\r\\narithmetic; to divide \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" by \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \", multiply \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" by the modular inverse of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \".\\r\\nWe'll only consider prime moduli \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \" here.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, the inverse of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n      }), \" modulo \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p=10^9+7\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">p=10^9+7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8974em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n      }), \" is\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i=\\\\frac{p+1}{2}=5\\\\cdot 10^8+4\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>=</mo><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>=</mo><mn>5</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup><mo>+</mo><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">i=\\\\frac{p+1}{2}=5\\\\cdot 10^8+4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2422em;vertical-align:-0.345em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8972em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.4461em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8974em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">8</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n      }), \". This means that for any integer \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \",\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"(2x)\\\\cdot i\\\\equiv x\\\\cdot (2i)\\\\equiv x\\\\pmod{10^9+7}.\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mn>2</mn><mi>x</mi><mo stretchy=\\\"false\\\">)</mo><mo>⋅</mo><mi>i</mi><mo>≡</mo><mi>x</mi><mo>⋅</mo><mo stretchy=\\\"false\\\">(</mo><mn>2</mn><mi>i</mi><mo stretchy=\\\"false\\\">)</mo><mo>≡</mo><mi>x</mi><mspace></mspace><mspace width=\\\"1em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn><mo stretchy=\\\"false\\\">)</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">(2x)\\\\cdot i\\\\equiv x\\\\cdot (2i)\\\\equiv x\\\\pmod{10^9+7}.</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4445em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:1em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1141em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8641em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mclose\\\">)</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"10i\\\\equiv 5\\\\pmod{10^9+7}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>10</mn><mi>i</mi><mo>≡</mo><mn>5</mn><mspace></mspace><mspace width=\\\"0.4444em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">10i\\\\equiv 5\\\\pmod{10^9+7}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord\\\">10</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.4444em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", \"\\n\", \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Modular Multiplicative Inverse\",\n        url: \"algebra/module-inverse.html\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"Various ways to take modular inverse, we'll only discuss the second here\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"with-exponentiation\",\n      children: [_jsx(_components.a, {\n        href: \"#with-exponentiation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Exponentiation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Fermat%27s_little_theorem\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"Fermat's Little Theorem\"\n        })\n      }), \"\\r\\n(not to be confused with Fermat's \", _jsx(_components.strong, {\n        children: \"Last\"\n      }), \" Theorem) states that all integers \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \"\\r\\nnot divisible by \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \" satisfy \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a^{p - 1} \\\\equiv 1 \\\\pmod{p}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width=\\\"0.4444em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>p</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">a^{p - 1} \\\\equiv 1 \\\\pmod{p}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mbin mtight\\\">−</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.4444em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Consequently,\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a^{p-2} \\\\cdot a \\\\equiv 1 \\\\pmod{p}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>⋅</mo><mi>a</mi><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width=\\\"0.4444em\\\"/><mo stretchy=\\\"false\\\">(</mo><mrow><mi mathvariant=\\\"normal\\\">m</mi><mi mathvariant=\\\"normal\\\">o</mi><mi mathvariant=\\\"normal\\\">d</mi></mrow><mspace width=\\\"0.3333em\\\"/><mi>p</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">a^{p-2} \\\\cdot a \\\\equiv 1 \\\\pmod{p}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mbin mtight\\\">−</span><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">⋅</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4637em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≡</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace allowbreak\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.4444em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\"><span class=\\\"mord mathrm\\\">mod</span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.3333em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Therefore, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a^{p - 2}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">a^{p - 2}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">p</span><span class=\\\"mbin mtight\\\">−</span><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" is a modular inverse\\r\\nof \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" modulo \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"const int MOD = 1e9 + 7;\\r\\n\\r\\nint main() {\\r\\n\\tll x = binpow(2, MOD - 2, MOD);\\r\\n\\tcout << x << \\\"\\\\n\\\";  // 500000004\\r\\n\\tassert(2 * x % MOD == 1);\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public class Main {\\r\\n\\tpublic static final int MOD = (int) Math.pow(10, 9) + 7;\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tlong x = binpow(2, MOD - 2, MOD);\\r\\n\\t\\tSystem.out.println(x);  // 500000004\\r\\n\\t\\tassert(2 * x % MOD == 1);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"MOD = 10 ** 9 + 7\\r\\n\\r\\nx = pow(2, MOD - 2, MOD);\\r\\nprint(x)  # 500000004\\r\\nassert(2 * x % MOD == 1);\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Because it takes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log p)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log p)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time to compute a modular inverse modulo\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"p\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n      }), \", frequent use of division inside a loop can significantly increase the\\r\\nrunning time of a program. If the modular inverse of the same number(s) is/are\\r\\nbeing used many times, it is a good idea to precalculate it.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Also, one must always ensure that they do not attempt to divide by 0. Be aware\\r\\nthat after applying modulo, a nonzero number can become zero, so be very careful\\r\\nwhen dividing by non-constant values.\"\n    }), \"\\n\", _jsx(Optional, {\n      title: \"Another Way to Compute Modular Inverses\",\n      children: _jsxs(_components.p, {\n        children: [\"We can also use the extended Euclidean algorithm. See the module in the\\r\\n\", _jsx(_components.a, {\n          href: \"/adv/extend-euclid\",\n          children: \"Advanced\"\n        }), \" section.\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"templates\",\n      children: [_jsx(_components.a, {\n        href: \"#templates\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Templates\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"Benq\",\n        title: \"ModInt\",\n        url: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/number-theory%20(11.1)/Modular%20Arithmetic/ModInt.h\"\n      }), _jsx(Resource, {\n        source: \"Benq\",\n        title: \"ModIntShort\",\n        url: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/number-theory%20(11.1)/Modular%20Arithmetic/ModIntShort.h\",\n        children: _jsx(_components.p, {\n          children: \"feasible to type up during a contest\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Using BenQ's template, both of these do the same thing:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nconst int MOD = 1e9 + 7;\\r\\n\\r\\n//BeginCodeSnip{ModInt}\\r\\nstruct mi {\\r\\n \\tint v; explicit operator int() const { return v; }\\r\\n\\tmi() { v = 0; }\\r\\n\\tmi(long long _v) : v(_v % MOD) { v += (v < 0) * MOD; }\\r\\n};\\r\\nmi& operator+=(mi& a, mi b) { \\r\\n\\tif ((a.v += b.v) >= MOD) a.v -= MOD; \\r\\n\\treturn a;\\r\\n}\\r\\nmi& operator-=(mi& a, mi b) { \\r\\n\\tif ((a.v -= b.v) < 0) a.v += MOD; \\r\\n\\treturn a;\\r\\n}\\r\\nmi operator+(mi a, mi b) { return a += b; }\\r\\nmi operator-(mi a, mi b) { return a -= b; }\\r\\nmi operator*(mi a, mi b) { return mi((long long) a.v * b.v); }\\r\\nmi& operator*=(mi& a, mi b) { return a = a * b; }\\r\\nmi pow(mi a, long long p) {\\r\\n\\tassert(p >= 0);\\r\\n\\treturn p == 0 ? 1 : pow(a * a, p / 2) * (p & 1 ? a : 1);\\r\\n}\\r\\nmi inv(mi a) { assert(a.v != 0); return pow(a, MOD - 2); }\\r\\nmi operator/(mi a, mi b) { return a * inv(b); }\\r\\n//EndCodeSnip\\r\\n\\r\\nint main() {\\r\\n\\t{\\r\\n\\t\\tint a = 1e8, b = 1e8, c = 1e8;\\r\\n\\t\\tcout << (long long) a * b % MOD * c % MOD << \\\"\\\\n\\\";  // 49000000\\r\\n\\t}\\r\\n\\t{\\r\\n\\t\\tmi a = 1e8, b = 1e8, c = 1e8;\\r\\n\\t\\t// cout << a * b * c << \\\"\\\\n\\\";  // errors out- we have to convert it to an int\\r\\n\\t\\tcout << (int) (a * b * c) << \\\"\\\\n\\\";  // 49000000\\r\\n\\t}\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"general\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  contributors,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Modular Arithmetic","author":"Darren Yao, Michael Cao, Andi Qu, Benjamin Qi, Andrew Wang","contributors":"Kevin Sheng","id":"modular","prerequisites":["divisibility"],"description":"Working with remainders from division.","frequency":2},"parent":{"name":"Modular","relativePath":"4_Gold/Modular.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Modular Exponentiation","slug":"modular-exponentiation"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Exponentiation","slug":"solution---exponentiation"},{"depth":2,"value":"Modular Inverse","slug":"modular-inverse"},{"depth":3,"value":"With Exponentiation","slug":"with-exponentiation"},{"depth":2,"value":"Templates","slug":"templates"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Modular Exponentiation","slug":"modular-exponentiation"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Exponentiation","slug":"solution---exponentiation"},{"depth":2,"value":"Modular Inverse","slug":"modular-inverse"},{"depth":3,"value":"With Exponentiation","slug":"with-exponentiation"},{"depth":2,"value":"Templates","slug":"templates"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Modular Exponentiation","slug":"modular-exponentiation"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Solution - Exponentiation","slug":"solution---exponentiation"},{"depth":2,"value":"Modular Inverse","slug":"modular-inverse"},{"depth":3,"value":"With Exponentiation","slug":"with-exponentiation"},{"depth":2,"value":"Templates","slug":"templates"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"expo","problems":[{"uniqueId":"cses-1095","name":"Exponentiation","url":"https://cses.fi/problemset/task/1095","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Modular Arithmetic"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/gold/modular#problem-cses-1095","sketch":null}}]},{"listId":"general","problems":[{"uniqueId":"cses-1712","name":"Exponentiation II","url":"https://cses.fi/problemset/task/1712","source":"CSES","difficulty":"Easy","isStarred":true,"tags":["Modular Arithmetic"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1279D","name":"Santa's Bot","url":"https://codeforces.com/contest/1279/problem/D","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Modular Arithmetic"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-2182","name":"Divisor Analysis","url":"https://cses.fi/problemset/task/2182","source":"CSES","difficulty":"Normal","isStarred":true,"tags":["Modular Arithmetic"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"dmoj-bots","name":"Bots","url":"https://dmoj.ca/problem/bbc08h","source":"DMOJ","difficulty":"Hard","isStarred":false,"tags":["Modular Arithmetic"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"modular"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}