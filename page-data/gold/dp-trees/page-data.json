{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/dp-trees",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"dp-trees\", title = \"DP on Trees - Introduction\", author = \"Michael Cao, Benjamin Qi\", prerequisites = [\"intro-tree\", \"func-graphs\", \"intro-dp\"], description = \"Using subtrees as subproblems.\", frequency = 2;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    Info: _missingComponent(\"Info\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Warning: _missingComponent(\"Warning\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {FocusProblem, HeaderLink, Resources, Resource, Info, MATHSPAN, MATHDIV, Warning, Spoiler, LanguageSection, CPPSection, JavaSection, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(FocusProblem, {\n      problem: \"sample\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tutorial\",\n      children: [_jsx(_components.a, {\n        href: \"#tutorial\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Tutorial\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CF\",\n        title: \"DP on Trees\",\n        url: \"20935\"\n      }), _jsx(Resource, {\n        source: \"Philippines\",\n        title: \"DP on Trees and DAGs\",\n        url: \"https://noi.ph/training/weekly/week5.pdf\",\n        children: _jsx(_components.p, {\n          children: \"bad code format\"\n        })\n      })]\n    }), \"\\n\", _jsx(Info, {\n      title: \"Pro Tip\",\n      children: _jsx(_components.p, {\n        children: \"Don't just dive into trying to figure out a DP state and transitions -- make\\r\\nsome observations if you don't see any obvious DP solution! Also, sometimes a\\r\\ngreedy strategy suffices in place of DP.\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution---tree-matching\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---tree-matching\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Tree Matching\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution-1\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 1\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this problem, we're asked to find the maximum matching of a tree, or the\\r\\nlargest set of edges such that no two edges share an endpoint. Let's use DP on\\r\\ntrees to do this.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Root the tree at node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \", allowing us to define the subtree of each node.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_2[v]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" represent the maximum matching of the subtree of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" such that we\\r\\ndon't take any edges leading to some child of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \". Similarly, let \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_1[v]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \"\\r\\nrepresent the maximum matching of the subtree of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" such that we take one edge\\r\\nleading into a child of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \". Note that we can't take more than one edge leading\\r\\nto a child, because then two edges would share an endpoint.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"taking-no-edges\",\n      children: [_jsx(_components.a, {\n        href: \"#taking-no-edges\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Taking No Edges\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since we will take no edges to a child of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \", the children vertices of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" can\\r\\nall take an edge to some child, or not. Additionally, observe that the children\\r\\nof \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" taking an edge to a child will not prevent other children of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" from\\r\\ndoing the same. In other words, all of the children are independent. So, the\\r\\ntransitions are:\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"dp_2[v] = \\\\sum_{u \\\\in child(v)} \\\\max(dp_1[u], dp_2[u])\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mo stretchy=\\\"false\\\">(</mo><mi>v</mi><mo stretchy=\\\"false\\\">)</mo></mrow></munder><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v] = \\\\sum_{u \\\\in child(v)} \\\\max(dp_1[u], dp_2[u])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:2.566em;vertical-align:-1.516em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.809em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">u</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\">c</span><span class=\\\"mord mathnormal mtight\\\">hi</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal mtight\\\">d</span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose mtight\\\">)</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.516em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">])</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"taking-one-edge\",\n      children: [_jsx(_components.a, {\n        href: \"#taking-one-edge\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Taking One Edge\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The case where we take one child edge of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n      }), \" is a bit trickier. Let's assume the\\r\\nedge we take is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v \\\\rightarrow u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mo>→</mo><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v \\\\rightarrow u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u \\\\in child(v)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi><mo>∈</mo><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mo stretchy=\\\"false\\\">(</mo><mi>v</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">u \\\\in child(v)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5782em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">∈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mord mathnormal\\\">hi</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Then, to calculate\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_1[v]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" for the fixed \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \":\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"dp_1[v] = dp_2[u] + 1 + dp_2[v] - \\\\max(dp_2[u], dp_1[u])\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo>+</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v] = dp_2[u] + 1 + dp_2[v] - \\\\max(dp_2[u], dp_1[u])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">])</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In other words, we take the edge \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"v \\\\rightarrow u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mo>→</mo><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v \\\\rightarrow u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \", but we can't take any\\r\\nchildren of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \" in the matching, so we add \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_2[u] + 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[u] + 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \". Then, to deal with the\\r\\nother children, we add:\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\sum_{w \\\\in child(v), w \\\\neq u} \\\\max(dp_1[w], dp_2[w]).\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><munder><mo>∑</mo><mrow><mi>w</mi><mo>∈</mo><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mo stretchy=\\\"false\\\">(</mo><mi>v</mi><mo stretchy=\\\"false\\\">)</mo><mo separator=\\\"true\\\">,</mo><mi>w</mi><mo mathvariant=\\\"normal\\\">≠</mo><mi>u</mi></mrow></munder><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>w</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>w</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum_{w \\\\in child(v), w \\\\neq u} \\\\max(dp_1[w], dp_2[w]).</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:2.566em;vertical-align:-1.516em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.809em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\">c</span><span class=\\\"mord mathnormal mtight\\\">hi</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal mtight\\\">d</span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose mtight\\\">)</span><span class=\\\"mpunct mtight\\\">,</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mrel mtight\\\"><span class=\\\"mrel mtight\\\"><span class=\\\"mord vbox mtight\\\"><span class=\\\"thinbox mtight\\\"><span class=\\\"rlap mtight\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"inner\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mrel mtight\\\"></span></span></span><span class=\\\"fix\\\"></span></span></span></span></span><span class=\\\"mrel mtight\\\">=</span></span><span class=\\\"mord mathnormal mtight\\\">u</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.516em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02691em;\\\">w</span><span class=\\\"mclose\\\">])</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Fortunately, since we've calculated \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_2[v]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" already, this expression\\r\\nsimplifies to:\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"dp_2[v] - \\\\max(dp_2[u], dp_1[u])\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v] - \\\\max(dp_2[u], dp_1[u])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">])</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Overall, to calculate the transitions for \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"dp_1[v]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" over all possible children\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"u\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\\"application/x-tex\\\">u</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">u</span></span></span></span>\"\n      }), \":\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"dp_1[v] = \\\\max_{u \\\\in child(v)} (dp_2[u] + 1 + dp_2[v] - \\\\max(dp_2[u], dp_1[u]))\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>u</mi><mo>∈</mo><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mo stretchy=\\\"false\\\">(</mo><mi>v</mi><mo stretchy=\\\"false\\\">)</mo></mrow></munder><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo>+</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>u</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v] = \\\\max_{u \\\\in child(v)} (dp_2[u] + 1 + dp_2[v] - \\\\max(dp_2[u], dp_1[u]))</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.716em;vertical-align:-0.966em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.4306em;\\\"><span style=\\\"top:-2.309em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">u</span><span class=\\\"mrel mtight\\\">∈</span><span class=\\\"mord mathnormal mtight\\\">c</span><span class=\\\"mord mathnormal mtight\\\">hi</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal mtight\\\">d</span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose mtight\\\">)</span></span></span></span><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop\\\">max</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.966em;\\\"><span></span></span></span></span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mclose\\\">]))</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsxs(_components.p, {\n        children: [\"Loop through the children of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"v\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\\"application/x-tex\\\">v</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span></span></span></span>\"\n        }), \" twice to calculate \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"dp_1[v]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"dp_2[v]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \"\\r\\nseparately! You need to know \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"dp_2[v]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_2[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" to calculate \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"dp_1[v]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\\\"false\\\">[</mo><mi>v</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">dp_1[v]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Code\",\n      children: _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\nusing vi = vector<int>;\\r\\n#define pb push_back\\r\\n#define rsz resize\\r\\n#define all(x) begin(x), end(x)\\r\\n#define sz(x) (int)(x).size()\\r\\nusing pi = pair<int,int>;\\r\\n#define f first\\r\\n#define s second\\r\\n#define mp make_pair\\r\\nvoid setIO(string name = \\\"\\\") { // name is nonempty for USACO file I/O\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0); // see Fast Input & Output\\r\\n\\tif(sz(name)){\\r\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin); // see Input & Output\\r\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvi adj[200005]; int dp[200005][2];\\r\\n\\r\\nvoid dfs(int v, int p) {\\r\\n\\tfor (int to : adj[v]) {\\r\\n\\t\\tif (to != p) {\\r\\n\\t\\t\\tdfs(to, v);\\r\\n\\t\\t\\tdp[v][0] += max(dp[to][0], dp[to][1]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfor (int to : adj[v]) {\\r\\n\\t\\tif (to != p) {\\r\\n\\t\\t\\t dp[v][1] = max(dp[v][1], dp[to][0] + 1 + dp[v][0] - max(dp[to][0], dp[to][1]));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tsetIO();\\r\\n\\tint n; cin >> n;\\r\\n\\tfor (int i = 0; i < n - 1; i++) {\\r\\n\\t\\tint u, v; cin >> u >> v;\\r\\n\\t\\tu--, v--;\\r\\n\\t\\tadj[u].pb(v), adj[v].pb(u);\\r\\n\\t}\\r\\n\\tdfs(0, -1);\\r\\n\\tcout << max(dp[0][0], dp[0][1]) << '\\\\n';\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class TreeMatching {\\r\\n\\tstatic ArrayList<Integer> adj[];\\r\\n\\tstatic int dp[][];\\r\\n\\tstatic void dfs(int v, int p) {\\r\\n\\t\\tfor (int to : adj[v]) {\\r\\n\\t\\t\\tif(to != p) {\\r\\n\\t\\t\\t\\tdfs(to, v);\\r\\n\\t\\t\\t\\tdp[v][0] += Math.max(dp[to][0], dp[to][1]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfor (int to : adj[v]) {\\r\\n\\t\\t\\tif(to != p) {\\r\\n\\t\\t\\t\\tdp[v][1] = Math.max(dp[v][1], dp[to][0] + 1 + dp[v][0] - Math.max(dp[to][0], dp[to][1]));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint N = Integer.parseInt(br.readLine());\\r\\n\\t\\tadj = new ArrayList[N];\\r\\n\\t\\tdp = new int[N][2];\\r\\n\\t\\tfor (int i = 0; i < N; ++i) {\\r\\n\\t\\t\\tadj[i] = new ArrayList<Integer>();\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < N - 1; ++i) {\\r\\n\\t\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tint a = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tint b = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tadj[a].add(b);\\r\\n\\t\\t\\tadj[b].add(a);\\r\\n\\t\\t}\\r\\n\\t\\tdfs(0, -1);\\r\\n\\t\\tSystem.out.println(Math.max(dp[0][0], dp[0][1]));\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution-2---greedy\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-2---greedy\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution 2 - Greedy\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Just keep matching a leaf with the only vertex adjacent to it while possible.\"\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Code\",\n      children: _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int n;\\r\\nvi adj[MX];\\r\\nbool done[MX];\\r\\nint ans = 0;\\r\\n\\r\\nvoid dfs(int pre, int cur) {\\r\\n\\tfor (int i: adj[cur]) {\\r\\n\\t\\tif (i != pre) {\\r\\n\\t\\t\\tdfs(cur,i);\\r\\n\\t\\t\\tif (!done[i] && !done[cur])\\r\\n\\t\\t\\t\\tdone[cur] = done[i] = 1, ans ++;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0); cin.tie(0);\\r\\n\\tcin >> n;\\r\\n\\tF0R(i,n-1) {\\r\\n\\t\\tint a,b; cin >> a >> b;\\r\\n\\t\\tadj[a].pb(b), adj[b].pb(a);\\r\\n\\t}\\r\\n\\tdfs(0,1);\\r\\n\\tcout << ans;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class TreeMatching {\\r\\n\\tstatic ArrayList<Integer> adj[];\\r\\n\\tstatic int N;\\r\\n\\tstatic boolean done[];\\r\\n\\tstatic int ans = 0;\\r\\n\\tstatic void dfs(int v, int p) {\\r\\n\\t\\tfor (int to : adj[v]) {\\r\\n\\t\\t\\tif(to != p) {\\r\\n\\t\\t\\t\\tdfs(to, v);\\r\\n\\t\\t\\t\\tif(!done[to] && !done[v]) {\\r\\n\\t\\t\\t\\t\\tdone[v] = done[to] = true;\\r\\n\\t\\t\\t\\t\\t++ans;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tN = Integer.parseInt(br.readLine());\\r\\n\\t\\tadj = new ArrayList[N];\\r\\n\\t\\tdone = new boolean[N];\\r\\n\\t\\tfor (int i = 0; i < N; ++i) {\\r\\n\\t\\t\\tadj[i] = new ArrayList<Integer>();\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < N - 1; ++i) {\\r\\n\\t\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tint a = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tint b = Integer.parseInt(st.nextToken()) - 1;\\r\\n\\t\\t\\tadj[a].add(b);\\r\\n\\t\\t\\tadj[b].add(a);\\r\\n\\t\\t}\\r\\n\\t\\tdfs(0, -1);\\r\\n\\t\\tSystem.out.println(ans);\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"easier\",\n      children: [_jsx(_components.a, {\n        href: \"#easier\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Easier\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"easier\"\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"Memory limit for \\\"Spies\\\" is very tight.\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"harder\",\n      children: [_jsx(_components.a, {\n        href: \"#harder\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Harder\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These problems are not Gold level. You may wish to return to these once you're\\r\\nin Platinum.\"\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"insane\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"DP on Trees - Introduction","author":"Michael Cao, Benjamin Qi","contributors":null,"id":"dp-trees","prerequisites":["intro-tree","func-graphs","intro-dp"],"description":"Using subtrees as subproblems.","frequency":2},"parent":{"name":"DP_Trees","relativePath":"4_Gold/DP_Trees.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Tutorial","slug":"tutorial"},{"depth":2,"value":"Solution - Tree Matching","slug":"solution---tree-matching"},{"depth":3,"value":"Solution 1","slug":"solution-1"},{"depth":4,"value":"Taking No Edges","slug":"taking-no-edges"},{"depth":4,"value":"Taking One Edge","slug":"taking-one-edge"},{"depth":3,"value":"Solution 2 - Greedy","slug":"solution-2---greedy"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"Easier","slug":"easier"},{"depth":3,"value":"Harder","slug":"harder"}],"java":[{"depth":2,"value":"Tutorial","slug":"tutorial"},{"depth":2,"value":"Solution - Tree Matching","slug":"solution---tree-matching"},{"depth":3,"value":"Solution 1","slug":"solution-1"},{"depth":4,"value":"Taking No Edges","slug":"taking-no-edges"},{"depth":4,"value":"Taking One Edge","slug":"taking-one-edge"},{"depth":3,"value":"Solution 2 - Greedy","slug":"solution-2---greedy"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"Easier","slug":"easier"},{"depth":3,"value":"Harder","slug":"harder"}],"py":[{"depth":2,"value":"Tutorial","slug":"tutorial"},{"depth":2,"value":"Solution - Tree Matching","slug":"solution---tree-matching"},{"depth":3,"value":"Solution 1","slug":"solution-1"},{"depth":4,"value":"Taking No Edges","slug":"taking-no-edges"},{"depth":4,"value":"Taking One Edge","slug":"taking-one-edge"},{"depth":3,"value":"Solution 2 - Greedy","slug":"solution-2---greedy"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"Easier","slug":"easier"},{"depth":3,"value":"Harder","slug":"harder"}]}},"moduleProblemLists":{"problemLists":[{"listId":"sample","problems":[{"uniqueId":"cses-1130","name":"Tree Matching","url":"https://cses.fi/problemset/task/1130","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["DP"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/gold/dp-trees#problem-cses-1130","sketch":null}}]},{"listId":"easier","problems":[{"uniqueId":"ac-IndependentSet","name":"Independent Set","url":"https://atcoder.jp/contests/dp/tasks/dp_p","source":"AC","difficulty":"Easy","isStarred":true,"tags":["Tree","DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-766","name":"Barn Painting","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=766","source":"Gold","difficulty":"Easy","isStarred":false,"tags":["Tree","DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-161D","name":"Distance in Tree","url":"https://codeforces.com/contest/161/problem/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Tree","DP"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"baltic-20-VillageMinimum","name":"2020 - Village (Minimum)","url":"https://codeforces.com/contest/1387/problem/B1","source":"Baltic OI","difficulty":"Normal","isStarred":false,"tags":["Tree","Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1521D","name":"Nastia Plays with a Tree","url":"https://codeforces.com/contest/1521/problem/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Tree","Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"poi-parade","name":"Parade","url":"https://szkopul.edu.pl/problemset/problem/1QaUWE_ePAmitZjgAszOVD1U/site/?key=statement","source":"POI","difficulty":"Normal","isStarred":false,"tags":["Tree"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-440D","name":"Berland Federalization","url":"https://codeforces.com/problemset/problem/440/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Tree","DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1528A","name":"Parsa's Humongous Tree","url":"https://codeforces.com/problemset/problem/1528/A","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Tree","DP"],"solution":null},{"uniqueId":"usaco-1019","name":"Delegation","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1019","source":"Gold","difficulty":"Hard","isStarred":false,"tags":["Tree","Greedy"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_deleg_gold_feb20.html","sketch":null}},{"uniqueId":"poi-04-spies","name":"2004 - Spies","url":"https://szkopul.edu.pl/problemset/problem/r6tMTfvQFPAEfQioYMCQndQe/site/?key=statement","source":"POI","difficulty":"Hard","isStarred":false,"tags":["Functional Graph"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"poi-08-mafia","name":"2008 - Mafia","url":"https://szkopul.edu.pl/problemset/problem/w3YAoAT3ej27YeiaNWjK57_G/site/?key=statement","source":"POI","difficulty":"Hard","isStarred":false,"tags":["Functional Graph"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"insane","problems":[{"uniqueId":"coi-16-torrent","name":"2016 - Torrent","url":"https://oj.uz/problem/view/COI16_torrent","source":"COI","difficulty":"Very Hard","isStarred":false,"tags":["DP","Tree"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-1020","name":"Delegation","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1020","source":"Plat","difficulty":"Very Hard","isStarred":false,"tags":["DP","Tree","Binary Search"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_deleg_platinum_feb20.html","sketch":null}},{"uniqueId":"cf-1394D","name":"Boboniu and Jianghu","url":"https://codeforces.com/contest/1394/problem/D","source":"CF","difficulty":"Very Hard","isStarred":false,"tags":["DP","Tree"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"ioi-07-training","name":"2007 - Training","url":"https://oj.uz/problem/view/IOI07_training","source":"IOI","difficulty":"Insane","isStarred":true,"tags":["DP","Tree"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"https://ioinformatics.org/page/ioi-2007/33","sketch":null}},{"uniqueId":"cses-1752","name":"Creating Offices","url":"https://cses.fi/problemset/task/1752","source":"CSES","difficulty":"Insane","isStarred":false,"tags":["Tree","Greedy"],"solution":{"kind":"sketch","label":null,"labelTooltip":null,"url":null,"sketch":"equivalent to Baltic OI - Cat in a Tree."}},{"uniqueId":"baltic-16-swap","name":"2016 - Swap","url":"https://oj.uz/problem/view/BOI16_swap","source":"Baltic OI","difficulty":"Insane","isStarred":false,"tags":["Tree","DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"dp-trees"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}