{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/stacks",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*<Resource source=\"PAPS\" title=\"3.3, 6.2 - Stacks\" />\n<Resource\nsource=\"CP2\"\ntitle=\"2.2 - Data Structures with Built-in Libraries\"\n/>\n*/\n/*<Resource\nsource=\"Medium\"\ntitle=\"Monotonic Stack\"\nurl=\"https://medium.com/@vishnuvardhan623/monotonic-stack-e9dcc4fa8c3e\"\n/>*/\n/*\n\n(actually go through these and check ...)\n\n### Stack\n\n- UVa 00514 - Rails\n- UVa 00732 - Anagram by Stack\n- UVa 01062 - Containers\n\n### Queue / Deque\n\n- UVa 10172 - The Lonesome Cargo\n- UVa 10901 - Ferry Loading III\n- UVa 11034 - Ferry Loading IV\n*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"stacks\", title = \"Stacks\", author = \"Darren Yao, Michael Cao\", description = \"A data structures that only allows insertion and deletion at one end.\", prerequisites = [\"intro-ds\"], frequency = 1;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {Resources, Resource, HeaderLink, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, FocusProblem, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"4.5 - Stacks\",\n        children: _jsx(_components.p, {\n          children: \"brief description of operations\"\n        })\n      }), _jsx(Resource, {\n        source: \"CSA\",\n        title: \"Stack Introduction\",\n        url: \"stack_introduction\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"Bracket Matching Application\"\n        })\n      })]\n    }), \"\\n\", \"\\n\", _jsxs(_components.h2, {\n      id: \"stacks\",\n      children: [_jsx(_components.a, {\n        href: \"#stacks\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Stacks\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A stack is a \", _jsx(_components.strong, {\n        children: \"Last In First Out\"\n      }), \" (LIFO) data structure that supports three\\r\\noperations, all in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time. Think of it like a real-world stack of\\r\\npapers.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"c\",\n          children: [_jsx(_components.a, {\n            href: \"#c\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), _jsx(_components.a, {\n            href: \"http://www.cplusplus.com/reference/stack/stack/\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"C++\"\n          })]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"push\"\n            }), \": adds an element to the top of the stack\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"pop\"\n            }), \": removes an element from the top of the stack\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"top\"\n            }), \": retrieves the element at the top without removing it\"]\n          }), \"\\n\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"stack<int> s;\\r\\ns.push(1); // [1]\\r\\ns.push(13); // [1, 13]\\r\\ns.push(7); // [1, 13, 7]\\r\\ncout << s.top() << endl; // 7\\r\\ns.pop(); // [1, 13]\\r\\ncout << s.size() << endl; // 2\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.h3, {\n          id: \"java\",\n          children: [_jsx(_components.a, {\n            href: \"#java\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Java\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"push\"\n            }), \": adds an element to the top of the stack\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"pop\"\n            }), \": removes an element from the top of the stack\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"peek\"\n            }), \": retrieves the element at the top without removing it\"]\n          }), \"\\n\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"Stack<Integer> s = new Stack<Integer>();\\r\\ns.push(1); // [1]\\r\\ns.push(13); // [1, 13]\\r\\ns.push(7); // [1, 13, 7]\\r\\nSystem.out.println(s.peek()); // 7\\r\\ns.pop(); // [1, 13]\\r\\nSystem.out.println(s.size()); // 2\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.h3, {\n          id: \"python\",\n          children: [_jsx(_components.a, {\n            href: \"#python\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Python\"]\n        }), _jsx(_components.p, {\n          children: \"Python does not have a built-in stack type, but a list can function\\r\\nlike a stack.\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"list.append()\"\n            }), \": Appends an element to the end.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"list[-1]\"\n            }), \": Retrieves the last element without removing it.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"list.pop()\"\n            }), \": Removes the last element and returns it\\r\\n(but you don't need to use the returned value).\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"list.pop(n)\"\n            }), \": Removes the nth element, 0-indexed. Note that removing\\r\\nelements is an \", _jsx(_components.code, {\n              children: \"O(n)\"\n            }), \" operation.\"]\n          }), \"\\n\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"stack = []        # []\\r\\nstack.append(1)   # [1]\\r\\nstack.append(2)   # [1, 2]\\r\\nstack.append(3)   # [1, 2, 3]\\r\\nv = stack[-1]     # stack = [1, 2, 3] (unchanged), v = 3\\r\\nstack.pop()       # [1, 2]\\r\\nv = stack.pop()   # stack = [1], v = 2\\r\\nstack.append(4)   # [1, 4]\\r\\nv = stack.pop(0)  # stack = [4], v = 1\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"application---nearest-smaller-element\",\n      children: [_jsx(_components.a, {\n        href: \"#application---nearest-smaller-element\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Application - Nearest Smaller Element\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"nearest\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Consider the following problem:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Given an array, \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n        }), \", of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"N\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n        }), \" (\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1 \\\\le N \\\\le 10^5\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\le N \\\\le 10^5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">5</span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \") integers, for every index\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \", find the rightmost index \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \" such that \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j < i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi><mo>&lt;</mo><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j &lt; i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" and \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a_i > a_j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>&gt;</mo><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i &gt; a_j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6891em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7167em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"8.2 - Nearest Smaller Element\",\n        starred: true\n      }), _jsx(Resource, {\n        source: \"CSA\",\n        title: \"Stack Application - Soldier's Row\",\n        url: \"stack_application_soldiers_row\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"similar application w/ animation\"\n        })\n      })]\n    }), \"\\n\", \"\\n\", _jsxs(_components.p, {\n      children: [\"To solve this, let's store a stack of pairs of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"value, index\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo separator=\\\"true\\\">,</mo><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">value, index</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">in</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" and iterate over\\r\\nthe array from left to right. For some index \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \", we will compute\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{ans}[i]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">ans</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{ans}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">ans</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \", the rightmost index for \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \", as follows:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Keep popping the top element off the stack as long as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"value \\\\ge a_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>≥</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">value \\\\ge a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \". This is\\r\\nbecause we know that the pair containing \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"value\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding=\\\"application/x-tex\\\">value</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord mathnormal\\\">e</span></span></span></span>\"\n        }), \" will never be the solution to\\r\\nany index \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j > i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi><mo>&gt;</mo><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j &gt; i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&gt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \", since \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" is less than or equal to than \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"value\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding=\\\"application/x-tex\\\">value</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord mathnormal\\\">e</span></span></span></span>\"\n        }), \" and has\\r\\nan index further to the right.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"value < a_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>&lt;</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">value &lt; a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7335em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">v</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mord mathnormal\\\">u</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \", set \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\texttt{ans}[i]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">ans</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{ans}[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">ans</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"index\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">index</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">in</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \", because a stack stores the\\r\\nmost recently added values first (or in this case, the rightmost ones),\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"index\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">index</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">in</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mord mathnormal\\\">e</span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" will contain the rightmost value which is less than \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a_i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \". Then, add\\r\\n(\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a_i, i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo separator=\\\"true\\\">,</mo><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a_i, i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \") to the stack.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The stack we used is called a \", _jsx(_components.strong, {\n        children: \"monotonic stack\"\n      }), \" because we keep popping off\\r\\nthe top element of the stack which maintains it's monotonicity (the same\\r\\nproperty needed for algorithms like binary search) because the elements in the\\r\\nstack are increasing.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nint N;\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tcin >> N;\\r\\n\\tstack<pair<int, int>> stack;\\r\\n\\tstack.push({0, 0});\\r\\n\\r\\n\\tfor(int i = 1; i <= N; ++i) {\\r\\n\\t\\tint a; cin >> a;\\r\\n\\t\\twhile(!stack.empty() && stack.top().first >= a) stack.pop();\\r\\n\\t\\tcout << stack.top().second << \\\" \\\";\\r\\n\\t\\tstack.push({a, i});\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"\\r\\n/**\\r\\n * author: Kai Wang\\r\\n */\\r\\n\\r\\nimport java.io.*; import java.util.*;\\r\\npublic class NearestSmallestVals {\\r\\n\\r\\n    /**\\r\\n     * We keep a stack of pairs (ind, value)\\r\\n     * Traverse the array from left to right, use ans to store answers\\r\\n     * If the value of the a_i> (stk.peek()=a_k) then I remove the top of the stack.\\r\\n     * This is okay because for all j>k, a_j>=a_k, or (j,a_j) is in the stack\\r\\n     * If a_k < a_i then we set ans[i]=k and insert (i,a_i)\\r\\n     * Note the stack elements are sorted in order of index\\r\\n     *\\r\\n     */\\r\\n    public static void main(String[] args) throws IOException {\\r\\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\r\\n        int N=Integer.parseInt(br.readLine()); int[] a=new int[N+1];\\r\\n        StringTokenizer st=new StringTokenizer(br.readLine());\\r\\n        for (int i = 1; i <= N; i++) {\\r\\n            a[i]=Integer.parseInt(st.nextToken());\\r\\n        }\\r\\n        Stack<Integer> stk=new Stack<>();\\r\\n        stk.add(0);\\r\\n        stk.add(1);\\r\\n        int[] ans=new int[N+1];ans[1]=0;\\r\\n        for (int i = 2; i <=N; i++) {\\r\\n            while(a[stk.peek()]>=a[i]){\\r\\n                stk.pop();\\r\\n            }\\r\\n            //stk.peek()<a[i]\\r\\n            //This exists because a[0]=0 and a[i]>0 for all i>0\\r\\n            ans[i]=stk.peek();\\r\\n            stk.push(i);\\r\\n        }\\r\\n        for (int i = 1; i <=N; i++) {\\r\\n            System.out.print(ans[i]+\\\" \\\");\\r\\n        }\\r\\n    }\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"general\"\n    }), \"\\n\"]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  prerequisites,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Stacks","author":"Darren Yao, Michael Cao","contributors":null,"id":"stacks","prerequisites":["intro-ds"],"description":"A data structures that only allows insertion and deletion at one end.","frequency":1},"parent":{"name":"Stacks","relativePath":"4_Gold/Stacks.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Stacks","slug":"stacks"},{"depth":3,"value":"C++","slug":"c"},{"depth":2,"value":"Application - Nearest Smaller Element","slug":"application---nearest-smaller-element"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Stacks","slug":"stacks"},{"depth":3,"value":"Java","slug":"java"},{"depth":2,"value":"Application - Nearest Smaller Element","slug":"application---nearest-smaller-element"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Stacks","slug":"stacks"},{"depth":3,"value":"Python","slug":"python"},{"depth":2,"value":"Application - Nearest Smaller Element","slug":"application---nearest-smaller-element"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"nearest","problems":[{"uniqueId":"cses-1645","name":"Nearest Smaller Values","url":"https://cses.fi/problemset/task/1645","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Stack"],"solution":null}]},{"listId":"general","problems":[{"uniqueId":"cses-1142","name":"Advertisement","url":"https://cses.fi/problemset/task/1142/","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Stack"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ceoi-11-bal","name":"2011 - Balloons","url":"https://oj.uz/problem/view/CEOI11_bal","source":"CEOI","difficulty":"Normal","isStarred":false,"tags":["Stack","Geometry"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"https://oi.edu.pl/static/attachment/20110713/ceoi-2011.pdf#page=11","sketch":null}},{"uniqueId":"usaco-743","name":"Modern Art 2","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=743","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["Stack"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-922","name":"Dishwashing","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=922","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["Stack"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_dishes_gold_feb19.html","sketch":null}},{"uniqueId":"cses-1147","name":"Maximum Building I","url":"https://cses.fi/problemset/task/1147","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Stack"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ceoi-20-FancyFence","name":"2020 - Fancy Fence","url":"https://codeforces.com/contest/1402/problem/A","source":"CEOI","difficulty":"Normal","isStarred":false,"tags":["Stack"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cfgym-101102D","name":"Rectangles","url":"https://codeforces.com/gym/101102/problem/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Stack"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-2416","name":"Increasing Array Queries","url":"https://cses.fi/problemset/task/2416","source":"CSES","difficulty":"Hard","isStarred":false,"tags":["Stack","PURS"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ioi-04-empodia","name":"2004 - Empodia","url":"https://contest.yandex.com/ioi/contest/560/problems/D/","source":"IOI","difficulty":"Very Hard","isStarred":false,"tags":["Stack"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"infoarena-ssdj","name":"ssdj","url":"https://infoarena.ro/problema/ssdj","source":"InfoArena","difficulty":"Very Hard","isStarred":false,"tags":["Stack"],"solution":null},{"uniqueId":"cses-1148","name":"Maximum Building II","url":"https://cses.fi/problemset/task/1148","source":"CSES","difficulty":"Insane","isStarred":false,"tags":["Stack"],"solution":null},{"uniqueId":"coi-15-arulje","name":"2015 - Žarulje","url":"https://oj.uz/problem/view/COI15_zarulje","source":"COI","difficulty":"Insane","isStarred":false,"tags":["Stack"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"https://github.com/mostafa-saad/MyCompetitiveProgramming/blob/master/Olympiad/COI/official/2015/final-exam1/solutions.pdf","sketch":null}}]}]}},"pageContext":{"id":"stacks"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}