{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/all-roots",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"all-roots\", title = \"DP on Trees - Solving For All Roots\", author = \"Benjamin Qi, Andi Qu, Andrew Wang\", contributors = \"Dong Liu\", prerequisites = [\"dp-trees\"], description = \"Tree DP that uses the subtree from excluding each node's subtree.\", frequency = 1;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    Info: _missingComponent(\"Info\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Warning: _missingComponent(\"Warning\"),\n    Problems: _missingComponent(\"Problems\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\")\n  }, _props.components), {FocusProblem, HeaderLink, Resources, Resource, Info, MATHSPAN, LanguageSection, CPPSection, JavaSection, Warning, Problems, IncompleteSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsx(FocusProblem, {\n      problem: \"ex\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"solution---tree-distances-i\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---tree-distances-i\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Tree Distances I\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPH\",\n        title: \"14.3 - All Longest Paths\"\n      })\n    }), \"\\n\", _jsx(Info, {\n      title: \"Note\",\n      children: _jsxs(_components.p, {\n        children: [\"This problem previously appeared in\\r\\n\", _jsx(_components.a, {\n          href: \"/silver/intro-tree/#problem-cses-1132\",\n          children: \"Intro to Trees\"\n        }), \". This is simply an\\r\\nalternate solution to the problem.\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is a common technique to calculate two DP arrays for some DP on trees problems. Usually one DP array is responsible for calculating results within the subtree rooted at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \". The other DP array calculates results outside of the subtree rooted at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The focus problem asks us to find for each node the maximum distance to another node. We can divide the problem into two parts.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Define \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"f[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">f[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" as the maximum distance from node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" to any node in the subtree rooted at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Define \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">g[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" as the maximum distance from node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" to any node outside of the subtree rooted at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Then the answer for node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max(f[x],g[x])\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(f[x],g[x])</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">])</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"f[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">f[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" can be calculated using a DFS since \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"f[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">f[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max(f[c])+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(f[c])+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">])</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"c\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n      }), \" is a child of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">g[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" can also be calculated using a DFS as \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g[c]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">g[c]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max(g[x]+1,f[d]+1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>d</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(g[x]+1,f[d]+1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">d</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \", where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"c\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"d\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\\\"application/x-tex\\\">d</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span></span></span></span>\"\n      }), \" are both children of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"c \\\\neq d\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi><mo mathvariant=\\\"normal\\\">‚â†</mo><mi>d</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c \\\\neq d</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\"><span class=\\\"mrel\\\"><span class=\\\"mord vbox\\\"><span class=\\\"thinbox\\\"><span class=\\\"rlap\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"inner\\\"><span class=\\\"mord\\\"><span class=\\\"mrel\\\">ÓÄ†</span></span></span><span class=\\\"fix\\\"></span></span></span></span></span><span class=\\\"mrel\\\">=</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">d</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To calculate \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\\\"application/x-tex\\\">g</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span></span></span></span>\"\n      }), \" in linear time, we can define another array \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"h\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\\\"application/x-tex\\\">h</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">h</span></span></span></span>\"\n      }), \" such that \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"h[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>h</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">h[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">h</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" is the second largest distance from node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" to any node in the subtree rooted at \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \". So if \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"f[x]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">f[x]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" is transitioned from the branch with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"c\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n      }), \", \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g[c]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">g[c]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max(g[x]+1,h[x]+1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>h</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(g[x]+1,h[x]+1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">h</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Otherwise \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"g[c]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>c</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">g[c]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" = \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\max(g[x]+1,f[x]+1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mi>g</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mi>f</mi><mo stretchy=\\\"false\\\">[</mo><mi>x</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\max(g[x]+1,f[x]+1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">g</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10764em;\\\">f</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\n\\r\\nvector<int> graph[200001];\\r\\nint fir[200001], sec[200001], ans[200001];\\r\\n\\r\\nvoid dfs1(int node = 1, int parent = 0) {\\r\\n\\tfor (int i : graph[node]) if (i != parent) {\\r\\n\\t\\tdfs1(i, node);\\r\\n\\t\\tif (fir[i] + 1 > fir[node]) {\\r\\n\\t\\t\\tsec[node] = fir[node];\\r\\n\\t\\t\\tfir[node] = fir[i] + 1;\\r\\n\\t\\t} else if (fir[i] + 1 > sec[node]) {\\r\\n\\t\\t\\tsec[node] = fir[i] + 1;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvoid dfs2(int node = 1, int parent = 0, int to_p = 0) {\\r\\n\\tans[node] = max(to_p, fir[node]);\\r\\n\\tfor (int i : graph[node]) if (i != parent) {\\r\\n\\t\\tif (fir[i] + 1 == fir[node]) dfs2(i, node, max(to_p, sec[node]) + 1);\\r\\n\\t\\telse dfs2(i, node, ans[node] + 1);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\tint u, v;\\r\\n\\t\\tcin >> u >> v;\\r\\n\\t\\tgraph[u].push_back(v);\\r\\n\\t\\tgraph[v].push_back(u);\\r\\n\\t}\\r\\n\\tdfs1();\\r\\n\\tdfs2();\\r\\n\\tfor (int i = 1; i <= n; i++) cout << ans[i] << ' ';\\r\\n\\treturn 0;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Main {\\r\\n\\tpublic static ArrayList <Integer> g[];\\r\\n\\tpublic static Pair maxl1[];\\r\\n\\tpublic static Pair maxl2[];\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint N = Integer.parseInt(br.readLine());\\r\\n\\t\\tg = new ArrayList[N + 1];\\r\\n\\t\\tmaxl1 = new Pair[N + 1];\\r\\n\\t\\tmaxl2 = new Pair[N + 1];\\r\\n\\t\\tfor (int i = 0; i <= N; i++) {\\r\\n\\t\\t\\tg[i] = new ArrayList <Integer> ();\\r\\n\\t\\t\\tmaxl1[i] = new Pair(0, 0);\\r\\n\\t\\t\\tmaxl2[i] = new Pair(0, 0);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 1; i < N; i++) {\\r\\n\\t\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tint a = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\tint b = Integer.parseInt(st.nextToken());\\r\\n\\t\\t\\tg[a].add(b);\\r\\n\\t\\t\\tg[b].add(a);\\r\\n\\t\\t}\\r\\n\\t\\tdfs1(1, 0);\\r\\n\\t\\tdfs2(1, 0);\\r\\n\\t\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\t\\tSystem.out.print(maxl1[i].f + \\\" \\\");\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tpublic static int dfs1(int i, int p) {\\r\\n\\t\\tint ret = 0;\\r\\n\\t\\tfor (int next: g[i]) {\\r\\n\\t\\t\\tif (next != p) {\\r\\n\\t\\t\\t\\tint c = dfs1(next, i);\\r\\n\\t\\t\\t\\tret = Math.max(ret, c + 1);\\r\\n\\t\\t\\t\\tif (c + 1 > maxl1[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = maxl1[i];\\r\\n\\t\\t\\t\\t\\tmaxl1[i] = new Pair(c + 1, next);\\r\\n\\r\\n\\t\\t\\t\\t} else if (c + 1 > maxl2[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = new Pair(c + 1, next);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn ret;\\r\\n\\t}\\r\\n\\tpublic static void dfs2(int i, int p) {\\r\\n\\t\\tif (p != 0) {\\r\\n\\t\\t\\tif (maxl1[p].s == i) {\\r\\n\\t\\t\\t\\tif (maxl2[p].f + 1 > maxl1[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = maxl1[i];\\r\\n\\t\\t\\t\\t\\tmaxl1[i] = new Pair(maxl2[p].f + 1, p);\\r\\n\\r\\n\\t\\t\\t\\t} else if (maxl2[p].f + 1 > maxl2[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = new Pair(maxl2[p].f + 1, p);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tif (maxl1[p].f + 1 > maxl1[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = maxl1[i];\\r\\n\\t\\t\\t\\t\\tmaxl1[i] = new Pair(maxl1[p].f + 1, p);\\r\\n\\t\\t\\t\\t} else if (maxl1[p].f + 1 > maxl2[i].f) {\\r\\n\\t\\t\\t\\t\\tmaxl2[i] = new Pair(maxl1[p].f + 1, p);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfor (int next: g[i]) {\\r\\n\\t\\t\\tif (next != p) dfs2(next, i);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tstatic class Pair {\\r\\n\\t\\tpublic int f, s;\\r\\n\\t\\tpublic Pair(int f, int s) {\\r\\n\\t\\t\\tthis.f = f;\\r\\n\\t\\t\\tthis.s = s;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"Although the intended solution for \\\"Cow At Large\\\" is extremely difficult, it is\\r\\nnot too hard to fakesolve! See the internal solution for details.\"\n      })\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"roots\"\n    }), \"\\n\", _jsx(IncompleteSection, {})]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  contributors,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"DP on Trees - Solving For All Roots","author":"Benjamin Qi, Andi Qu, Andrew Wang","contributors":"Dong Liu","id":"all-roots","prerequisites":["dp-trees"],"description":"Tree DP that uses the subtree from excluding each node's subtree.","frequency":1},"parent":{"name":"All_Roots","relativePath":"4_Gold/All_Roots.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Solution - Tree Distances I","slug":"solution---tree-distances-i"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Solution - Tree Distances I","slug":"solution---tree-distances-i"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Solution - Tree Distances I","slug":"solution---tree-distances-i"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"ex","problems":[{"uniqueId":"cses-1132","name":"Tree Distances I","url":"https://cses.fi/problemset/task/1132","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Tree","DFS"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"roots","problems":[{"uniqueId":"cf-1187E","name":"Tree Painting","url":"https://codeforces.com/contest/1187/problem/E","source":"CF","difficulty":"Easy","isStarred":false,"tags":["DP"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"ac-subtree","name":"Subtree","url":"https://atcoder.jp/contests/dp/tasks/dp_v","source":"AC","difficulty":"Normal","isStarred":true,"tags":["DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"balkan-17-CityAttractions","name":"2017 - City Attractions","url":"https://www.acmicpc.net/problem/14875","source":"Balkan OI","difficulty":"Normal","isStarred":false,"tags":["DP","Functional Graph"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-814","name":"Directory Traversal","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=814","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["DP","Tree"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_dirtraverse_gold_feb18.html","sketch":null}},{"uniqueId":"usaco-793","name":"Cow At Large","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=793","source":"Plat","difficulty":"Hard","isStarred":false,"tags":["DP","Tree"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"apio-10-patrol","name":"2010 - Patrol","url":"https://dmoj.ca/problem/apio10p2","source":"APIO","difficulty":"Hard","isStarred":true,"tags":["DP","Casework"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://usaco.guide/patrol-solution.pdf#page=3","sketch":null}},{"uniqueId":"izho-17-HardRoute","name":"2017 - Hard route","url":"https://oj.uz/problem/view/IZhO17_road","source":"IZhO","difficulty":"Hard","isStarred":false,"tags":["DP"],"solution":null},{"uniqueId":"apio-14-beads","name":"2014 - Beads","url":"https://oj.uz/problem/view/APIO14_beads","source":"APIO","difficulty":"Very Hard","isStarred":false,"tags":["DP","Casework"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ceoi-20-StarTrek","name":"2020 - Star Trek","url":"https://codeforces.com/contest/1402/problem/C","source":"CEOI","difficulty":"Very Hard","isStarred":false,"tags":["DP","Math"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}}]}]}},"pageContext":{"id":"all-roots"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}