{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/sliding-window",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*To compute the sum in the range, instead of using a set, we can store a variable $s$ representing the sum. As we move the window forward, we update $s$ by subtracting $a_i$ from $s$ and adding $a_{j+1}$ to $s$.\n*/\n/*<Resources>\n<Resource\nsource=\"GFG\"\ntitle=\"Window Sliding Technique\"\nurl=\"window-sliding-technique\"\n/>\n</Resources>*/\n/*<Resources>\n<Resource\nsource=\"Medium\"\ntitle=\"Introduction to Sliding Window Algorithms\"\nurl=\"https://levelup.gitconnected.com/an-introduction-to-sliding-window-algorithms-5533c4fe1cc7\"\n/>\n</Resources>*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"sliding-window\", redirects = [\"/gold/sliding\"], title = \"Sliding Window\", author = \"Benjamin Qi\", contributors = \"Darren Yao, Andrew Wang\", prerequisites = [\"intro-sorted-sets\", \"two-pointers\"], description = \"Maintaining data over consecutive subarrays.\", frequency = 2;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Problems: _missingComponent(\"Problems\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    PySection: _missingComponent(\"PySection\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\")\n  }, _props.components), {HeaderLink, FocusProblem, MATHSPAN, LanguageSection, CPPSection, JavaSection, Problems, Resources, Resource, PySection, IncompleteSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"sliding-window\",\n      children: [_jsx(_components.a, {\n        href: \"#sliding-window\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Sliding Window\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"From CPH:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"A sliding window is a constant-size subarray that moves from left to right\\r\\nthrough the array.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For each position of the window, we want to compute some information.\"\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"constantSam\"\n    }), \"\\n\", \"\\n\", \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The most straightforward way to do this is to store an sorted set of integers\\r\\nrepresenting the integers inside the window. If the window currently spans the\\r\\nrange \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i \\\\dots j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>…</mo><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i \\\\dots j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \", we observe that moving the range forward to \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i+1 \\\\dots j+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo>…</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">i+1 \\\\dots j+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7429em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \"\\r\\nonly removes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and adds \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a_{j+1}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_{j+1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7167em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" to the window. We can support these two\\r\\noperations and query for the minimum / maximum in the set in\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Time Complexity:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"vector<int> maxSlidingWindow(vector<int>& nums, int k) {\\r\\n\\tmultiset<int> s;\\r\\n\\tvector<int> ret;\\r\\n\\tfor(int i = 0; i < k; i++){\\r\\n\\t\\ts.insert(nums[i]);\\r\\n\\t}\\r\\n\\tfor(int i = k; i < nums.size(); i++){\\r\\n\\t\\tret.push_back(*s.rbegin());\\r\\n\\t\\ts.erase(s.find(nums[i-k]));\\r\\n\\t\\ts.insert(nums[i]);\\r\\n\\t}\\r\\n\\tret.push_back(*s.rbegin());\\r\\n\\treturn ret;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"static TreeMap<Integer, Integer> multiset = new TreeMap<Integer, Integer>();\\r\\nstatic void add(int x) {\\r\\n\\tif(multiset.containsKey(x)) {\\r\\n\\t\\tmultiset.put(x, multiset.get(x) + 1);\\r\\n\\t} else {\\r\\n\\t\\tmultiset.put(x, 1);\\r\\n\\t}\\r\\n}\\r\\nstatic void remove(int x) {\\r\\n\\tmultiset.put(x, multiset.get(x) - 1);\\r\\n\\tif(multiset.get(x) == 0) {\\r\\n\\t\\tmultiset.remove(x);\\r\\n\\t}\\r\\n}\\r\\nstatic ArrayList<Integer> maxSlidingWindow(int[] nums, int k) {\\r\\n\\tArrayList<Integer> ret = new ArrayList<Integer>();\\r\\n\\tfor (int i = 0; i < k; i++) {\\r\\n\\t\\tadd(nums[i]);\\r\\n\\t}\\r\\n\\tfor (int i = k; i < nums.length; i++) {\\r\\n\\t\\tret.add(multiset.lastKey());\\r\\n\\t\\tremove(nums[i-k]);\\r\\n\\t\\tadd(nums[i]);\\r\\n\\t}\\r\\n\\tret.add(multiset.lastKey());\\r\\n\\treturn ret;\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"constant\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"with-two-pointers\",\n      children: [_jsx(_components.a, {\n        href: \"#with-two-pointers\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Two Pointers\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In general, it is not required for the subarray to have constant size as long as\\r\\nboth the left and right endpoints of the subarray only move to the right.\"\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"sam\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"int n;\\r\\nset<int> s;\\r\\nint a[200000], ans;\\r\\n\\r\\nint main() {\\r\\n\\tint r = -1;\\r\\n\\tcin >> n; F0R(i,n) cin >> a[i];\\r\\n\\tF0R(i,n) {\\r\\n\\t\\twhile (r < n-1 && !s.count(a[r+1])) s.insert(a[++r]);\\r\\n\\t\\tans = max(ans,r-i+1);\\r\\n\\t\\ts.erase(a[i]);\\r\\n\\t}\\r\\n\\tcout << ans;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public class test{\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tint n = Integer.parseInt(br.readLine());\\r\\n\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\r\\n\\t\\tint a[] = new int[n];\\r\\n\\t\\tfor (int i = 0; i < n; i++) a[i] = Integer.parseInt(st.nextToken());\\r\\n\\t\\tint r = -1;\\r\\n\\t\\tHashSet<Integer> s = new HashSet<Integer>();\\r\\n\\t\\tint ans = 0;\\r\\n\\t\\tfor (int i = 0; i < n; i++) {\\r\\n\\t\\t\\twhile(r < n-1 && !s.contains(a[r+1])) s.add(a[++r]);\\r\\n\\t\\t\\tans = Math.max(ans, r-i+1);\\r\\n\\t\\t\\ts.remove(a[i]);\\r\\n\\t\\t}\\r\\n\\t\\tSystem.out.println(ans);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problems-1\",\n      children: [_jsx(_components.a, {\n        href: \"#problems-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"general\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sliding-window-minimum-in-mathcalon\",\n      children: [_jsx(_components.a, {\n        href: \"#sliding-window-minimum-in-mathcalon\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Sliding Window Minimum in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      })]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"constantSam\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Minimum stack / Minimum queue\",\n        url: \"data_structures/stack_queue_modification.html\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"multiple ways to solve this\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"method-1---deque\",\n      children: [_jsx(_components.a, {\n        href: \"#method-1---deque\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 1 - Deque\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Method 2 from cp-algo.\"\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPH\",\n        title: \"8.3 - Sliding Window Minimum\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"vector<int> maxSlidingWindow(vector<int>& nums, int k) {\\r\\n\\tdeque<int> d;\\r\\n\\tvector<int> ret;\\r\\n\\tfor(int i = 0; i < k; i++){\\r\\n\\t\\twhile(!d.empty() && nums[i] > nums[d.back()]){\\r\\n\\t\\t\\td.pop_back();\\r\\n\\t\\t}\\r\\n\\t\\td.push_back(i);\\r\\n\\t}\\r\\n\\tfor(int i = k; i < nums.size(); i++){\\r\\n\\t\\tret.push_back(nums[d.front()]);\\r\\n\\t\\tif(!d.empty() && d.front() <= i-k){\\r\\n\\t\\t\\td.pop_front();\\r\\n\\t\\t}\\r\\n\\t\\twhile(!d.empty() && nums[i] >= nums[d.back()]){\\r\\n\\t\\t\\td.pop_back();\\r\\n\\t\\t}\\r\\n\\t\\td.push_back(i);\\r\\n\\t}\\r\\n\\tret.push_back(nums[d.front()]);\\r\\n\\treturn ret;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"static ArrayList<Integer> maxSlidingWindow(int[] nums, int k) {\\r\\n\\tArrayList<Integer> ret = new ArrayList<Integer>();\\r\\n\\tArrayDeque<Integer> d = new ArrayDeque<Integer>();\\r\\n\\tfor (int i = 0; i < k; i++) {\\r\\n\\t\\twhile(!d.isEmpty() && nums[i] > nums[d.peekLast()]) {\\r\\n\\t\\t\\td.pollLast();\\r\\n\\t\\t}\\r\\n\\t\\td.addLast(i);\\r\\n\\t}\\r\\n\\tfor (int i = k; i < nums.length; i++) {\\r\\n\\t\\tret.add(nums[d.peekFirst()]);\\r\\n\\t\\tif(!d.isEmpty() && d.peekFirst() <= i-k) {\\r\\n\\t\\t\\td.pollFirst();\\r\\n\\t\\t}\\r\\n\\t\\twhile(!d.isEmpty() && nums[i] >= nums[d.peekLast()]) {\\r\\n\\t\\t\\td.pollLast();\\r\\n\\t\\t}\\r\\n\\t\\td.add(i);\\r\\n\\t}\\r\\n\\tret.add(nums[d.peekFirst()]);\\r\\n\\treturn ret;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\\r\\n\\td = collections.deque()\\r\\n\\t\\r\\n\\tdef enqueue(i: int) -> None:\\r\\n\\t\\twhile d and nums[d[-1]] <= nums[i]:\\r\\n\\t\\t\\td.pop()\\r\\n\\t\\td.append(i)\\r\\n\\t\\twhile d and (i - d[0]) >= k:\\r\\n\\t\\t\\td.popleft()\\r\\n\\r\\n\\tret = []\\r\\n\\tfor i in range(len(nums)):\\r\\n\\t\\tenqueue(i)\\r\\n\\t\\tif i + 1 >= k:\\r\\n\\t\\t\\tret.append(nums[d[0]])\\r\\n\\treturn ret\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"method-2---two-stacks\",\n      children: [_jsx(_components.a, {\n        href: \"#method-2---two-stacks\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Method 2 - Two Stacks\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Method 3 from cp-algo. Not as common but nice to know!\"\n    }), \"\\n\", _jsx(IncompleteSection, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"problems-2\",\n      children: [_jsx(_components.a, {\n        href: \"#problems-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"queue\"\n    }), \"\\n\", _jsx(IncompleteSection, {})]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  redirects,\n  title,\n  author,\n  contributors,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Sliding Window","author":"Benjamin Qi","contributors":"Darren Yao, Andrew Wang","id":"sliding-window","prerequisites":["intro-sorted-sets","two-pointers"],"description":"Maintaining data over consecutive subarrays.","frequency":2},"parent":{"name":"Sliding_Window","relativePath":"4_Gold/Sliding_Window.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Sliding Window","slug":"sliding-window"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Problems","slug":"problems"},{"depth":2,"value":"With Two Pointers","slug":"with-two-pointers"},{"depth":3,"value":"Solution","slug":"solution"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Sliding Window Minimum in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>","slug":"sliding-window-minimum-in-mathcalon"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Method 1 - Deque","slug":"method-1---deque"},{"depth":3,"value":"Method 2 - Two Stacks","slug":"method-2---two-stacks"},{"depth":3,"value":"Problems","slug":"problems-2"}],"java":[{"depth":2,"value":"Sliding Window","slug":"sliding-window"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Problems","slug":"problems"},{"depth":2,"value":"With Two Pointers","slug":"with-two-pointers"},{"depth":3,"value":"Solution","slug":"solution"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Sliding Window Minimum in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>","slug":"sliding-window-minimum-in-mathcalon"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Method 1 - Deque","slug":"method-1---deque"},{"depth":3,"value":"Method 2 - Two Stacks","slug":"method-2---two-stacks"},{"depth":3,"value":"Problems","slug":"problems-2"}],"py":[{"depth":2,"value":"Sliding Window","slug":"sliding-window"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Problems","slug":"problems"},{"depth":2,"value":"With Two Pointers","slug":"with-two-pointers"},{"depth":3,"value":"Solution","slug":"solution"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Sliding Window Minimum in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>","slug":"sliding-window-minimum-in-mathcalon"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Method 1 - Deque","slug":"method-1---deque"},{"depth":3,"value":"Method 2 - Two Stacks","slug":"method-2---two-stacks"},{"depth":3,"value":"Problems","slug":"problems-2"}]}},"moduleProblemLists":{"problemLists":[{"listId":"constantSam","problems":[{"uniqueId":"lc-SlidingWindowMaximum","name":"Sliding Window Maximum","url":"https://leetcode.com/problems/sliding-window-maximum","source":"LC","difficulty":"Easy","isStarred":false,"tags":["Sliding Window"],"solution":null}]},{"listId":"constant","problems":[{"uniqueId":"cses-1644","name":"Max Subarray Sum II","url":"https://cses.fi/problemset/task/1644","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Sliding Window","Prefix Sums"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1076","name":"Sliding Median","url":"https://cses.fi/problemset/task/1076","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Sliding Window","Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1077","name":"Sliding Cost","url":"https://cses.fi/problemset/task/1077","source":"CSES","difficulty":"Hard","isStarred":false,"tags":["Sliding Window","Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"sam","problems":[{"uniqueId":"cses-1141","name":"Playlist","url":"https://cses.fi/problemset/task/1141","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["2P"],"solution":null}]},{"listId":"general","problems":[{"uniqueId":"cf-616D","name":"K-Good Segment","url":"https://codeforces.com/contest/616/problem/D","source":"CF","difficulty":"Easy","isStarred":false,"tags":[],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-767","name":"Haybale Feast","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=767","source":"Gold","difficulty":"Easy","isStarred":false,"tags":["Set","Sliding Window"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_hayfeast_gold_dec17.html","sketch":null}},{"uniqueId":"ac-MexMin","name":"Mex Min","url":"https://atcoder.jp/contests/abc194/tasks/abc194_e","source":"AC","difficulty":"Easy","isStarred":false,"tags":["Sliding Window"],"solution":{"kind":"label","label":"Check AC","labelTooltip":"The editorial button is right next to the problem title. If \"there is no editorial yet,\" check the \"Overall Editorial\" PDF below.","url":null,"sketch":null}},{"uniqueId":"cses-2428","name":"Subarray Distinct Values","url":"https://cses.fi/problemset/task/2428","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Sliding Window","2P"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"apio-15-PalembangBridges","name":"2015 - Palembang Bridges","url":"https://oj.uz/problem/view/APIO15_bridge","source":"APIO","difficulty":"Normal","isStarred":false,"tags":["Sliding Window","Median"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-923","name":"Painting the Barn","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=923","source":"Gold","difficulty":"Normal","isStarred":true,"tags":["Sliding Window"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_paintbarn_gold_feb19.html","sketch":null}},{"uniqueId":"usaco-600","name":"Fort Moo","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=600","source":"Plat","difficulty":"Normal","isStarred":false,"tags":["Sliding Window"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"apio-09-DiggingForOil","name":"2009 - Digging for Oil","url":"https://dmoj.ca/problem/apio09p1","source":"APIO","difficulty":"Hard","isStarred":false,"tags":["Sliding Window","DP"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ioi-05-garden","name":"2005 - Garden","url":"https://contest.yandex.com/ioi/contest/566/problems/A/","source":"IOI","difficulty":"Hard","isStarred":false,"tags":["Sliding Window","Binary Search","DP"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"https://ioinformatics.org/page/ioi-2005/31","sketch":null}},{"uniqueId":"ioi-06-pyramid","name":"2006 - Pyramid","url":"https://contest.yandex.com/ioi/contest/562/problems/B/","source":"IOI","difficulty":"Hard","isStarred":false,"tags":["Sliding Window","DP"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"https://ioinformatics.org/page/ioi-2006/32","sketch":null}}]},{"listId":"queue","problems":[{"uniqueId":"ys-QueueComposite","name":"Queue Composite","url":"https://judge.yosupo.jp/problem/queue_operate_all_composite","source":"YS","difficulty":"Hard","isStarred":true,"tags":[],"solution":null},{"uniqueId":"baltic-15-hacker","name":"2015 - Hacker","url":"https://oj.uz/problem/view/BOI15_hac","source":"Baltic OI","difficulty":"Hard","isStarred":false,"tags":[],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"sliding-window"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}