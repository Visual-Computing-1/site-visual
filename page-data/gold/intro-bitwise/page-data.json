{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/intro-bitwise",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"intro-bitwise\", title = \"Intro to Bitwise Operators\", description = \"Goes over the six bitwise operators and the common ways they are used.\", author = \"Siyong Huang\", frequency = 0, redirects = [\"/bronze/intro-bitwise\", \"/plat/intro-bitwise\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {Resources, Resource, HeaderLink, Spoiler, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, MATHDIV, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"10.2 - Bit Operations\",\n        starred: true\n      }), _jsx(Resource, {\n        source: \"CF\",\n        title: \"Bitwise operations for beginners\",\n        url: \"73490\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"Great explanation by Errichto\"\n        })\n      }), _jsx(Resource, {\n        source: \"GFG\",\n        title: \"Bitwise Operators in C/C++\",\n        url: \"bitwise-operators-in-c-cpp/\",\n        children: _jsx(_components.p, {\n          children: \"The same operators are used in java and python\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's take a look at some examples to better understand bitwise operators. Note\\r\\nthat you typically won't be asked to use bitwise operators to implement\\r\\naddition/multiplication.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---addition\",\n      children: [_jsx(_components.a, {\n        href: \"#example---addition\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Addition\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Try implementing addition using bitwise operators!\\r\\nYou can test your implementation \", _jsx(_components.a, {\n        href: \"http://poj.org/problem?id=1000\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"If we perform addition without carrying, then we are simply performing the XOR\\r\\n(\", _jsx(_components.code, {\n          children: \"^\"\n        }), \") operator. Then, the bits that we carry over are those equivalent to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" in\\r\\nboth numbers: \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a\\\\&b\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mi mathvariant=\\\"normal\\\">&amp;</mi><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a\\\\&amp;b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord\\\">&amp;</span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n        }), \".\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int add(int a, int b) {\\r\\n\\twhile (b > 0) {\\r\\n\\t\\tint carry = a & b;\\r\\n\\t\\ta ^= b;\\r\\n\\t\\tb = carry << 1;\\r\\n\\t}\\r\\n\\treturn a;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"public static int add(int a, int b) {\\r\\n\\twhile (b > 0) {\\r\\n\\t\\tint carry = a & b;\\r\\n\\t\\ta ^= b;\\r\\n\\t\\tb = carry << 1;\\r\\n\\t}\\r\\n\\treturn a;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"def add(a: int, b: int) -> int:\\r\\n\\twhile b > 0:\\r\\n\\t\\tcarry = a & b\\r\\n\\t\\ta ^= b\\r\\n\\t\\tb = carry << 1\\r\\n\\treturn a\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---multiplication\",\n      children: [_jsx(_components.a, {\n        href: \"#example---multiplication\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Multiplication\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now try implementing multiplication using bitwise operators!\\r\\nIf you want to test your implementation of multiplication,\\r\\nyou can do so \", _jsx(_components.a, {\n        href: \"https://www.hackerrank.com/challenges/handshake/problem\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"For simplicity, we will use the \", _jsx(_components.code, {\n          children: \"sum\"\n        }), \" functions defined above. If we divide up\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"b\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n        }), \" into \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"2^{b_1}+2^{b_2}+\\\\dots+2^{b_n}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mn>2</mn><msub><mi>b</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>b</mi><mn>2</mn></msub></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mn>2</mn><msub><mi>b</mi><mi>n</mi></msub></msup></mrow><annotation encoding=\\\"application/x-tex\\\">2^{b_1}+2^{b_2}+\\\\dots+2^{b_n}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9324em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8491em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9324em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8491em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8491em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8491em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n        }), \", we get the following:\"]\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"a \\\\times b \\\\\\\\\\r = a \\\\times (2^{b_1}+2^{b_2}+\\\\dots+2^{b_n}) \\\\\\\\\\r = a2^{b_1}+a2^{b_2}+\\\\dots+a2^{b_n} \\\\\\\\\\r = \\\\sum_{\\\\text{bits in b}} {a\\\\texttt{<<}b_i}\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>a</mi><mo>×</mo><mi>b</mi><mspace linebreak=\\\"newline\\\"></mspace><mo>=</mo><mi>a</mi><mo>×</mo><mo stretchy=\\\"false\\\">(</mo><msup><mn>2</mn><msub><mi>b</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mn>2</mn><msub><mi>b</mi><mn>2</mn></msub></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mn>2</mn><msub><mi>b</mi><mi>n</mi></msub></msup><mo stretchy=\\\"false\\\">)</mo><mspace linebreak=\\\"newline\\\"></mspace><mo>=</mo><mi>a</mi><msup><mn>2</mn><msub><mi>b</mi><mn>1</mn></msub></msup><mo>+</mo><mi>a</mi><msup><mn>2</mn><msub><mi>b</mi><mn>2</mn></msub></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>a</mi><msup><mn>2</mn><msub><mi>b</mi><mi>n</mi></msub></msup><mspace linebreak=\\\"newline\\\"></mspace><mo>=</mo><munder><mo>∑</mo><mtext>bits in b</mtext></munder><mrow><mi>a</mi><mtext mathvariant=\\\"monospace\\\">&lt;&lt;</mtext><msub><mi>b</mi><mi>i</mi></msub></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">a \\\\times b \\\\\\\\\\r = a \\\\times (2^{b_1}+2^{b_2}+\\\\dots+2^{b_n}) \\\\\\\\\\r = a2^{b_1}+a2^{b_2}+\\\\dots+a2^{b_n} \\\\\\\\\\r = \\\\sum_{\\\\text{bits in b}} {a\\\\texttt{&lt;&lt;}b_i}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">×</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span><span class=\\\"mspace newline\\\"></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.3669em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">×</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1491em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9824em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.1491em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span><span class=\\\"mspace newline\\\"></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.3669em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9824em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9824em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3173em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"minner\\\">⋯</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8991em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8991em;\\\"><span style=\\\"top:-3.113em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.1645em;\\\"><span style=\\\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.143em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\\"mspace newline\\\"></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.3669em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:2.3521em;vertical-align:-1.3021em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.05em;\\\"><span style=\\\"top:-1.8479em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord text mtight\\\"><span class=\\\"mord mtight\\\">bits in b</span></span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.3021em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">&lt;&lt;</span></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), _jsx(_components.p, {\n        children: \"(This same idea is used in binary exponentiation!)\"\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int prod(int a, int b) {\\r\\n\\tint c = 0;\\r\\n\\twhile (b > 0) {\\r\\n\\t\\tif ((b & 1) == 1) {\\r\\n\\t\\t\\tc = add(c, a);  // Use the addition function we coded previously\\r\\n\\t\\t}\\r\\n\\t\\ta <<= 1;\\r\\n\\t\\tb >>= 1;\\r\\n\\t}\\r\\n\\treturn c;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"public static int prod(int a, int b) {\\r\\n\\tint c = 0;\\r\\n\\twhile(b > 0) {\\r\\n\\t\\tif ((b & 1) == 1) {\\r\\n\\t\\t\\tc = add(c, a);  // Use the addition function we coded previously\\r\\n\\t\\t}\\r\\n\\t\\ta <<= 1;\\r\\n\\t\\tb >>= 1;\\r\\n\\t}\\r\\n\\treturn c;\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"def prod(a: int, b: int) -> int:\\r\\n\\tc = 0\\r\\n\\twhile b > 0:\\r\\n\\t\\tif b & 1:\\r\\n\\t\\t\\tc = add(c, a)  # Use the addition function we coded previously\\r\\n\\t\\ta <<= 1\\r\\n\\t\\tb >>= 1\\r\\n\\treturn c\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"probs\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  description,\n  author,\n  frequency,\n  redirects,\n  default: MDXContent\n};\n","frontmatter":{"title":"Intro to Bitwise Operators","author":"Siyong Huang","contributors":null,"id":"intro-bitwise","prerequisites":null,"description":"Goes over the six bitwise operators and the common ways they are used.","frequency":0},"parent":{"name":"Intro_Bitwise","relativePath":"4_Gold/Intro_Bitwise.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Example - Addition","slug":"example---addition"},{"depth":2,"value":"Example - Multiplication","slug":"example---multiplication"}],"java":[{"depth":2,"value":"Example - Addition","slug":"example---addition"},{"depth":2,"value":"Example - Multiplication","slug":"example---multiplication"}],"py":[{"depth":2,"value":"Example - Addition","slug":"example---addition"},{"depth":2,"value":"Example - Multiplication","slug":"example---multiplication"}]}},"moduleProblemLists":{"problemLists":[{"listId":"probs","problems":[{"uniqueId":"cf-1017D","name":"The Wu","url":"https://codeforces.com/contest/1017/problem/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Math","Complete Search"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1338A","name":"Powered Addition","url":"https://codeforces.com/contest/1338/problem/A","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Math","Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1368D","name":"AND, OR, and square sum","url":"https://codeforces.com/contest/1368/problem/D","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Math","Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1466E","name":"Apollo vs Pan","url":"https://codeforces.com/contest/1466/problem/E","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Math"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1088D","name":"Ehab and another another xor problem","url":"https://codeforces.com/contest/1088/problem/D","source":"CF","difficulty":"Hard","isStarred":false,"tags":["Math","Interactive"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}}]}]}},"pageContext":{"id":"intro-bitwise"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}