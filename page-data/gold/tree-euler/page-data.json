{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/gold/tree-euler",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*[](https://en.wikipedia.org/wiki/Range_minimum_query)*/\n/*<Resource source=\"cp-algo\" title=\"RMQ\" url=\"sequences/rmq.html\" />*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"tree-euler\", title = \"Euler Tour Technique\", author = \"Benjamin Qi, Andrew Wang, Neo Wang\", prerequisites = [\"intro-tree\", \"PURS\"], description = \"Flattening a tree into an array to easily query and update subtrees.\", frequency = 2;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    Optional: _missingComponent(\"Optional\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {HeaderLink, FocusProblem, Resources, Resource, MATHSPAN, LanguageSection, CPPSection, JavaSection, Optional, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"introduction\",\n      children: [_jsx(_components.a, {\n        href: \"#introduction\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Introduction\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"sample\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If we can preprocess a rooted tree such that every subtree corresponds to a\\r\\ncontiguous range on an array, we can do updates and range queries on it!\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"tutorial\",\n      children: [_jsx(_components.a, {\n        href: \"#tutorial\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Tutorial\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"18.2 - Subtrees & Paths\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"introduces tree traversal array, how to solve above problem\"\n        })\n      }), _jsx(Resource, {\n        source: \"SecondThread\",\n        title: \"Tree Basics - Tree Flattening\",\n        url: \"https://codeforces.com/blog/entry/81527\"\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After running \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}()\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}()</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \", each range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[\\\\texttt{st}[i], \\\\texttt{en}[i]]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[\\\\texttt{st}[i], \\\\texttt{en}[i]]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]]</span></span></span></span>\"\n      }), \"\\r\\ncontains all ranges \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[\\\\texttt{st}[j], \\\\texttt{en}[j]]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[\\\\texttt{st}[j], \\\\texttt{en}[j]]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]]</span></span></span></span>\"\n      }), \" for each \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"j\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n      }), \" in the\\r\\nsubtree of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \". Also, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[i]-\\\\texttt{st}[i]+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[i]-\\\\texttt{st}[i]+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \" is equal to the subtree\\r\\nsize of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"const int MX = 2e5+5;\\r\\nvector<int> adj[MX];\\r\\nint timer = 0, st[MX], en[MX];\\r\\n\\r\\nvoid dfs(int node, int parent) {\\r\\n\\tst[node] = timer++;\\r\\n\\tfor (int i : adj[node]) {\\r\\n\\t\\tif (i != parent) {\\r\\n\\t\\t\\tdfs(i, node);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\ten[node] = timer-1;\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static void dfs(int i, int p) {\\r\\n\\tst[i] = timer++;\\r\\n\\tfor (int next : g[i]) {\\r\\n\\t\\tif(next != p) dfs(next, i);\\r\\n\\t}\\r\\n\\ten[i] = timer-1;\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"example-input\",\n      children: [_jsx(_components.a, {\n        href: \"#example-input\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example Input\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"5 3\\r\\n4 2 5 2 1\\r\\n1 2\\r\\n1 3\\r\\n3 4\\r\\n3 5\\r\\n2 3\\r\\n1 5 3\\r\\n2 3\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Our example input corresponds to the following graph:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsxs(\"svg\", {\n        width: 747,\n        height: 532,\n        className: \"stroke-current fill-transparent text-black dark:text-white\",\n        style: {\n          isolation: \"isolate\"\n        },\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: [_jsx(\"path\", {\n          d: \"M528.5 507c35.622 0 64.5-28.878 64.5-64.5S564.122 378 528.5 378 464 406.878 464 442.5s28.878 64.5 64.5 64.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 8,\n          strokeMiterlimit: 3,\n          strokeLinecap: \"square\"\n        }), _jsx(\"path\", {\n          d: \"M524.141 439.828h3.257c2.047-.031 3.657-.57 4.829-1.617 1.171-1.047 1.757-2.461 1.757-4.242 0-4-1.992-6-5.976-6-1.875 0-3.375.539-4.5 1.617-1.11 1.062-1.664 2.476-1.664 4.242h-4.336c0-2.703.984-4.945 2.953-6.726 1.984-1.797 4.5-2.696 7.547-2.696 3.219 0 5.742.852 7.57 2.555 1.828 1.703 2.742 4.07 2.742 7.101 0 1.485-.484 2.922-1.453 4.313-.953 1.391-2.258 2.43-3.914 3.117 1.875.594 3.32 1.578 4.336 2.953 1.031 1.375 1.547 3.055 1.547 5.039 0 3.063-1 5.493-3 7.289-2 1.797-4.602 2.696-7.805 2.696-3.203 0-5.812-.867-7.828-2.602-2-1.734-3-4.023-3-6.867h4.359c0 1.797.586 3.234 1.758 4.312 1.172 1.079 2.742 1.618 4.711 1.618 2.094 0 3.696-.547 4.805-1.641 1.109-1.094 1.664-2.664 1.664-4.711 0-1.984-.609-3.508-1.828-4.57-1.219-1.063-2.977-1.61-5.274-1.641h-3.257v-3.539Z\",\n          fill: \"currentColor\"\n        }), _jsx(\"path\", {\n          d: \"M106.5 181c35.622 0 64.5-28.878 64.5-64.5S142.122 52 106.5 52 42 80.878 42 116.5 70.878 181 106.5 181Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 8,\n          strokeMiterlimit: 3,\n          strokeLinecap: \"square\"\n        }), _jsx(\"path\", {\n          d: \"M118.195 133h-22.36v-3.117l11.813-13.125c1.75-1.985 2.954-3.594 3.61-4.828.672-1.25 1.008-2.539 1.008-3.868 0-1.781-.539-3.242-1.618-4.382-1.078-1.141-2.515-1.711-4.312-1.711-2.156 0-3.836.617-5.039 1.851-1.188 1.219-1.781 2.922-1.781 5.11H95.18c0-3.141 1.007-5.68 3.023-7.618 2.031-1.937 4.742-2.906 8.133-2.906 3.172 0 5.68.836 7.523 2.508 1.844 1.656 2.766 3.867 2.766 6.633 0 3.359-2.141 7.359-6.422 12l-9.141 9.914h17.133V133Z\",\n          fill: \"currentColor\"\n        }), _jsx(\"path\", {\n          d: \"M220.5 470c35.622 0 64.5-28.878 64.5-64.5S256.122 341 220.5 341 156 369.878 156 405.5s28.878 64.5 64.5 64.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 8,\n          strokeMiterlimit: 3,\n          strokeLinecap: \"square\"\n        }), _jsx(\"path\", {\n          d: \"m211.828 404.891 1.734-17.016h17.485v4.008h-13.805l-1.031 9.305c1.672-.985 3.57-1.477 5.695-1.477 3.11 0 5.578 1.031 7.406 3.094 1.829 2.047 2.743 4.82 2.743 8.32 0 3.516-.953 6.289-2.86 8.32-1.89 2.016-4.539 3.024-7.945 3.024-3.016 0-5.477-.836-7.383-2.508-1.906-1.672-2.992-3.984-3.258-6.938h4.102c.266 1.954.961 3.43 2.086 4.43 1.125.985 2.609 1.477 4.453 1.477 2.016 0 3.594-.688 4.734-2.063 1.157-1.375 1.735-3.273 1.735-5.695 0-2.281-.625-4.11-1.875-5.484-1.235-1.391-2.883-2.086-4.946-2.086-1.89 0-3.375.414-4.453 1.242l-1.148.937-3.469-.89Z\",\n          fill: \"currentColor\"\n        }), _jsx(\"path\", {\n          d: \"M373.5 291c35.622 0 64.5-28.878 64.5-64.5S409.122 162 373.5 162 309 190.878 309 226.5s28.878 64.5 64.5 64.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 8,\n          strokeMiterlimit: 3,\n          strokeLinecap: \"square\"\n        }), _jsx(\"path\", {\n          d: \"M377.086 243h-4.359v-28.898l-8.743 3.21v-3.937l12.422-4.664h.68V243Z\",\n          fill: \"currentColor\"\n        }), _jsx(\"path\", {\n          d: \"M657.5 246c35.622 0 64.5-28.878 64.5-64.5S693.122 117 657.5 117 593 145.878 593 181.5s28.878 64.5 64.5 64.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 8,\n          strokeMiterlimit: 3,\n          strokeLinecap: \"square\"\n        }), _jsx(\"path\", {\n          d: \"M665.141 186.539h4.734v3.539h-4.734V198h-4.36v-7.922h-15.539v-2.555l15.281-23.648h4.618v22.664Zm-14.977 0h10.617v-16.734l-.515.937-10.102 15.797Z\",\n          fill: \"currentColor\"\n        }), _jsx(\"path\", {\n          d: \"m164 144 152 62M411 276l80 117M283 415l185 28M626 237l-73 150\",\n          stroke: \"currentColor\",\n          strokeWidth: 6\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Before the DFS, our \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5536em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span></span></span></span>\"\n      }), \" arrays are initialized with\\r\\nzeros. In this visualization, the first row represents the node indices, the\\r\\nsecond row represents \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5536em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span></span></span></span>\"\n      }), \", and the third represents \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Current timer value: 0\"\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since we call \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(1, 0)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>0</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(1, 0)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \", we set \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}[1]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}[1]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to the current timer\\r\\nvalue of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \". Then, we proceed to call \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(2, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(2, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(3, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(3, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Current timer value: 1\"\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-100 dark:bg-green-700\",\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now we must resolve \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(2, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(2, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(3, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(3, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". It does not\\r\\nmatter which order we process these in, so for this example, we start with\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(2, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>2</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(2, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">2</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Since the timer value is 1, we set \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}[2]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 1 and\\r\\nincrement the timer. However, because node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span></span></span></span>\"\n      }), \" has no children, we don't call\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span></span></span></span>\"\n      }), \". Instead, we set \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[2]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[2]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 1 because our current timer is\\r\\nnow 2.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Current timer value: 2\"\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-100 dark:bg-green-700\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-100 dark:bg-red-700\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now we must resolve \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(3, 1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(3, 1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Similar to before, we set\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}[3]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mn>3</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}[3]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to the value of the timer (2 in this case) and increment the\\r\\ntimer. Then, we proceed to make the calls \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(4, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(4, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(5, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>5</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(5, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">5</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Current timer value: 3\"\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-100 dark:bg-green-700\",\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now we must resolve \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(4, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(4, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(5, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>5</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(5, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">5</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". First, we resolve\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(4, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(4, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" by setting \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}[4]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mn>4</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}[4]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">4</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to the value of the timer (3 in\\r\\nthis case) and incrementing the timer. Then, since node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"4\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\\\"application/x-tex\\\">4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span></span></span></span>\"\n      }), \" has no children, set\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[4]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mn>4</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[4]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">4</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 3.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now the value of the timer is 4, and we must resolve \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\text{dfs}(5, 3)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext>dfs</mtext><mo stretchy=\\\"false\\\">(</mo><mn>5</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\text{dfs}(5, 3)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">dfs</span></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">5</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". Similar\\r\\nto before, we set \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{st}[5]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">st</mtext><mo stretchy=\\\"false\\\">[</mo><mn>5</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{st}[5]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">st</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">5</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 4. Since node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"5\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\\\"application/x-tex\\\">5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5</span></span></span></span>\"\n      }), \" also has no children,\\r\\nset \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[5]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mn>5</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[5]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">5</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 4.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Current timer value: 5\"\n      })\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-100 dark:bg-green-700\",\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-100 dark:bg-green-700\",\n              children: \"4\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-100 dark:bg-red-700\",\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-100 dark:bg-red-700\",\n              children: \"4\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, we must resolve the remaining \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[\\\\text{node}] = \\\\text{timer} - 1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mtext>node</mtext><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><mtext>timer</mtext><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[\\\\text{node}] = \\\\text{timer} - 1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">node</span></span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7512em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord\\\">timer</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \"\\r\\ncalls. We first encounter and resolve node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"3\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span></span></span></span>\"\n      }), \", setting \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[3]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mn>3</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[3]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 4.\\r\\nWe then do the same for node \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \", setting \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{en}[1]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">en</mtext><mo stretchy=\\\"false\\\">[</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{en}[1]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">en</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" to 4. Our DFS\\r\\ntraversal is now complete.\"]\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"Node Index\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"st[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"en[i]\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-100 dark:bg-red-700\",\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-100 dark:bg-red-700\",\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---subtree-queries\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---subtree-queries\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Subtree Queries\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Assumes that \", _jsx(_components.code, {\n        children: \"dfs()\"\n      }), \" code is included. Uses a segment tree.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"/**\\r\\n * Description: 1D point update, range query where \\\\texttt{comb} is\\r\\n\\t* any associative operation. If $N=2^p$ then \\\\texttt{seg[1]==query(0,N-1)}.\\r\\n * Time: O(\\\\log N)\\r\\n * Source:\\r\\n\\t* http://codeforces.com/blog/entry/18051\\r\\n\\t* KACTL\\r\\n * Verification: SPOJ Fenwick\\r\\n */\\r\\n\\r\\ntemplate<class T> struct Seg { // comb(ID,b) = b\\r\\n\\tconst T ID = 0; T comb(T a, T b) { return a+b; }\\r\\n\\tint n; vector<T> seg;\\r\\n\\tvoid init(int _n) { n = _n; seg.assign(2*n,ID); }\\r\\n\\tvoid pull(int p) { seg[p] = comb(seg[2*p],seg[2*p+1]); }\\r\\n\\tvoid upd(int p, T val) { // set val at position p\\r\\n\\t\\tseg[p += n] = val; for (p /= 2; p; p /= 2) pull(p); }\\r\\n\\tT query(int l, int r) {\\t// sum on interval [l, r]\\r\\n\\t\\tT ra = ID, rb = ID;\\r\\n\\t\\tfor (l += n, r += n+1; l < r; l /= 2, r /= 2) {\\r\\n\\t\\t\\tif (l&1) ra = comb(ra,seg[l++]);\\r\\n\\t\\t\\tif (r&1) rb = comb(seg[--r],rb);\\r\\n\\t\\t}\\r\\n\\t\\treturn comb(ra,rb);\\r\\n\\t}\\r\\n};\\r\\n\\r\\nSeg<ll> S;\\r\\nint v[MX];\\r\\n\\r\\nint main() {\\r\\n\\tint n,q; cin >> n >> q;\\r\\n\\tFOR(i,1,n+1) cin >> v[i];\\r\\n\\tF0R(i,n-1) {\\r\\n\\t\\tint a,b; cin >> a >> b;\\r\\n\\t\\tadj[a].pb(b), adj[b].pb(a);\\r\\n\\t}\\r\\n\\tdfs(1,0);\\r\\n\\tS.init(n);\\r\\n\\tFOR(i,1,n+1) S.upd(st[i],v[i]);\\r\\n\\tF0R(i,q) {\\r\\n\\t\\tint t; cin >> t;\\r\\n\\t\\tif (t == 1) {\\r\\n\\t\\t\\tint s,x; cin >> s >> x;\\r\\n\\t\\t\\tS.upd(st[s],x);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tint s; cin >> s;\\r\\n\\t\\t\\tcout << S.query(st[s],en[s]) << \\\"\\\\n\\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class Main {\\r\\n\\tpublic static int[] st;\\r\\n\\tpublic static int[] en;\\r\\n\\tpublic static int timer, n;\\r\\n\\tpublic static ArrayList<Integer> g[];\\r\\n\\r\\n\\t//Segtree code\\r\\n\\tpublic static final int N = (int)1e5;  // limit for array size\\r\\n\\tpublic static long t[] = new long[2*N];\\r\\n\\r\\n\\tpublic static void update(int p, long value) {  // set value at position p\\r\\n\\t\\tfor (t[p += n] = value; p > 1; p >>= 1) t[p>>1] = t[p] + t[p^1];\\r\\n\\t}\\r\\n\\r\\n\\tpublic static long query(int l, int r) {  // sum on interval [l, r) (0-INDEXED)\\r\\n\\t\\tlong res = 0;\\r\\n\\t\\tfor (l += n, r += n; l < r; l >>= 1, r >>= 1) {\\r\\n\\t\\t\\tif ((l&1) != 0) res += t[l++];\\r\\n\\t\\t\\tif ((r&1) != 0) res += t[--r];\\r\\n\\t\\t}\\r\\n\\t\\treturn res;\\r\\n\\t}\\r\\n\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tStringTokenizer str = new StringTokenizer(br.readLine());\\r\\n\\t\\tn = Integer.parseInt(str.nextToken());\\r\\n      \\t\\tint q = Integer.parseInt(str.nextToken());\\r\\n      \\t\\tint[] val = new int[n+1];\\r\\n      \\t\\tg = new ArrayList[n+1];\\r\\n      \\t\\tstr = new StringTokenizer(br.readLine());\\r\\n      \\t\\tfor (int i = 1; i <= n; i++) {\\r\\n         \\t\\tg[i] = new ArrayList<Integer>();\\r\\n         \\t\\tval[i] = Integer.parseInt(str.nextToken());\\r\\n      \\t\\t}\\r\\n      \\t\\tst = new int[n+1]; en = new int[n+1]; timer = 0;\\r\\n      \\t\\tfor (int i = 0; i < n-1; i++) {\\r\\n         \\t\\tstr = new StringTokenizer(br.readLine());\\r\\n         \\t\\tint a = Integer.parseInt(str.nextToken());\\r\\n         \\t\\tint b = Integer.parseInt(str.nextToken());\\r\\n         \\t\\tg[a].add(b);\\r\\n         \\t\\tg[b].add(a);\\r\\n      \\t\\t}\\r\\n      \\t\\tdfs(1, 0);\\r\\n      \\t\\tfor (int i = 1; i <= n; i++) {\\r\\n         \\t\\tupdate(st[i], val[i]);\\r\\n      \\t\\t}\\r\\n      \\t\\tfor (int i = 0; i < q; i++) {\\r\\n         \\t\\tstr = new StringTokenizer(br.readLine());\\r\\n         \\t\\tint a = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\tif(a == 1) {\\r\\n\\t\\t\\t\\tint b = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\t\\tint c = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\t\\tupdate(st[b], c);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tint b = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\t\\tSystem.out.println(query(st[b], en[b]+1));\\r\\n\\t\\t\\t}\\r\\n      \\t\\t}\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"lca\",\n      children: [_jsx(_components.a, {\n        href: \"#lca\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"LCA\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"lca\"\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"lca2\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"tutorial-1\",\n      children: [_jsx(_components.a, {\n        href: \"#tutorial-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Tutorial\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"18.3 - Least Common Ancestor (Method 2)\",\n        starred: true\n      }), _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Reducing LCA to RMQ\",\n        url: \"graph/lca.html\",\n        starred: true\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"Benq\",\n        url: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/graphs%20(12)/Trees%20(10)/LCArmq%20(10.2).h\",\n        title: \"LCA with RMQ\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"int n; // The number of nodes in the graph\\r\\nvector<int> graph[100000];\\r\\nint timer = 0, tin[100000], euler_tour[200000];\\r\\nint segtree[800000]; // Segment tree for RMQ\\r\\n\\r\\nvoid dfs(int node = 0, int parent = -1) {\\r\\n\\ttin[node] = timer; // The time when we first visit a node\\r\\n\\teuler_tour[timer++] = node;\\r\\n\\tfor (int i : graph[node]) {\\r\\n\\t\\tif (i != parent) {\\r\\n\\t\\t\\tdfs(i, node);\\r\\n\\t\\t\\teuler_tour[timer++] = node;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint mn_tin(int x, int y) {\\r\\n\\tif (x == -1) return y;\\r\\n\\tif (y == -1) return x;\\r\\n\\treturn (tin[x] < tin[y] ? x : y);\\r\\n}\\r\\n\\r\\n// Build the segment tree: run `build()` after running dfs`\\r\\nvoid build(int node = 1, int l = 0, int r = timer - 1) {\\r\\n\\tif (l == r) segtree[node] = euler_tour[l];\\r\\n\\telse {\\r\\n\\t\\tint mid = (l + r) / 2;\\r\\n\\t\\tbuild(node * 2, l, mid);\\r\\n\\t\\tbuild(node * 2 + 1, mid + 1, r);\\r\\n\\t\\tsegtree[node] = mn_tin(segtree[node * 2], segtree[node * 2 + 1]);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint query(int a, int b, int node = 1, int l = 0, int r = timer - 1) {\\r\\n\\tif (l > b || r < a) return -1;\\r\\n\\tif (l >= a && r <= b) return segtree[node];\\r\\n\\tint mid = (l + r) / 2;\\r\\n\\treturn mn_tin(query(a, b, node * 2, l, mid), query(a, b, node * 2 + 1, mid + 1, r));\\r\\n}\\r\\n\\r\\n// Make sure you run $dfs` and `build()` before you run this\\r\\nint lca(int a, int b) {\\r\\n\\tif (tin[a] > tin[b]) swap(a, b);\\r\\n\\treturn query(tin[a], tin[b]);\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\r\\nimport java.io.*;\\r\\n\\r\\npublic class LCA {\\r\\n\\tpublic static int[] euler_tour, tin;\\r\\n\\tpublic static int timer, size, N;\\r\\n\\tpublic static ArrayList<Integer> g[];\\r\\n\\r\\n   \\t//Segtree code\\r\\n\\tpublic static final int maxsize = (int)1e7;  // limit for array size\\r\\n\\tpublic static int t[] = new int[maxsize];\\r\\n\\r\\n\\tpublic static void update(int p, int value) {  // set value at position p\\r\\n\\t\\tfor (t[p += size] = value; p > 1; p >>= 1) t[p>>1] = mn_tin(t[p], t[p^1]);\\r\\n\\t}\\r\\n\\tpublic static int query(int l, int r) {  // sum on interval [l, r) (0-INDEXED)\\r\\n\\t\\tint res = N;\\r\\n\\t\\tfor (l += size, r += size; l < r; l >>= 1, r >>= 1) {\\r\\n\\t\\t\\tif ((l&1) != 0) res = mn_tin(res, t[l++]);\\r\\n\\t\\t\\tif ((r&1) != 0) res = mn_tin(res, t[--r]);\\r\\n\\t\\t}\\r\\n\\t\\treturn res;\\r\\n\\t}\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\t\\tStringTokenizer str = new StringTokenizer(br.readLine());\\r\\n\\t\\tN = Integer.parseInt(str.nextToken());\\r\\n\\t\\tint Q = Integer.parseInt(str.nextToken());\\r\\n\\t\\tint[] val = new int[N+1];\\r\\n\\t\\tg = new ArrayList[N+1];\\r\\n\\t\\tstr = new StringTokenizer(br.readLine());\\r\\n\\t\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\t\\tg[i] = new ArrayList<Integer>();\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 2; i <= N; i++) {\\r\\n\\t\\t\\tint a = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\tg[i].add(a);\\r\\n\\t\\t\\tg[a].add(i);\\r\\n\\t\\t}\\r\\n\\t\\teuler_tour = new int[2*N-1]; tin = new int[N+1];\\r\\n\\t\\tdfs(1, 0);\\r\\n\\t\\tsize = 2*N-1;\\r\\n\\t\\tfor (int i = 0; i < 2*N-1; i++) {\\r\\n\\t\\t\\tupdate(i, euler_tour[i]);\\r\\n\\t\\t}\\r\\n\\t\\tfor (int i = 0; i < Q; i++) {\\r\\n\\t\\t\\tstr = new StringTokenizer(br.readLine());\\r\\n\\t\\t\\tint a = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\tint b = Integer.parseInt(str.nextToken());\\r\\n\\t\\t\\tSystem.out.println(lca(a, b));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tpublic static void dfs(int i, int p) {\\r\\n\\t\\ttin[i] = timer;\\r\\n\\t\\teuler_tour[timer++] = i;\\r\\n\\t\\tfor (int next : g[i]) {\\r\\n\\t\\t\\tif(next != p){\\r\\n\\t\\t\\t\\tdfs(next, i);\\r\\n\\t\\t\\t\\teuler_tour[timer++] = i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tpublic static int lca(int a, int b) {\\r\\n\\t\\tif(tin[a] > tin[b]) {\\r\\n\\t\\t\\tint temp = a;\\r\\n\\t\\t\\ta = b;\\r\\n\\t\\t\\tb = temp;\\r\\n\\t\\t}\\r\\n\\t\\tif(a == b) {\\r\\n\\t\\t\\treturn a;\\r\\n\\t\\t}\\r\\n\\t\\treturn query(tin[a], tin[b]);\\r\\n\\t}\\r\\n\\tpublic static int mn_tin(int x, int y) {\\r\\n\\t\\tif (x == -1) return y;\\r\\n\\t\\tif (y == -1) return x;\\r\\n\\t\\treturn (tin[x] < tin[y] ? x : y);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sparse-tables\",\n      children: [_jsx(_components.a, {\n        href: \"#sparse-tables\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Sparse Tables\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The above code does \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time preprocessing and allows LCA queries\\r\\nin \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time. If we replace the segment tree that computes\\r\\nminimums with a \", _jsx(_components.strong, {\n        children: \"sparse table\"\n      }), \", then we do \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(N\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time\\r\\npreprocessing and query in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", \"\\n\", _jsx(FocusProblem, {\n      problem: \"rmqSample\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"9.1 - Minimum Queries\",\n        url: \"/CPH.pdf#page=95\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"diagrams\"\n        })\n      }), _jsx(Resource, {\n        source: \"PAPS\",\n        title: \"11.2.2 - Sparse Tables\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"code\"\n        })\n      }), _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Sparse Table\",\n        url: \"data_structures/sparse-table.html\"\n      })]\n    }), \"\\n\", \"\\n\", _jsxs(Optional, {\n      title: \"Faster Preprocessing\",\n      children: [_jsx(_components.p, {\n        children: \"From CPH:\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"There are also more sophisticated techniques where the preprocessing time is\\r\\nonly \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(N)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \", but such algorithms are not needed in competitive\\r\\nprogramming.\"]\n        }), \"\\n\"]\n      }), _jsx(_components.p, {\n        children: \"Ex. the following:\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsxs(_components.a, {\n            href: \"https://codeforces.com/blog/entry/78931\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: [\"CF: \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(1)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" Query RMQ with \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(N)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" build\"]\n          })\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"implementation-2\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(Resources, {\n          children: _jsx(Resource, {\n            source: \"Benq\",\n            url: \"https://github.com/bqi343/USACO/blob/master/Implementations/content/data-structures/Static%20Range%20Queries%20(9.1)/RMQ%20(9.1).h\",\n            title: \"RMQ\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"problems\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Euler Tour Technique","author":"Benjamin Qi, Andrew Wang, Neo Wang","contributors":null,"id":"tree-euler","prerequisites":["intro-tree","PURS"],"description":"Flattening a tree into an array to easily query and update subtrees.","frequency":2},"parent":{"name":"Tree_Euler","relativePath":"4_Gold/Tree_Euler.mdx"},"fields":{"division":"gold"},"toc":{"cpp":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":3,"value":"Tutorial","slug":"tutorial"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Example Input","slug":"example-input"},{"depth":3,"value":"Solution - Subtree Queries","slug":"solution---subtree-queries"},{"depth":2,"value":"LCA","slug":"lca"},{"depth":3,"value":"Tutorial","slug":"tutorial-1"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Sparse Tables","slug":"sparse-tables"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":3,"value":"Tutorial","slug":"tutorial"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Example Input","slug":"example-input"},{"depth":3,"value":"Solution - Subtree Queries","slug":"solution---subtree-queries"},{"depth":2,"value":"LCA","slug":"lca"},{"depth":3,"value":"Tutorial","slug":"tutorial-1"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Sparse Tables","slug":"sparse-tables"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":3,"value":"Tutorial","slug":"tutorial"},{"depth":3,"value":"Implementation","slug":"implementation"},{"depth":3,"value":"Example Input","slug":"example-input"},{"depth":3,"value":"Solution - Subtree Queries","slug":"solution---subtree-queries"},{"depth":2,"value":"LCA","slug":"lca"},{"depth":3,"value":"Tutorial","slug":"tutorial-1"},{"depth":3,"value":"Implementation","slug":"implementation-1"},{"depth":2,"value":"Sparse Tables","slug":"sparse-tables"},{"depth":3,"value":"Resources","slug":"resources"},{"depth":3,"value":"Implementation","slug":"implementation-2"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"sample","problems":[{"uniqueId":"cses-1137","name":"Subtree Queries","url":"https://cses.fi/problemset/task/1137","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Euler-Tree"],"solution":{"kind":"sketch","label":null,"labelTooltip":null,"url":null,"sketch":"equivalent to https://judge.yosupo.jp/problem/vertex_add_subtree_sum"}}]},{"listId":"lca","problems":[{"uniqueId":"cses-1688","name":"Company Queries II","url":"https://cses.fi/problemset/task/1688","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["LCA"],"solution":null}]},{"listId":"lca2","problems":[{"uniqueId":"cses-1135","name":"Distance Queries","url":"https://cses.fi/problemset/task/1135","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["LCA"],"solution":null}]},{"listId":"rmqSample","problems":[{"uniqueId":"ys-StaticRMQ","name":"Static RMQ","url":"https://judge.yosupo.jp/problem/staticrmq","source":"YS","difficulty":"Easy","isStarred":false,"tags":[],"solution":null}]},{"listId":"problems","problems":[{"uniqueId":"cses-1139","name":"Distinct Colors","url":"https://cses.fi/problemset/task/1139","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Euler Tour","PURS"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1138","name":"Path Queries","url":"https://cses.fi/problemset/task/1138","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Euler-Tree","PURS"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-921","name":"Cow Land","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=921","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["Euler-Tree","PURS","HLD"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-970","name":"Milk Visits","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=970","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["Euler-Tree","LCA"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-696","name":"Promotion Counting","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=696","source":"Plat","difficulty":"Normal","isStarred":false,"tags":["Euler-Tree","PURS"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ac-CountDescendants","name":"Count Descendants","url":"https://atcoder.jp/contests/abc202/tasks/abc202_e","source":"AC","difficulty":"Normal","isStarred":false,"tags":["Euler Tour","Binary Search"],"solution":{"kind":"label","label":"Check AC","labelTooltip":"The editorial button is right next to the problem title. If \"there is no editorial yet,\" check the \"Overall Editorial\" PDF below.","url":null,"sketch":null}},{"uniqueId":"ioi-09-regions","name":"2009 - Regions","url":"https://oj.uz/problem/view/IOI09_regions","source":"IOI","difficulty":"Hard","isStarred":false,"tags":["Euler-Tree","Binary Search"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.ioi2009.org/GetResource?id=1969","sketch":null}},{"uniqueId":"usaco-973","name":"Snow-Cow","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=973","source":"Plat","difficulty":"Hard","isStarred":false,"tags":["Euler-Tree","PURS"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_snowcow_platinum_dec19.html","sketch":null}},{"uniqueId":"cf-838B","name":"Diverging Directions","url":"https://codeforces.com/contest/838/problem/B","source":"CF","difficulty":"Hard","isStarred":false,"tags":["Euler Tour","RURQ"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"dmoj-VictorTakesOverCanada","name":"Victor Takes Over Canada","url":"https://dmoj.ca/problem/dmopc20c1p5","source":"DMOJ","difficulty":"Very Hard","isStarred":false,"tags":["Euler-Tree","PURS"],"solution":{"kind":"label","label":"Check DMOJ","labelTooltip":"There might be a \"Read Editorial\" button on the right side of the page.","url":null,"sketch":null}}]}]}},"pageContext":{"id":"tree-euler"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}