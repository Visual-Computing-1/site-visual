{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/general/intro-cp",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*<Optional title=\"More Information\">*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"intro-cp\", title = \"Introduction to Competitive Programming\", author = \"Nathan Wang, Benjamin Qi, Darren Yao\", description = \"What is competitive programming? Let's take a look!\", redirects = [\"intro\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    em: \"em\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    JavaSection: _missingComponent(\"JavaSection\")\n  }, _props.components), {HeaderLink, Resources, Resource, FocusProblem, Spoiler, LanguageSection, CPPSection, PySection, JavaSection, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"programming-competitions\",\n      children: [_jsx(_components.a, {\n        href: \"#programming-competitions\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Programming Competitions\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A\\r\\n\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Competitive_programming\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"programming competition\"\n      }), \"\\r\\ngenerally lasts for several hours and consists of a set of problems. These\\r\\nproblems are not open problems; they have already been solved by the problem\\r\\nwriters and testers and are designed to be solved in the short timeframe of a\\r\\ncontest. In general, each problem in competitive programming is solved with a\\r\\ntwo-step process:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"coming up with the algorithm, which involves problem solving skills and\\r\\nintuition\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"implementing the algorithm, which requires programming skills to translate\\r\\nthe algorithm into working code.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For each problem, you submit the completed code to a grader, which checks the\\r\\nanswers calculated by your program against a set of predetermined test cases.\\r\\nFor each problem, you are given a time limit (usually 2 seconds) and a memory\\r\\nlimit (usually 256 \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Megabyte\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"megabytes\"\n      }), \") that\\r\\nyour program must satisfy.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For those of you with experience in software development, note that competitive\\r\\nprogramming is quite different, as the goal is to write programs that compute\\r\\nthe correct answer, run quickly, and can be implemented quickly. Note that\\r\\nnowhere was maintainability of code mentioned. You don't need to bother\\r\\ndocumenting your code because it only needs to be readable to you during the\\r\\ncontest. That being said, you probably want to maintain a bare minimum level of\\r\\nreadability so you can keep track of what's going on.\"\n    }), \"\\n\", \"\\n\", _jsx(\"div\", {\n      class: \"yt-video-container my-8\",\n      children: _jsx(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/ueNT-w7Oluw\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      })\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"William Lin\",\n        title: \"Video - What is Competitive Programming?\",\n        url: \"https://www.youtube.com/watch?time_continue=1&v=ueNT-w7Oluw\",\n        children: _jsx(_components.p, {\n          children: \"video shown above\"\n        })\n      }), _jsx(Resource, {\n        source: \"Kamil Debowski\",\n        title: \"Video - Interview with a Competitive Programmer\",\n        url: \"https://www.youtube.com/watch?v=F4rykKLcduI\"\n      }), _jsx(Resource, {\n        source: \"CPH\",\n        title: \"1 - Introduction\",\n        children: _jsx(_components.p, {\n          children: \"algorithms & programming contests\"\n        })\n      }), _jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"1 - The Beginning\",\n        children: _jsx(_components.p, {\n          children: \"competitive programming, contests\"\n        })\n      }), _jsx(Resource, {\n        source: \"PAPS\",\n        title: \"1 - Algorithms & Problems\",\n        children: _jsx(_components.p, {\n          children: \"examples of algorithms\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is a task similar to the one that was solved in Kamil's video:\"\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"general\"\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsx(_components.p, {\n        children: \"Just print the second-to-last character of the input.\"\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <iostream>\\r\\nusing namespace std;\\r\\n\\r\\nint main() {\\r\\n\\tstring s; cin >> s;\\r\\n\\tcout << s[s.size()-2];\\r\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"print(input()[-2])\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"// with Kattio from /general/input-output#java\\r\\n\\r\\npublic class A {\\r\\n\\tstatic Kattio io = new Kattio();\\r\\n\\tpublic static void main(String[] args) {\\r\\n\\t\\tString s = io.next();\\r\\n\\t\\tSystem.out.println(s.charAt(s.length()-2));\\r\\n\\t\\tio.close(); // make sure to include this line -- closes io and flushes the output\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"usaco\",\n      children: [_jsx(_components.a, {\n        href: \"#usaco\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"USACO\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.em, {\n        children: \"USA Computing Olympiad\"\n      }), \" is a national programming competition that occurs\\r\\nfour times a year, with December, January, February, and US Open (March)\\r\\ncontests. The regular contests are four hours long, and the US Open is five\\r\\nhours long. Each contest contains three problems. Solutions are evaluated and\\r\\nscored against a set of predetermined test cases that are not visible to the\\r\\nstudent. Scoring is out of 1000 points, with each problem being weighted equally\\r\\n(~333 points). There are four divisions of contests: Bronze, Silver, Gold, and\\r\\nPlatinum. After each contest, students who meet the contest-dependent cutoff for\\r\\npromotion will compete in the next division for future contests.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See the \", _jsx(_components.a, {\n        href: \"/general/usaco-faq/\",\n        children: \"USACO FAQ\"\n      }), \" for more information.\"]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  redirects,\n  default: MDXContent\n};\n","frontmatter":{"title":"Introduction to Competitive Programming","author":"Nathan Wang, Benjamin Qi, Darren Yao","contributors":null,"id":"intro-cp","prerequisites":null,"description":"What is competitive programming? Let's take a look!","frequency":null},"parent":{"name":"Intro_CP","relativePath":"1_General/Intro_CP.mdx"},"fields":{"division":"general"},"toc":{"cpp":[{"depth":2,"value":"Programming Competitions","slug":"programming-competitions"},{"depth":2,"value":"USACO","slug":"usaco"}],"java":[{"depth":2,"value":"Programming Competitions","slug":"programming-competitions"},{"depth":2,"value":"USACO","slug":"usaco"}],"py":[{"depth":2,"value":"Programming Competitions","slug":"programming-competitions"},{"depth":2,"value":"USACO","slug":"usaco"}]}},"moduleProblemLists":{"problemLists":[{"listId":"general","problems":[{"uniqueId":"kattis-BasketballOneOnOne","name":"Basketball One on One","url":"https://open.kattis.com/problems/basketballoneonone","source":"Kattis","difficulty":"Very Easy","isStarred":false,"tags":null,"solution":null}]}]}},"pageContext":{"id":"intro-cp"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}