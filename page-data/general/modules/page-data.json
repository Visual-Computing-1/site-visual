{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/general/modules",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*## Additional Content\n\nSome modules may also have additional content at the end that isn't needed for USACO, but may be interesting. Feel free to read or skip them as you'd like.*/\n/*Tips on how to become legend in CP and better at competitve programming by Benjamin Qi, exactly what you wanted when you spam DM'd him! Definitely take these tips seriously. Don't uncomment this.*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"modules\", title = \"Introducing Modules\", author = \"Nathan Wang, Benjamin Qi\", description = \"How each module is structured.\", prerequisites = [\"using-this-guide\"];\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    h3: \"h3\",\n    em: \"em\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Warning: _missingComponent(\"Warning\"),\n    Info: _missingComponent(\"Info\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    Optional: _missingComponent(\"Optional\")\n  }, _props.components), {HeaderLink, Warning, Info, Spoiler, Optional, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"There are six \", _jsx(_components.strong, {\n        children: \"sections\"\n      }), \" in the guide: Intro, Bronze, Silver, Gold, Platinum,\\r\\nand Advanced. Each section is subdivided into \", _jsx(_components.strong, {\n        children: \"categories\"\n      }), \", which is just a\\r\\ngroup of modules. Each \", _jsx(_components.strong, {\n        children: \"module\"\n      }), \" (such as the one you're reading right now)\\r\\nrepresents one \\\"article\\\" or \\\"page\\\" on the site. A module generally consists of\\r\\nthree parts:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Lesson\"\n        }), \": Introduces the concept via a focus problem.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Implementations\"\n        }), \": Solutions to the focus problem.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Practice Problems\"\n        }), \": Teach you how to apply the concept to various\\r\\nproblems.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some relatively rare modules are prefixed with \\\"optional.\\\" It's not essential to\\r\\nwork through these if your goal is just to pass the corresponding division. They\\r\\nmight be referenced in later divisions.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"lesson\",\n      children: [_jsx(_components.a, {\n        href: \"#lesson\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Lesson\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The lesson is a curated collection of external resources, problems, and\\r\\nsupplementary text we've written ourselves.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"We'll link to online resources that already exist whenever possible.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The goal is to introduce you to the concept.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Everything is meant to be completed in order.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"It usually begins with at least one \", _jsx(_components.strong, {\n          children: \"focus problem.\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The focus problem is a direct application of the concept, and is useful in\\r\\ntesting your implementation.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We'll \", _jsx(_components.strong, {\n          children: \"star\"\n        }), \" external resources that we highly recommend you read. Feel free\\r\\nto read the others if you don't understand something. If multiple modules\\r\\ncover essentially the same material, at most one should be starred.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"implementations\",\n      children: [_jsx(_components.a, {\n        href: \"#implementations\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementations\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Usually the lesson is followed by an implementation of the solution to the focus\\r\\nproblem.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"C++ code will always be provided.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Java code will be provided (at least) for Bronze to Gold.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Python code will be provided (at least) for Bronze and some of Silver.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example input / output will be provided if not already contained within the\\r\\nstatement of the focus problem.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"practice-problems\",\n      children: [_jsx(_components.a, {\n        href: \"#practice-problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Practice Problems\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After reading the module lesson, you'll be given a lot of problems (from various\\r\\nsources, not just USACO) to practice applying the concept you've learned.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The problems are roughly sorted in order of how they are recommended to be\\r\\ncompleted.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"You don't have to solve every problem, just enough to feel comfortable with\\r\\nthe module. We've starred the ones we found most interesting.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Please let us know if the problem is not a good example of the corresponding\\r\\ntopic!\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problem-editorials\",\n      children: [_jsx(_components.a, {\n        href: \"#problem-editorials\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problem Editorials\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We'll try our best to write full editorials for problems which don't have them\\r\\n(or if existing editorials are poorly written). \", _jsx(_components.em, {\n        children: \"Starred problems will generally\\r\\nhave better editorials.\"\n      }), \" If you believe an editorial is needed for a problem,\\r\\nplease let us know using the \\\"Contact Us\\\" button.\"]\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"A lot of current sketches are not actually useful.\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problem-difficulty-bronze-to-gold\",\n      children: [_jsx(_components.a, {\n        href: \"#problem-difficulty-bronze-to-gold\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problem Difficulty (Bronze to Gold)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Difficulty represents how challenging a problem is expected to be to someone\\r\\nafter they read through the module, \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" how difficult the problem is in\\r\\ngeneral. Therefore, it is \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" comparable across modules (even of the same\\r\\ndivision).\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Difficulty ranges from \", _jsx(_components.strong, {\n        children: \"Very Easy\"\n      }), \" to \", _jsx(_components.strong, {\n        children: \"Insane\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Very Easy\"\n        }), \" problems are related to the module, but you should be able to do\\r\\nthem relatively quickly before reading the resources.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Easy\"\n        }), \" problems can be solved relatively quickly by someone who is familiar\\r\\nwith the module, and they should be approachable by someone who has just\\r\\nfinished reading the starred resources.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Normal\"\n        }), \" problems require a bit more thinking.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Hard\"\n        }), \" problems may require a lot (?) of time to approach.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Very Hard\"\n        }), \" problems challenge even the strongest contestants in the\\r\\ncorresponding division. Often require multiple levels of observation and more\\r\\nknowledge than provided by the module.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Insane\"\n        }), \" problems shouldn't appear on a (reasonable) contest of the\\r\\ncorresponding division. Don't worry about solving these until you've reached a\\r\\nhigher division.\"]\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.h2, {\n      id: \"custom-components\",\n      children: [_jsx(_components.a, {\n        href: \"#custom-components\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Custom Components\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sometimes modules will contain custom components. Here are some of the more\\r\\ncommon ones.\"\n    }), \"\\n\", _jsx(Info, {\n      title: \"Pro Tip\",\n      children: _jsx(_components.p, {\n        children: \"Helpful bits of advice provided by the author.\"\n      })\n    }), \"\\n\", _jsx(Spoiler, {\n      title: \"Hidden Content\",\n      children: _jsxs(_components.p, {\n        children: [\"In some modules, codes or solutions will be placed in \", _jsx(_components.strong, {\n          children: \"spoiler blocks\"\n        }), \" like\\r\\nthis. In these cases, you should think about the problem or try to implement it\\r\\nyourself before revealing the solution or code.\"]\n      })\n    }), \"\\n\", _jsx(Optional, {\n      title: \"Optional Content\",\n      children: _jsx(_components.p, {\n        children: \"Not all content in this guide is essential to competitive programming. Skipping\\r\\nover optional content is fine, but if you're interested, feel free to explore\\r\\nfurther as well.\"\n      })\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"Pay attention to content within warning blocks!\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"See the following module for more information regarding custom components.\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  prerequisites,\n  default: MDXContent\n};\n","frontmatter":{"title":"Introducing Modules","author":"Nathan Wang, Benjamin Qi","contributors":null,"id":"modules","prerequisites":["using-this-guide"],"description":"How each module is structured.","frequency":null},"parent":{"name":"Modules","relativePath":"1_General/Modules.mdx"},"fields":{"division":"general"},"toc":{"cpp":[{"depth":2,"value":"Lesson","slug":"lesson"},{"depth":2,"value":"Implementations","slug":"implementations"},{"depth":2,"value":"Practice Problems","slug":"practice-problems"},{"depth":3,"value":"Problem Editorials","slug":"problem-editorials"},{"depth":3,"value":"Problem Difficulty (Bronze to Gold)","slug":"problem-difficulty-bronze-to-gold"},{"depth":2,"value":"Custom Components","slug":"custom-components"}],"java":[{"depth":2,"value":"Lesson","slug":"lesson"},{"depth":2,"value":"Implementations","slug":"implementations"},{"depth":2,"value":"Practice Problems","slug":"practice-problems"},{"depth":3,"value":"Problem Editorials","slug":"problem-editorials"},{"depth":3,"value":"Problem Difficulty (Bronze to Gold)","slug":"problem-difficulty-bronze-to-gold"},{"depth":2,"value":"Custom Components","slug":"custom-components"}],"py":[{"depth":2,"value":"Lesson","slug":"lesson"},{"depth":2,"value":"Implementations","slug":"implementations"},{"depth":2,"value":"Practice Problems","slug":"practice-problems"},{"depth":3,"value":"Problem Editorials","slug":"problem-editorials"},{"depth":3,"value":"Problem Difficulty (Bronze to Gold)","slug":"problem-difficulty-bronze-to-gold"},{"depth":2,"value":"Custom Components","slug":"custom-components"}]}},"moduleProblemLists":{"problemLists":[]}},"pageContext":{"id":"modules"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}