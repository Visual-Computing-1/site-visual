{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/general/contest-strategy",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"contest-strategy\", title = \"Contest Strategy\", author = \"Nathan Chen\", description = \"General ideas on how to strategize during a USACO contest.\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    em: \"em\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Info: _missingComponent(\"Info\")\n  }, _props.components), {HeaderLink, Info, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"The best contest strategy is to go in knowing everything. However, only few\\r\\npeople can do this; see \", _jsx(_components.a, {\n        href: \"https://codeforces.com/profile/benq\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Benq\"\n      }), \" or\\r\\n\", _jsx(_components.a, {\n        href: \"https://codeforces.com/profile/tmwilliamlin168\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"tmw\"\n      }), \" (I kid).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once the timer starts, there's no more studying you can do, and managing your\\r\\ntime wisely is the best thing you can do to maximize your score.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"strategy\",\n      children: [_jsx(_components.a, {\n        href: \"#strategy\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Strategy\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Strategy is flexible and all advice should be taken with a grain of salt.\\r\\nStrategy should be personal to \", _jsx(_components.em, {\n        children: \"you\"\n      }), \" specifically.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"the-beginning-of-a-contest\",\n      children: [_jsx(_components.a, {\n        href: \"#the-beginning-of-a-contest\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"The beginning of a contest\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You should read \", _jsx(_components.em, {\n        children: \"all\"\n      }), \" the problems first (don't give up on any problems\\r\\nprematurely). Generally, a lot of thinking should happen before any coding.\\r\\nDepending on the difficulty of a contest, you can spend anywhere from 5 minutes\\r\\nto 2 hours with a pencil and paper before touching the keyboard.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Problem difficulties can be out of order, so keep that in mind before focusing\\r\\ndown 3 hours on problem 1 and not getting anywhere. Do a good amount of thinking\\r\\non each problem before deciding which ones to focus on and which to put aside.\"\n    }), \"\\n\", _jsx(Info, {\n      title: \"Pro Tip\",\n      children: _jsx(_components.p, {\n        children: \"Historically, the first platinum problem has never been the hardest (though you\\r\\nshouldn't count on this).\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"time-allocation\",\n      children: [_jsx(_components.a, {\n        href: \"#time-allocation\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Time allocation\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's the worst feeling in the world to sink a couple hours into a problem before\\r\\nrealizing that a different problem would've been easy pickings; we can easily\\r\\navoid this situation with proper time allocation. You have to use your own\\r\\njudgement in deciding what is likely solvable and when you should quit.\\r\\nGenerally, don't spend \\\"too long\\\" on one problem, and stay away from problems\\r\\nthat look like they test something you don't know well.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"when-you-see-a-solution\",\n      children: [_jsx(_components.a, {\n        href: \"#when-you-see-a-solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"When you see a solution\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you immediately get the solution to a problem while reading it, it might be a\\r\\ngood idea to code it up quickly and get it out of the way.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It also might be a good idea to make some progress on other problems before\\r\\ncoding the one you know how to do. When you come back and start coding, you can\\r\\nmake sure your solution still makes sense and then you have ideas from the other\\r\\nproblems bouncing around in your head while you're coding.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"when-there-are-partials\",\n      children: [_jsx(_components.a, {\n        href: \"#when-there-are-partials\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"When there are partials\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you can get points from partially solving a problem (e.g. in USACO), then\\r\\nit's a good idea to keep those subtasks in mind. There are two main approaches\\r\\nto partially solving problems.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use most of your time to think about the full problem, then code the partials\\r\\nif you haven't found the solution and your time will soon run out.\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"If you find the full solution, be certain your solution is correct, lest you\\r\\nwaste an hour coding something completely wrong.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Judge the difficulty of the partials carefully! It could take anywhere from\\r\\n30 seconds to 30 minutes to code a partial, or maybe a partial wasn't as\\r\\ntrivial as you thought!\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Work up from the partials, coding the easiest and then going to the hardest.\\r\\nThe partial subtasks may help you think of the full solution, and will also\\r\\nhelp you stay on track.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"personal-commentaries\",\n      children: [_jsx(_components.a, {\n        href: \"#personal-commentaries\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Personal Commentaries\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"nathan-chen\",\n      children: [_jsx(_components.a, {\n        href: \"#nathan-chen\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Nathan Chen\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At the Platinum level, I first read everything and then I usually spend the\\r\\nfirst hour thinking about the easiest two problems (the hardest problem is\\r\\nusually VERY hard). I continue thinking for the rest of the contest window and I\\r\\ncode them if I think I have the solution. I'm also the type to save partials for\\r\\nlast, when time is running out and I still have nothing.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"benjamin-qi\",\n      children: [_jsx(_components.a, {\n        href: \"#benjamin-qi\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Benjamin Qi\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Do the partials you can; hopefully by then you've figured out the full solution.\\r\\n:D\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  default: MDXContent\n};\n","frontmatter":{"title":"Contest Strategy","author":"Nathan Chen","contributors":null,"id":"contest-strategy","prerequisites":null,"description":"General ideas on how to strategize during a USACO contest.","frequency":null},"parent":{"name":"Contest_Strategy","relativePath":"1_General/Contest_Strategy.mdx"},"fields":{"division":"general"},"toc":{"cpp":[{"depth":2,"value":"Strategy","slug":"strategy"},{"depth":3,"value":"The beginning of a contest","slug":"the-beginning-of-a-contest"},{"depth":3,"value":"Time allocation","slug":"time-allocation"},{"depth":3,"value":"When you see a solution","slug":"when-you-see-a-solution"},{"depth":3,"value":"When there are partials","slug":"when-there-are-partials"},{"depth":2,"value":"Personal Commentaries","slug":"personal-commentaries"},{"depth":3,"value":"Nathan Chen","slug":"nathan-chen"},{"depth":3,"value":"Benjamin Qi","slug":"benjamin-qi"}],"java":[{"depth":2,"value":"Strategy","slug":"strategy"},{"depth":3,"value":"The beginning of a contest","slug":"the-beginning-of-a-contest"},{"depth":3,"value":"Time allocation","slug":"time-allocation"},{"depth":3,"value":"When you see a solution","slug":"when-you-see-a-solution"},{"depth":3,"value":"When there are partials","slug":"when-there-are-partials"},{"depth":2,"value":"Personal Commentaries","slug":"personal-commentaries"},{"depth":3,"value":"Nathan Chen","slug":"nathan-chen"},{"depth":3,"value":"Benjamin Qi","slug":"benjamin-qi"}],"py":[{"depth":2,"value":"Strategy","slug":"strategy"},{"depth":3,"value":"The beginning of a contest","slug":"the-beginning-of-a-contest"},{"depth":3,"value":"Time allocation","slug":"time-allocation"},{"depth":3,"value":"When you see a solution","slug":"when-you-see-a-solution"},{"depth":3,"value":"When there are partials","slug":"when-there-are-partials"},{"depth":2,"value":"Personal Commentaries","slug":"personal-commentaries"},{"depth":3,"value":"Nathan Chen","slug":"nathan-chen"},{"depth":3,"value":"Benjamin Qi","slug":"benjamin-qi"}]}},"moduleProblemLists":{"problemLists":[]}},"pageContext":{"id":"contest-strategy"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}