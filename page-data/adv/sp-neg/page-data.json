{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/adv/sp-neg",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*<Resource\nsource=\"TC\"\ntitle=\"Intro to Graphs Section 3\"\nurl=\"introduction-to-graphs-and-their-data-structures-section-3/\"\n/>*/\n/*Can also use [Shortest Path Faster Algorithm](https://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm) or*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"sp-neg\", title = \"Shortest Paths with Negative Edge Weights\", author = \"Benjamin Qi, Andi Qu, Dong Liu\", prerequisites = [\"shortest-paths\"], description = \"Returning to Bellman-Ford and Floyd-Warshall.\", frequency = 0;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    IncompleteSection: _missingComponent(\"IncompleteSection\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {HeaderLink, Resources, Resource, FocusProblem, IncompleteSection, MATHSPAN, LanguageSection, CPPSection, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"bellman-ford\",\n      children: [_jsx(_components.a, {\n        href: \"#bellman-ford\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Bellman-Ford\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Bellman-Ford\",\n        url: \"graph/bellman_ford.html\",\n        starred: true\n      }), _jsx(Resource, {\n        source: \"cp-algo\",\n        title: \"Finding Negative Cycle\",\n        url: \"graph/finding-negative-cycle-in-graph.html\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"with Bellman-Ford\"\n        })\n      }), _jsx(Resource, {\n        source: \"CP2\",\n        title: \"4.4.4 - SSSP with Negative Weight Cycle\"\n      })]\n    }), \"\\n\", \"\\n\", _jsxs(_components.h3, {\n      id: \"shortest-paths\",\n      children: [_jsx(_components.a, {\n        href: \"#shortest-paths\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Shortest Paths\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"bellSam\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"solution\",\n      children: [_jsx(_components.a, {\n        href: \"#solution\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsx(IncompleteSection, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-negative-cycles\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-negative-cycles\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding Negative Cycles\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"bellSam2\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"solution-1\",\n      children: [_jsx(_components.a, {\n        href: \"#solution-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As mentioned in\\r\\n\", _jsx(_components.a, {\n        href: \"https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"cp-algorithms\"\n      }), \",\\r\\nwe relax the edges N times. If we perform an update on the \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \"th iteration,\\r\\nthere is an negative cycle.\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\n\\r\\nstruct edge {\\r\\n\\tint from, to; ll weight;\\r\\n};\\r\\n\\r\\nconst int MAXN = 2505;\\r\\n\\r\\nint n, m, parent[MAXN];\\r\\nll dist[MAXN];\\r\\nvector<edge> graph;\\r\\n\\r\\nvoid BellmanFord(int source) {\\r\\n\\tfill(parent+1, parent+n+1, 0);\\r\\n\\tfill(dist+1, dist+n+1, 1e18);\\r\\n\\tdist[source] = 0;\\r\\n\\tint last_node_updated;\\r\\n\\tfor(int i=1; i<=n; i++) {\\r\\n\\t\\tlast_node_updated = -1;\\r\\n\\t\\tfor(edge &e : graph) {\\r\\n\\t\\t\\tif(dist[e.from] + e.weight < dist[e.to]) {\\r\\n\\t\\t\\t\\tdist[e.to] = dist[e.from] + e.weight;\\r\\n\\t\\t\\t\\tparent[e.to] = e.from;\\r\\n\\t\\t\\t\\tlast_node_updated = e.to;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tif(last_node_updated == -1) {\\r\\n\\t\\tcout << \\\"NO\\\" << '\\\\n';\\r\\n\\t} else {\\r\\n\\t\\tcout << \\\"YES\\\" << '\\\\n';\\r\\n\\t\\tvector<int> cycle;\\r\\n\\t\\tfor(int i=0; i<n-1; i++) {\\r\\n\\t\\t\\tlast_node_updated=parent[last_node_updated];\\r\\n\\t\\t}\\r\\n\\t\\tfor(int x=last_node_updated; ; x=parent[x]) {\\r\\n\\t\\t\\tcycle.push_back(x);\\r\\n\\t\\t\\tif (x==last_node_updated && cycle.size()>1) break;\\r\\n\\t\\t}\\r\\n\\t\\treverse(cycle.begin(), cycle.end());\\r\\n\\t\\tfor(int x : cycle) cout << x << ' ';\\r\\n\\t\\tcout << '\\\\n';\\r\\n\\t}\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tcin.tie(0)->sync_with_stdio(0);\\r\\n\\r\\n\\tcin >> n >> m;\\r\\n\\twhile(m--) {\\r\\n\\t\\tint a, b; ll c;\\r\\n\\t\\tcin >> a >> b >> c;\\r\\n\\t\\tgraph.push_back({a, b, c});\\r\\n\\t}\\r\\n\\tBellmanFord(1);\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"simple-linear-programming\",\n      children: [_jsx(_components.a, {\n        href: \"#simple-linear-programming\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Simple Linear Programming\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use shortest path algorithms to solve the following problem (a very\\r\\nsimple \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Linear_programming\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"linear program\"\n      }), \").\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Given variables \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x_1,x_2,\\\\ldots,x_N\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\\\"true\\\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\\\"true\\\">,</mo><mo>…</mo><mo separator=\\\"true\\\">,</mo><msub><mi>x</mi><mi>N</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">x_1,x_2,\\\\ldots,x_N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3283em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \" with constraints in the form\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x_i-x_j\\\\ge c\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>≥</mo><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x_i-x_j\\\\ge c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9221em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≥</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n        }), \", compute a feasible solution.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"MIT\",\n        title: \"Slides from Intro to Algorithms\",\n        url: \"https://www.cs.rit.edu/~spr/COURSES/ALG/MIT/lec18.pdf\",\n        children: _jsx(_components.p, {\n          children: \"Linear Programming Trick\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Timeline (USACO Camp):\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"equivalent to\\r\\n\", _jsx(_components.a, {\n          href: \"http://www.usaco.org/index.php?page=viewproblem2&cpid=1017\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Timeline (Gold)\"\n        }), \"\\r\\nexcept \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"N,C\\\\le 5000\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo separator=\\\"true\\\">,</mo><mi>C</mi><mo>≤</mo><mn>5000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N,C\\\\le 5000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07153em;\\\">C</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">5000</span></span></span></span>\"\n        }), \" and negative values of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" are possible.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"linear\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"floyd-warshall\",\n      children: [_jsx(_components.a, {\n        href: \"#floyd-warshall\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Floyd-Warshall\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"floydSam\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---apsp\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---apsp\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - APSP\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"const int MOD = 1000000007;\\r\\nconst ll INF = 1e18;\\r\\n\\r\\nint n,m,q;\\r\\nll dist[150][150], bad[150][150];\\r\\n\\r\\nvoid solve() {\\r\\n\\tF0R(i,n) F0R(j,n) dist[i][j] = INF, bad[i][j] = 0;\\r\\n\\tF0R(i,n) dist[i][i] = 0;\\r\\n\\tF0R(i,m) {\\r\\n\\t\\tint u,v,w; cin >> u >> v >> w;\\r\\n\\t\\tdist[u][v] = min(dist[u][v],(ll)w);\\r\\n\\t}\\r\\n\\tF0R(k,n) F0R(i,n) F0R(j,n) if (dist[i][k] != INF && dist[k][j] != INF)\\r\\n\\t\\tdist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);\\r\\n\\r\\n\\tF0R(k,n) F0R(i,n) F0R(j,n) if (dist[i][k] != INF && dist[k][j] != INF)\\r\\n\\t\\tif (dist[i][j] > dist[i][k]+dist[k][j])\\r\\n\\t\\t\\tbad[i][j] = 1;\\r\\n\\r\\n\\tF0R(k,n) F0R(i,n) F0R(j,n) {\\r\\n\\t\\tif (dist[i][k] < INF && bad[k][j]) bad[i][j] = 1;\\r\\n\\t\\tif (bad[i][k] && dist[k][j] < INF) bad[i][j] = 1;\\r\\n\\t}\\r\\n\\r\\n\\tF0R(i,q) {\\r\\n\\t\\tint u,v; cin >> u >> v;\\r\\n\\t\\tif (bad[u][v]) cout << \\\"-Infinity\\\\n\\\";\\r\\n\\t\\telse if (dist[u][v] == INF) cout << \\\"Impossible\\\\n\\\";\\r\\n\\t\\telse cout << dist[u][v] << \\\"\\\\n\\\";\\r\\n\\t}\\r\\n\\tcout << \\\"\\\\n\\\";\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);cin.tie(0);\\r\\n\\twhile (cin >> n >> m >> q) solve();\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problems-1\",\n      children: [_jsx(_components.a, {\n        href: \"#problems-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"floydProbs\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"modified-dijkstra\",\n      children: [_jsx(_components.a, {\n        href: \"#modified-dijkstra\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Modified Dijkstra\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.p, {\n      children: [\"The Dijkstra code presented \", _jsx(_components.a, {\n        href: \"/gold/shortest-paths#mathcalomlog-n-implementation\",\n        children: \"earlier\"\n      }), \"\\r\\nwill still give correct results if there are no negative cycles. However, the\\r\\nsame running time bound no longer applies, as demonstrated by subtasks 1-6 of\\r\\nthe following problem.\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"dijk\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This problem forces you to analyze the inner workings of the three shortest-path\\r\\nalgorithms we presented here. It also teaches you about how problemsetters could\\r\\ncreate hack cases!\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Shortest Paths with Negative Edge Weights","author":"Benjamin Qi, Andi Qu, Dong Liu","contributors":null,"id":"sp-neg","prerequisites":["shortest-paths"],"description":"Returning to Bellman-Ford and Floyd-Warshall.","frequency":0},"parent":{"name":"SPneg","relativePath":"6_Advanced/SPneg.mdx"},"fields":{"division":"adv"},"toc":{"cpp":[{"depth":2,"value":"Bellman-Ford","slug":"bellman-ford"},{"depth":3,"value":"Shortest Paths","slug":"shortest-paths"},{"depth":4,"value":"Solution","slug":"solution"},{"depth":3,"value":"Finding Negative Cycles","slug":"finding-negative-cycles"},{"depth":4,"value":"Solution","slug":"solution-1"},{"depth":3,"value":"Simple Linear Programming","slug":"simple-linear-programming"},{"depth":4,"value":"Resources","slug":"resources"},{"depth":4,"value":"Problems","slug":"problems"},{"depth":2,"value":"Floyd-Warshall","slug":"floyd-warshall"},{"depth":3,"value":"Solution - APSP","slug":"solution---apsp"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Modified Dijkstra","slug":"modified-dijkstra"}],"java":[{"depth":2,"value":"Bellman-Ford","slug":"bellman-ford"},{"depth":3,"value":"Shortest Paths","slug":"shortest-paths"},{"depth":4,"value":"Solution","slug":"solution"},{"depth":3,"value":"Finding Negative Cycles","slug":"finding-negative-cycles"},{"depth":4,"value":"Solution","slug":"solution-1"},{"depth":3,"value":"Simple Linear Programming","slug":"simple-linear-programming"},{"depth":4,"value":"Resources","slug":"resources"},{"depth":4,"value":"Problems","slug":"problems"},{"depth":2,"value":"Floyd-Warshall","slug":"floyd-warshall"},{"depth":3,"value":"Solution - APSP","slug":"solution---apsp"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Modified Dijkstra","slug":"modified-dijkstra"}],"py":[{"depth":2,"value":"Bellman-Ford","slug":"bellman-ford"},{"depth":3,"value":"Shortest Paths","slug":"shortest-paths"},{"depth":4,"value":"Solution","slug":"solution"},{"depth":3,"value":"Finding Negative Cycles","slug":"finding-negative-cycles"},{"depth":4,"value":"Solution","slug":"solution-1"},{"depth":3,"value":"Simple Linear Programming","slug":"simple-linear-programming"},{"depth":4,"value":"Resources","slug":"resources"},{"depth":4,"value":"Problems","slug":"problems"},{"depth":2,"value":"Floyd-Warshall","slug":"floyd-warshall"},{"depth":3,"value":"Solution - APSP","slug":"solution---apsp"},{"depth":3,"value":"Problems","slug":"problems-1"},{"depth":2,"value":"Modified Dijkstra","slug":"modified-dijkstra"}]}},"moduleProblemLists":{"problemLists":[{"listId":"bellSam","problems":[{"uniqueId":"kattis-shortestpath3","name":"SSSP Negative","url":"https://open.kattis.com/problems/shortestpath3","source":"Kattis","difficulty":"Easy","isStarred":false,"tags":[],"solution":null}]},{"listId":"bellSam2","problems":[{"uniqueId":"cses-1197","name":"(Negative) Cycle Finding","url":"https://cses.fi/problemset/task/1197","source":"CSES","difficulty":"Easy","isStarred":false,"tags":[],"solution":null}]},{"listId":"linear","problems":[{"uniqueId":"rmi-RestoreArray","name":"Restore Array","url":"https://oj.uz/problem/view/RMI19_restore","source":"RMI","difficulty":"Normal","isStarred":false,"tags":[],"solution":{"kind":"sketch","label":null,"labelTooltip":null,"url":null,"sketch":"similar to [Art](https://codeforces.com/gym/102394/problem/A)"}}]},{"listId":"floydSam","problems":[{"uniqueId":"kattis-allpairspath","name":"APSP (with negative weights)","url":"https://open.kattis.com/problems/allpairspath","source":"Kattis","difficulty":"Easy","isStarred":false,"tags":[],"solution":null}]},{"listId":"floydProbs","problems":[{"uniqueId":"apio-17-TravelingMerchant","name":"2017 - Traveling Merchant","url":"https://oj.uz/problem/view/APIO17_merchant","source":"APIO","difficulty":"Hard","isStarred":true,"tags":["APSP","Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"dijk","problems":[{"uniqueId":"apio-13-tasksauthor","name":"2013 - Tasksauthor","url":"https://tlx.toki.id/problems/apio-2013/C/","source":"APIO","difficulty":"Hard","isStarred":true,"tags":["SP","Output Only"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"sp-neg"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}