{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/adv/extend-euclid",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"extend-euclid\", title = \"Extended Euclidean Algorithm\", author = \"Benjamin Qi\", prerequisites = [\"divisibility\"], description = \"?\", frequency = 1;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {HeaderLink, Resources, Resource, MATHSPAN, LanguageSection, CPPSection, MATHDIV, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"euclidean-algorithm\",\n      children: [_jsx(_components.a, {\n        href: \"#euclidean-algorithm\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Euclidean Algorithm\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"cp-algo\",\n        url: \"algebra/euclid-algorithm.html\",\n        title: \"Euclidean\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The original Euclidean Algorithm computes \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\gcd(a,b)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\gcd(a,b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\"><span style=\\\"margin-right:0.01389em;\\\">g</span>cd</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" and looks like this:\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsxs(CPPSection, {\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"ll euclid(ll a, ll b) {\\r\\n\\tfor (;b;swap(a,b)) {\\r\\n\\t\\tll k = a/b;\\r\\n\\t\\ta -= k*b;\\r\\n\\t}\\r\\n\\treturn a; // gcd(a,b)\\r\\n}\\n\"\n          })\n        }), _jsxs(_components.h2, {\n          id: \"extended-euclidean-algorithm\",\n          children: [_jsx(_components.a, {\n            href: \"#extended-euclidean-algorithm\",\n            \"aria-hidden\": \"true\",\n            tabIndex: \"-1\",\n            className: \"anchor before\",\n            children: _jsx(HeaderLink, {})\n          }), \"Extended Euclidean Algorithm\"]\n        }), _jsxs(Resources, {\n          children: [_jsx(Resource, {\n            source: \"cp-algo\",\n            url: \"algebra/extended-euclid-algorithm.html\",\n            title: \"Extended Euclidean\",\n            starred: true\n          }), _jsx(Resource, {\n            source: \"Wikipedia\",\n            url: \"https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\",\n            title: \"Extended Euclidean\"\n          }), _jsx(Resource, {\n            source: \"cp-algo\",\n            url: \"algebra/linear-diophantine-equation.html\",\n            title: \"Linear Diophantine Equation\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"The extended Euclidean algorithm computes integers \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"x\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n          }), \" and \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"y\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span></span></span></span>\"\n          }), \" such that\"]\n        }), _jsx(MATHDIV, {\n          className: \"math math-display\",\n          latex: \"ax+by=\\\\gcd(a,b)\",\n          children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">ax+by=\\\\gcd(a,b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mop\\\"><span style=\\\"margin-right:0.01389em;\\\">g</span>cd</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span></span>\"\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can slightly modify the version of the Euclidean algorithm given above to\\r\\nreturn more information!\"\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"array<ll,3> extendEuclid(ll a, ll b) {\\r\\n\\tarray<ll,3> x = {1,0,a}, y = {0,1,b};\\r\\n\\t// we know that 1*a+0*b=a and 0*a+1*b=b\\r\\n\\tfor (;y[2];swap(x,y)) { // run extended Euclidean algo\\r\\n\\t\\tll k = x[2]/y[2];\\r\\n\\t\\tF0R(i,3) x[i] -= k*y[i];\\r\\n\\t\\t// keep subtracting multiple of one equation from the other\\r\\n\\t}\\r\\n\\treturn x; // x[0]*a+x[1]*b=x[2], x[2]=gcd(a,b)\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tFOR(a,1,101) FOR(b,1,101) {\\r\\n\\t\\tauto x = extendEuclid(a,b);\\r\\n\\t\\tint g = x[2];\\r\\n\\t\\tassert(g == __gcd(a,b));\\r\\n\\t\\tif (a != b) assert(abs(x[0]) <= b/g/2 && abs(x[1]) <= a/g/2);\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"recursive-version\",\n      children: [_jsx(_components.a, {\n        href: \"#recursive-version\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Recursive Version\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"ll euclid(ll a, ll b) {\\r\\n\\tif (!b) return a;\\r\\n\\treturn euclid(b,a%b);\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"becomes\"\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"pl extendEuclid(ll a, ll b) { // returns {x,y}\\r\\n\\tif (!b) return {1,0};\\r\\n\\tpl p = extendEuclid(b,a%b); return {p.s,p.f-a/b*p.s};\\r\\n}\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The pair will equal to the first two returned elements of the array in the\\r\\niterative version. Looking at this version, we can prove by induction that when\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \" are distinct positive integers, the returned pair \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(x,y)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>x</mi><mo separator=\\\"true\\\">,</mo><mi>y</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(x,y)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" will\\r\\nsatisfy \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"|x|\\\\le \\\\frac{b}{2\\\\gcd(a,b)}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∣</mi><mi>x</mi><mi mathvariant=\\\"normal\\\">∣</mi><mo>≤</mo><mfrac><mi>b</mi><mrow><mn>2</mn><mi>gcd</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow></mfrac></mrow><annotation encoding=\\\"application/x-tex\\\">|x|\\\\le \\\\frac{b}{2\\\\gcd(a,b)}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">∣</span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mord\\\">∣</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.4001em;vertical-align:-0.52em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8801em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span><span class=\\\"mspace mtight\\\" style=\\\"margin-right:0.1952em;\\\"></span><span class=\\\"mop mtight\\\"><span class=\\\"mtight\\\" style=\\\"margin-right:0.01389em;\\\">g</span><span class=\\\"mtight\\\">c</span><span class=\\\"mtight\\\">d</span></span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"mpunct mtight\\\">,</span><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"mclose mtight\\\">)</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.52em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"|y|\\\\le \\\\frac{a}{2\\\\gcd(a,b)}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∣</mi><mi>y</mi><mi mathvariant=\\\"normal\\\">∣</mi><mo>≤</mo><mfrac><mi>a</mi><mrow><mn>2</mn><mi>gcd</mi><mo>⁡</mo><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow></mfrac></mrow><annotation encoding=\\\"application/x-tex\\\">|y|\\\\le \\\\frac{a}{2\\\\gcd(a,b)}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">∣</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mord\\\">∣</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2154em;vertical-align:-0.52em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6954em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span><span class=\\\"mspace mtight\\\" style=\\\"margin-right:0.1952em;\\\"></span><span class=\\\"mop mtight\\\"><span class=\\\"mtight\\\" style=\\\"margin-right:0.01389em;\\\">g</span><span class=\\\"mtight\\\">c</span><span class=\\\"mtight\\\">d</span></span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\">a</span><span class=\\\"mpunct mtight\\\">,</span><span class=\\\"mord mathnormal mtight\\\">b</span><span class=\\\"mclose mtight\\\">)</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.52em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span></span></span></span>\"\n      }), \".\\r\\nFurthermore, there can only exist one pair that satisfies these conditions!\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that this works when \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a,b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a,b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8889em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \" are quite large (say, \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\approx 2^{60}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo>≈</mo><msup><mn>2</mn><mn>60</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\approx 2^{60}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4831em;\\\"></span><span class=\\\"mrel\\\">≈</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">60</span></span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \") and we\\r\\nwon't wind up with overflow issues.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"application---modular-inverse\",\n      children: [_jsx(_components.a, {\n        href: \"#application---modular-inverse\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Application - Modular Inverse\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"cp-algo\",\n        url: \"algebra/module-inverse.html\",\n        title: \"Modular Inverse\"\n      })\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"kat\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It seems that when multiplication / division is involved in this problem,\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n^2 < \\\\texttt{LLONG\\\\_MAX}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>&lt;</mo><mtext mathvariant=\\\"monospace\\\">LLONG_MAX</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">n^2 &lt; \\\\texttt{LLONG\\\\_MAX}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8532em;vertical-align:-0.0391em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">&lt;</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7063em;vertical-align:-0.0951em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">LLONG_MAX</span></span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(LanguageSection, {\n      children: _jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"ll invGeneral(ll a, ll b) {\\r\\n\\tarray<ll,3> x = extendEuclid(a,b);\\r\\n\\tassert(x[2] == 1); // gcd must be 1\\r\\n\\treturn x[0]+(x[0]<0)*b;\\r\\n}\\r\\n\\r\\nint main() {\\r\\n\\tFOR(b,1,101) F0R(a,101) if (__gcd(a,b) == 1) {\\r\\n\\t\\tll x = invGeneral(a,b);\\r\\n\\t\\tassert((a*x-1)%b == 0);\\r\\n\\t\\tassert(0 <= x && x < b);\\r\\n\\t}\\r\\n}\\r\\n\\n\"\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"application---chinese-remainder-theorem\",\n      children: [_jsx(_components.a, {\n        href: \"#application---chinese-remainder-theorem\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Application - Chinese Remainder Theorem\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"cp-algo\",\n        url: \"algebra/linear_congruence_equation.html\",\n        title: \"Linear Congruence Equation\"\n      }), _jsx(Resource, {\n        source: \"cp-algo\",\n        url: \"algebra/chinese-remainder-theorem.html\",\n        title: \"Chinese Remainder Theorem\"\n      })]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"crt\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Extended Euclidean Algorithm","author":"Benjamin Qi","contributors":null,"id":"extend-euclid","prerequisites":["divisibility"],"description":"?","frequency":1},"parent":{"name":"Extend_Euclid","relativePath":"6_Advanced/Extend_Euclid.mdx"},"fields":{"division":"adv"},"toc":{"cpp":[{"depth":2,"value":"Euclidean Algorithm","slug":"euclidean-algorithm"},{"depth":2,"value":"Extended Euclidean Algorithm","slug":"extended-euclidean-algorithm"},{"depth":3,"value":"Recursive Version","slug":"recursive-version"},{"depth":2,"value":"Application - Modular Inverse","slug":"application---modular-inverse"},{"depth":2,"value":"Application - Chinese Remainder Theorem","slug":"application---chinese-remainder-theorem"}],"java":[{"depth":2,"value":"Euclidean Algorithm","slug":"euclidean-algorithm"},{"depth":3,"value":"Recursive Version","slug":"recursive-version"},{"depth":2,"value":"Application - Modular Inverse","slug":"application---modular-inverse"},{"depth":2,"value":"Application - Chinese Remainder Theorem","slug":"application---chinese-remainder-theorem"}],"py":[{"depth":2,"value":"Euclidean Algorithm","slug":"euclidean-algorithm"},{"depth":3,"value":"Recursive Version","slug":"recursive-version"},{"depth":2,"value":"Application - Modular Inverse","slug":"application---modular-inverse"},{"depth":2,"value":"Application - Chinese Remainder Theorem","slug":"application---chinese-remainder-theorem"}]}},"moduleProblemLists":{"problemLists":[{"listId":"kat","problems":[{"uniqueId":"kattis-modulararithmetic","name":"Modular Arithmetic","url":"https://open.kattis.com/problems/modulararithmetic","source":"Kattis","difficulty":null,"isStarred":false,"tags":null,"solution":null}]},{"listId":"crt","problems":[{"uniqueId":"kattis-chineseremainder","name":"Chinese Remainder","url":"https://open.kattis.com/problems/chineseremainder","source":"Kattis","difficulty":null,"isStarred":false,"tags":null,"solution":null},{"uniqueId":"kattis-generalchineseremainder","name":"Chinese Remainder (non-relatively prime moduli)","url":"https://open.kattis.com/problems/generalchineseremainder","source":"Kattis","difficulty":null,"isStarred":false,"tags":null,"solution":null}]}]}},"pageContext":{"id":"extend-euclid"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}