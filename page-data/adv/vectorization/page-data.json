{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/adv/vectorization",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*- Also consider the older `#pragma GCC target (\"sse4\")`.*/\n/*<IncompleteSection>\n\nbetter source to learn about these?\n\n</IncompleteSection>*/\n/*- [`unroll-loops`](https://codeforces.com/contest/855/submission/89815160): TLE 49*/\n/*- [`Ofast`, `unroll-loops`](https://codeforces.com/contest/855/submission/89815262): 3509ms*/\n/*Anyways, keep in mind that these rarely make a difference in competitive programming.*/\n/*<IncompleteSection />*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"vectorization\", title = \"Vectorization in C++\", author = \"Benjamin Qi\", description = \"?\";\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    em: \"em\",\n    strong: \"strong\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\")\n  }, _props.components), {HeaderLink, Resources, Resource, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://gcc.gnu.org/onlinedocs/cpp/Pragmas.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Pragmas\"\n      }), \" provide additional\\r\\ninformation to the compiler. Sometimes you'll see the following lines at the\\r\\nbeginning of a program.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"#pragma GCC optimize (\\\"Ofast\\\")\\r\\n#pragma GCC target (\\\"avx2\\\")\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"about\",\n      children: [_jsx(_components.a, {\n        href: \"#about\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"About\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CF\",\n        title: \"GCC Optimization Pragmas\",\n        url: \"https://codeforces.com/blog/entry/96344\"\n      }), _jsx(Resource, {\n        source: \"GCC\",\n        title: \"3.11 - Optimization Options\",\n        url: \"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\"\n      }), _jsx(Resource, {\n        source: \"KACTL\",\n        title: \"10.5.2 - Pragmas\",\n        url: \"https://github.com/kth-competitive-programming/kactl/blob/master/kactl.pdf\"\n      }), _jsx(Resource, {\n        source: \"CF\",\n        title: \"What do SSE/AVX do?\",\n        url: \"https://codeforces.com/blog/entry/54682?#comment-387553\"\n      }), _jsx(Resource, {\n        source: \"CF\",\n        title: \"Speeding Up for Naive Algorithm\",\n        url: \"https://codeforces.com/blog/entry/66279\"\n      }), _jsx(Resource, {\n        source: \"CodinGame\",\n        title: \"SSE & AVX Vectorization\",\n        url: \"https://www.codingame.com/playgrounds/283/sse-avx-vectorization/autovectorization\",\n        children: _jsx(_components.p, {\n          children: \"some bugs :(, seems ok for most part?\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"According to KACTL:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"#pragma GCC optimize (\\\"Ofast\\\")\"\n        }), \" will make GCC auto-vectorize for loops and\\r\\noptimizes floating points better (assumes associativity and turns off\\r\\n\", _jsx(_components.a, {\n          href: \"https://en.wikipedia.org/wiki/Denormal_number\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"denormals\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"#pragma GCC target (\\\"avx,avx2\\\")\"\n        }), \" can double performance of vectorized code,\\r\\nbut causes crashes on old machines.\"]\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsx(_components.p, {\n      children: \"According to CodinGame,\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Modern CPUs can execute up to four instructions at the same time if they are\\r\\nindependent.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Can also check Wikipedia articles about\\r\\n\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"SSE\"\n      }), \" and\\r\\n\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Advanced_Vector_Extensions\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"AVX\"\n      }), \" (AVX is the more\\r\\nadvanced version).\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.h3, {\n      id: \"examples-from-cf\",\n      children: [_jsx(_components.a, {\n        href: \"#examples-from-cf\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Examples from CF\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The occasional Div 1 E is trivialized by this!\"\n    }), \"\\n\", \"\\n\", \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://codeforces.com/contest/855/submission/47823825\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Nagini\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/89815214\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: \"no pragmas\"\n            }), \": TLE 30\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/89815479\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: _jsx(_components.code, {\n                children: \"O3\"\n              })\n            }), \": 3509ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/89815327\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: _jsx(_components.code, {\n                children: \"Ofast\"\n              })\n            }), \": 3525ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsxs(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/72962496\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: [_jsx(_components.code, {\n                children: \"Ofast\"\n              }), \", \", _jsx(_components.code, {\n                children: \"avx\"\n              })]\n            }), \":\\r\\n2339ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsxs(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/72962508\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: [_jsx(_components.code, {\n                children: \"Ofast\"\n              }), \", \", _jsx(_components.code, {\n                children: \"avx2\"\n              })]\n            }), \":\\r\\n1544ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsxs(_components.a, {\n              href: \"https://codeforces.com/contest/855/submission/72962469\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: [_jsx(_components.code, {\n                children: \"Ofast\"\n              }), \", \", _jsx(_components.code, {\n                children: \"sse4\"\n              })]\n            }), \":\\r\\n2479ms\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://codeforces.com/contest/896/submission/47824007\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Welcome home, Chtholly\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"only \", _jsx(_components.code, {\n              children: \"Ofast\"\n            }), \": TLE\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"avx\"\n            }), \": 2354ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"avx2\"\n            }), \": 1684ms\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"sse4\"\n            }), \": 2183ms\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://codeforces.com/contest/1270/submission/68018017\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Awesome Substrings\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"sse4\"\n            }), \" / \", _jsx(_components.code, {\n              children: \"avx\"\n            }), \": TLE\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"avx2\"\n            }), \": 6894ms\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"where-can-i-use-these\",\n      children: [_jsx(_components.a, {\n        href: \"#where-can-i-use-these\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Where Can I Use These?\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Whether these pragmas are supported depends on the computer architecture (see\\r\\n\", _jsx(_components.a, {\n        href: \"https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html#x86-Options\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"here\"\n      }), \").\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Ofast\"\n        }), \" with \", _jsx(_components.code, {\n          children: \"avx2\"\n        }), \" works on CF and DMOJ.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"sse4\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"avx\"\n        }), \" cause runtime errors on InfoArena and\\r\\n\", _jsx(_components.a, {\n          href: \"https://szkopul.edu.pl/\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Szkopuł\"\n        }), \". However,\\r\\n\", _jsx(_components.code, {\n          children: \"#pragma GCC optimize(\\\"unroll-loops\\\")\"\n        }), \" seems to work on InfoArena (compare\\r\\n\", _jsx(_components.a, {\n          href: \"https://www.infoarena.ro/job_detail/2641920\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"TLE\"\n        }), \" and\\r\\n\", _jsx(_components.a, {\n          href: \"https://www.infoarena.ro/job_detail/2641921\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"AC\"\n        }), \").\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"I don't have reason to believe that these work for USACO.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"why-should-i-not-use-these\",\n      children: [_jsx(_components.a, {\n        href: \"#why-should-i-not-use-these\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Why Should I \", _jsx(_components.em, {\n        children: \"Not\"\n      }), \" Use These?\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"From \", _jsx(_components.a, {\n        href: \"https://codeforces.com/blog/entry/66279?#comment-502965\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"this comment\"\n      }), \":\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"To everyone who doesn't know what's going on here: seems that topicstarter\\r\\ndoesn't know it either, and it looks like some magic for him.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It's \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" a good idea to include these pragmas at the start of every program.\\r\\nAs mentioned above, these pragmas cause RE on some sites. Other times, they are\\r\\njust ignored by the compiler, or even worse, they might make your code slower\\r\\ninstead of faster (ex. see\\r\\n\", _jsx(_components.a, {\n        href: \"https://stackoverflow.com/questions/28875325/gcc-optimization-flag-o3-makes-code-slower-than-o2\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"here\"\n      }), \").\"]\n    }), \"\\n\", \"\\n\"]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  description,\n  default: MDXContent\n};\n","frontmatter":{"title":"Vectorization in C++","author":"Benjamin Qi","contributors":null,"id":"vectorization","prerequisites":null,"description":"?","frequency":null},"parent":{"name":"Vectorization","relativePath":"6_Advanced/Vectorization.mdx"},"fields":{"division":"adv"},"toc":{"cpp":[{"depth":3,"value":"About","slug":"about"},{"depth":3,"value":"Examples from CF","slug":"examples-from-cf"},{"depth":3,"value":"Where Can I Use These?","slug":"where-can-i-use-these"},{"depth":3,"value":"Why Should I Not Use These?","slug":"why-should-i-not-use-these"}],"java":[{"depth":3,"value":"About","slug":"about"},{"depth":3,"value":"Examples from CF","slug":"examples-from-cf"},{"depth":3,"value":"Where Can I Use These?","slug":"where-can-i-use-these"},{"depth":3,"value":"Why Should I Not Use These?","slug":"why-should-i-not-use-these"}],"py":[{"depth":3,"value":"About","slug":"about"},{"depth":3,"value":"Examples from CF","slug":"examples-from-cf"},{"depth":3,"value":"Where Can I Use These?","slug":"where-can-i-use-these"},{"depth":3,"value":"Why Should I Not Use These?","slug":"why-should-i-not-use-these"}]}},"moduleProblemLists":{"problemLists":[]}},"pageContext":{"id":"vectorization"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}