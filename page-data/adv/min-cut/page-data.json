{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/adv/min-cut",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"min-cut\", title = \"Minimum Cut\", author = \"Benjamin Qi\", prerequisites = [\"max-flow\"], description = \"?\", frequency = 1;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {HeaderLink, Resources, Resource, FocusProblem, MATHSPAN, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"resources\",\n      children: [_jsx(_components.a, {\n        href: \"#resources\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Resources\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The resources below include many clever applications of min cut, including the\\r\\n\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Closure_problem\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Closure Problem\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPC\",\n        title: \"10 - Network Flow\",\n        url: \"10_graphs_3_network_flow\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"Slides from \\\"Algorithm Design.\\\" Min-Cut Max-Flow Theorem, applications of\\r\\nflow / min cut.\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"minimum-node-covers\",\n      children: [_jsx(_components.a, {\n        href: \"#minimum-node-covers\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Minimum Node Covers\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"minEx\"\n    }), \"\\n\", _jsx(Resources, {\n      children: _jsx(Resource, {\n        source: \"CPH\",\n        title: \"20.3 - Maximum Matchings\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"brief mentions of Hall's Theorem, Konig's Theorem\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---coin-grid\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---coin-grid\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Coin Grid\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This problem asks us to find a \", _jsx(_components.strong, {\n        children: \"minimum node cover\"\n      }), \" of a bipartite graph.\\r\\nConstruct a flow graph with vertices labeled \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\\\\ldots 2N+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn><mo>…</mo><mn>2</mn><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0\\\\ldots 2N+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \", source \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span></span></span></span>\"\n      }), \", sink\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"2N+1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>2</mn><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">2N+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \", and the following edges:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Edges from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"0\\\\to i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn><mo>→</mo><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">0\\\\to i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \" with capacity \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" for each \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\\\\le i\\\\le N\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1\\\\le i\\\\le N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n        }), \". Cutting the\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"-th such edge corresponds to choosing the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"-th row.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Edges from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"N+i\\\\to 2N+1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo>+</mo><mi>i</mi><mo>→</mo><mn>2</mn><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">N+i\\\\to 2N+1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" with capacity \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n        }), \" for each \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"1\\\\le i\\\\le N\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1\\\\le i\\\\le N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n        }), \". Cutting the\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"-th such edge corresponds to choosing the \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6595em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span></span></span></span>\"\n        }), \"-th column.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If there exists a coin in \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"(r,c)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>r</mi><mo separator=\\\"true\\\">,</mo><mi>c</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(r,c)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \" add an edge from \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"r\\\\to N+c\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi><mo>→</mo><mi>N</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r\\\\to N+c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n        }), \" with capacity\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\infty\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∞</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\infty</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\">∞</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First we find a max flow, which tells us the number of edges with capacity 1 we\\r\\nneed to cut. To find the min cut itself, BFS from the source once more time.\\r\\nEdges \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(a,b)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>a</mi><mo separator=\\\"true\\\">,</mo><mi>b</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(a,b)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" connecting vertices that are reachable from the source\\r\\n(\", _jsx(_components.code, {\n        children: \"lev[a] != -1\"\n      }), \") to vertices that aren't (\", _jsx(_components.code, {\n        children: \"lev[b] == -1\"\n      }), \") are part of the\\r\\nminimum cut. In this case, each of these edges must be of the form \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(0,i)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mn>0</mn><mo separator=\\\"true\\\">,</mo><mi>i</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(0,i)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">0</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" or\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(i+N,2N+1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mi>i</mi><mo>+</mo><mi>N</mi><mo separator=\\\"true\\\">,</mo><mn>2</mn><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">(i+N,2N+1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" for \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\\\\le i\\\\le N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1\\\\le i\\\\le N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \". Each cut edge corresponds to a row or column we\\r\\nremove coins from.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note that edges of the form \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"r\\\\to N+c\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi><mo>→</mo><mi>N</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r\\\\to N+c</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">→</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7667em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">c</span></span></span></span>\"\n      }), \" can't be cut because they have capacity\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\infty\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">∞</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\infty</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord\\\">∞</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"struct Dinic { // flow template\\r\\n\\tusing F = ll; // flow type\\r\\n\\tstruct Edge { int to; F flo, cap; };\\r\\n\\tint N; V<Edge> eds; V<vi> adj;\\r\\n\\tvoid init(int _N) { N = _N; adj.rsz(N), cur.rsz(N); }\\r\\n\\t/// void reset() { trav(e,eds) e.flo = 0; }\\r\\n\\tvoid ae(int u, int v, F cap, F rcap = 0) { assert(min(cap,rcap) >= 0);\\r\\n\\t\\tadj[u].pb(sz(eds)); eds.pb({v,0,cap});\\r\\n\\t\\tadj[v].pb(sz(eds)); eds.pb({u,0,rcap});\\r\\n\\t}\\r\\n\\tvi lev; V<vi::iterator> cur;\\r\\n\\tbool bfs(int s, int t) { // level = shortest distance from source\\r\\n\\t\\tlev = vi(N,-1); F0R(i,N) cur[i] = begin(adj[i]);\\r\\n\\t\\tqueue<int> q({s}); lev[s] = 0;\\r\\n\\t\\twhile (sz(q)) { int u = q.ft; q.pop();\\r\\n\\t\\t\\ttrav(e,adj[u]) { const Edge& E = eds[e];\\r\\n\\t\\t\\t\\tint v = E.to; if (lev[v] < 0 && E.flo < E.cap)\\r\\n\\t\\t\\t\\t\\tq.push(v), lev[v] = lev[u]+1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn lev[t] >= 0;\\r\\n\\t}\\r\\n\\tF dfs(int v, int t, F flo) {\\r\\n\\t\\tif (v == t) return flo;\\r\\n\\t\\tfor (; cur[v] != end(adj[v]); cur[v]++) {\\r\\n\\t\\t\\tEdge& E = eds[*cur[v]];\\r\\n\\t\\t\\tif (lev[E.to]!=lev[v]+1||E.flo==E.cap) continue;\\r\\n\\t\\t\\tF df = dfs(E.to,t,min(flo,E.cap-E.flo));\\r\\n\\t\\t\\tif (df) { E.flo += df; eds[*cur[v]^1].flo -= df;\\r\\n\\t\\t\\t\\treturn df; } // saturated >=1 one edge\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\tF maxFlow(int s, int t) {\\r\\n\\t\\tF tot = 0; while (bfs(s,t)) while (F df =\\r\\n\\t\\t\\tdfs(s,t,numeric_limits<F>::max())) tot += df;\\r\\n\\t\\treturn tot;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nint main() {\\r\\n\\tint n; re(n);\\r\\n\\tDinic D; D.init(2*n+2);\\r\\n\\tF0R(i,n) {\\r\\n\\t\\tD.ae(0,i+1,1);\\r\\n\\t\\tD.ae(i+1+n,2*n+1,1);\\r\\n\\t\\tF0R(j,n) {\\r\\n\\t\\t\\tchar c; re(c);\\r\\n\\t\\t\\tif (c == 'o') D.ae(i+1,j+1+n,MOD); // some big capacity -> not cut\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tps(D.maxFlow(0,2*n+1));\\r\\n\\tD.bfs(0,2*n+1);\\r\\n\\tFOR(i,1,n+1) if (D.lev[i] < 0) ps(1,i); // edge from 0 to i is cut\\r\\n\\tFOR(i,1,n+1) if (D.lev[i+n] >= 0) ps(2,i); // edge from i+n to 2*n+1 is cut\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"minimum-path-covers\",\n      children: [_jsx(_components.a, {\n        href: \"#minimum-path-covers\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Minimum Path Covers\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"pathEx\"\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CPH\",\n        title: \"20.4 - Path Covers\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"brief mentions of node-disjoint and general path covers, Dilworth's theorem\"\n        })\n      }), _jsx(Resource, {\n        source: \"Wikipedia\",\n        title: \"Dilworth's Theorem\",\n        url: \"https://en.wikipedia.org/wiki/Dilworth%27s_theorem#Proof_via_K%C5%91nig's_theorem\",\n        children: _jsx(_components.p, {\n          children: \"proof via Konig's theorem\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---the-wrath-of-kahn\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---the-wrath-of-kahn\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - The Wrath of Kahn\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ignore all vertices of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"G\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\\\"application/x-tex\\\">G</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">G</span></span></span></span>\"\n      }), \" that can never be part of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"S\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\\\"application/x-tex\\\">S</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">S</span></span></span></span>\"\n      }), \". Then our goal is to\\r\\nfind the size of a maximum antichain in the remaining graph, which as mentioned\\r\\nin CPH is just an instance of maximum path cover.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cpp\",\n        children: \"TopoSort<500> T;\\r\\nint n,m;\\r\\nbool link[500][500];\\r\\nvi out[500];\\r\\nDinic<1005> D;\\r\\n\\r\\nint main() {\\r\\n\\tsetIO(); re(n,m);\\r\\n\\tF0R(i,m) {\\r\\n\\t\\tint x,y; re(x,y);\\r\\n\\t\\tT.ae(x,y);\\r\\n\\t\\tlink[x][y] = 1;\\r\\n\\t}\\r\\n\\tF0R(k,n) F0R(a,n) F0R(b,n) link[a][b] |= link[a][k]&link[k][b];\\r\\n\\tT.sort(n);\\r\\n\\tvi bad; F0R(i,n) if (T.in[i]) bad.pb(i); // cannot be part of S\\r\\n\\ttrav(a,bad) F0R(i,n) link[a][i] = link[i][a] = 0;\\r\\n\\tF0R(i,n) {\\r\\n\\t\\tD.ae(2*n,i,1);\\r\\n\\t\\tD.ae(i+n,2*n+1,1);\\r\\n\\t}\\r\\n\\tF0R(i,n) F0R(j,n) if (link[i][j]) D.ae(i,n+j,1);\\r\\n\\tint chain = n-sz(bad)-D.maxFlow(2*n+2,2*n,2*n+1);\\r\\n\\tps(chain);\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"cut\"\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Minimum Cut","author":"Benjamin Qi","contributors":null,"id":"min-cut","prerequisites":["max-flow"],"description":"?","frequency":1},"parent":{"name":"Min_Cut","relativePath":"6_Advanced/Min_Cut.mdx"},"fields":{"division":"adv"},"toc":{"cpp":[{"depth":2,"value":"Resources","slug":"resources"},{"depth":2,"value":"Minimum Node Covers","slug":"minimum-node-covers"},{"depth":3,"value":"Solution - Coin Grid","slug":"solution---coin-grid"},{"depth":2,"value":"Minimum Path Covers","slug":"minimum-path-covers"},{"depth":3,"value":"Solution - The Wrath of Kahn","slug":"solution---the-wrath-of-kahn"},{"depth":2,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Resources","slug":"resources"},{"depth":2,"value":"Minimum Node Covers","slug":"minimum-node-covers"},{"depth":3,"value":"Solution - Coin Grid","slug":"solution---coin-grid"},{"depth":2,"value":"Minimum Path Covers","slug":"minimum-path-covers"},{"depth":3,"value":"Solution - The Wrath of Kahn","slug":"solution---the-wrath-of-kahn"},{"depth":2,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Resources","slug":"resources"},{"depth":2,"value":"Minimum Node Covers","slug":"minimum-node-covers"},{"depth":3,"value":"Solution - Coin Grid","slug":"solution---coin-grid"},{"depth":2,"value":"Minimum Path Covers","slug":"minimum-path-covers"},{"depth":3,"value":"Solution - The Wrath of Kahn","slug":"solution---the-wrath-of-kahn"},{"depth":2,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"minEx","problems":[{"uniqueId":"cses-1709","name":"Coin Grid","url":"https://cses.fi/problemset/task/1709","source":"CSES","difficulty":"Easy","isStarred":false,"tags":[],"solution":null}]},{"listId":"pathEx","problems":[{"uniqueId":"kattis-TheWrathOfKhan","name":"The Wrath of Khan","url":"https://open.kattis.com/problems/thewrathofkahn","source":"Kattis","difficulty":"Hard","isStarred":false,"tags":[],"solution":null}]},{"listId":"cut","problems":[{"uniqueId":"cses-1695","name":"Police Chase","url":"https://cses.fi/problemset/task/1695","source":"CSES","difficulty":"Easy","isStarred":false,"tags":[],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-93","name":"Cow Steeplechase","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=93","source":"Old Gold","difficulty":"Easy","isStarred":false,"tags":["Max Flow"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_steeple.html","sketch":null}},{"uniqueId":"csa-fashion","name":"Fashion","url":"https://csacademy.com/contest/archive/task/fashion","source":"CSA","difficulty":"Normal","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check CSA","labelTooltip":"The editorial tab should be right next to the statement tab.","url":null,"sketch":null}},{"uniqueId":"cf-808F","name":"Card Game","url":"https://codeforces.com/problemset/problem/808/F","source":"CF","difficulty":"Normal","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-1404E","name":"Bricks","url":"https://codeforces.com/contest/1404/problem/E","source":"CF","difficulty":"Normal","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-724E","name":"Goods Transportation","url":"https://codeforces.com/problemset/problem/724/E","source":"CF","difficulty":"Hard","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"ac-ARCEMUL","name":"ARC E - MUL","url":"http://arc085.contest.atcoder.jp/tasks/arc085_c","source":"AC","difficulty":"Hard","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check AC","labelTooltip":"The editorial button is right next to the problem title. If \"there is no editorial yet,\" check the \"Overall Editorial\" PDF below.","url":null,"sketch":null}},{"uniqueId":"fhc-gentrification","name":"Gentrification","url":"https://www.facebook.com/codingcompetitions/hacker-cup/2015/round-3/problems/C","source":"FHC","difficulty":"Hard","isStarred":false,"tags":[],"solution":{"kind":"label","label":"Check FHC","labelTooltip":"There should be a \"Solutions\" tab on the left side of the page.","url":null,"sketch":null}}]}]}},"pageContext":{"id":"min-cut"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}