{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/silver/more-prefix-sums",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"more-prefix-sums\", redirects = [\"/silver/prefix-sums-2\"], title = \"More on Prefix Sums\", author = \"Darren Yao, Neo Wang, Qi Wang\", contributors = \"Jesse Choe, Kevin Sheng, Brad Ma\", description = \"Max subarray sum, prefix sums in two dimensions, and a more complicated example.\", prerequisites = [\"prefix-sums\"], frequency = 2;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    hr: \"hr\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    PrefixSumInteractive: _missingComponent(\"PrefixSumInteractive\"),\n    Warning: _missingComponent(\"Warning\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {HeaderLink, FocusProblem, Spoiler, MATHSPAN, MATHDIV, LanguageSection, CPPSection, JavaSection, PySection, PrefixSumInteractive, Warning, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"max-subarray-sum\",\n      children: [_jsx(_components.a, {\n        href: \"#max-subarray-sum\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Max Subarray Sum\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"maxsum\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---max-subarray-sum\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---max-subarray-sum\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Max Subarray Sum\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"Consider the prefix sum array \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"p\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\\\"application/x-tex\\\">p</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.625em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span></span></span></span>\"\n        }), \". The subarray sum \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"a_i \\\\dots a_{j-1}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i \\\\dots a_{j-1}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7167em;vertical-align:-0.2861em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">…</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mbin mtight\\\">−</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.2861em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n        }), \", where\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"i\\\\leq j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>i</mi><mo>≤</mo><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">i\\\\leq j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \" is \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"p[j]-p[i]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">p[j]-p[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \". Thus, we are looking for the maximum possible value of\\r\\n\", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"p[j]-p[i]\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">p[j]-p[i]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n        }), \" over \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"0 \\\\leq i \\\\leq j \\\\leq N\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">0 \\\\leq i \\\\leq j \\\\leq N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"For a fixed right bound \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \", the maximum subarray sum is\"]\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"p[j]-\\\\min_{i\\\\leq j}{p[i]}\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>≤</mo><mi>j</mi></mrow></munder><mrow><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">p[j]-\\\\min_{i\\\\leq j}{p[i]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.6138em;vertical-align:-0.8638em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6679em;\\\"><span style=\\\"top:-2.3723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">≤</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop\\\">min</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8638em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [\"Thus, we can keep a running minimum to store \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\min\\\\limits_{i\\\\leq j}{p[i]}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>≤</mo><mi>j</mi></mrow></munder><mrow><mi>p</mi><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo></mrow></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\min\\\\limits_{i\\\\leq j}{p[i]}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.6138em;vertical-align:-0.8638em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.6679em;\\\"><span style=\\\"top:-2.3723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">≤</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span><span style=\\\"top:-3em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span><span class=\\\"mop\\\">min</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8638em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">p</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span></span></span></span></span>\"\n        }), \" as we\\r\\niterate through \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"j\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\\\"application/x-tex\\\">j</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span></span></span></span>\"\n        }), \". This yields the maximum subarray sum for each possible\\r\\nright bound, and the maximum over all these values is our answer.\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsxs(CPPSection, {\n          children: [_jsxs(_components.h3, {\n            id: \"c-implementation\",\n            children: [_jsx(_components.a, {\n              href: \"#c-implementation\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"C++ Implementation\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <iostream>\\r\\n#include <vector>\\r\\n#include <algorithm>\\r\\n\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\n\\r\\nint main(){\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\tvector<long long> pfx(n + 1);  // prefix sum array initially filled with 0's\\r\\n\\tfor (int i = 1; i <= n; i++){\\r\\n\\t\\tll x;\\r\\n\\t\\tcin >> x;\\r\\n\\t\\tpfx[i] = pfx[i - 1] + x;  // compute the prefix sum at each element\\r\\n\\t}\\r\\n\\r\\n\\tll max_subarray_sum = pfx[1];\\r\\n\\tll min_prefix_sum = pfx[0];\\r\\n\\tfor (int i = 1; i <= n; i++) {\\r\\n\\t\\t// Max subarray sum is the maximum difference between two prefix sums\\r\\n\\t\\tmax_subarray_sum = max(max_subarray_sum, pfx[i] - min_prefix_sum);\\r\\n\\t\\tmin_prefix_sum = min(min_prefix_sum, pfx[i]);\\r\\n\\t}\\r\\n\\tcout << max_subarray_sum << endl;\\r\\n}\\n\"\n            })\n          })]\n        }), _jsxs(JavaSection, {\n          children: [_jsxs(_components.h3, {\n            id: \"java-implementation\",\n            children: [_jsx(_components.a, {\n              href: \"#java-implementation\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"Java Implementation\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.BufferedReader;\\r\\nimport java.io.IOException;\\r\\nimport java.io.InputStreamReader;\\r\\nimport java.util.Arrays;\\r\\n\\r\\npublic class MaxSubSum {\\r\\n\\tpublic static void main(String[] args) throws IOException {\\r\\n\\t\\tBufferedReader read = new BufferedReader(\\r\\n\\t\\t\\tnew InputStreamReader(System.in)\\r\\n\\t\\t);\\r\\n\\t\\tread.readLine();\\r\\n\\t\\tint[] arr = Arrays.stream(read.readLine().split(\\\" \\\")\\r\\n\\t\\t\\t\\t.mapToInt(Integer::parseInt).toArray();\\r\\n\\r\\n\\t\\tlong maxSubSum = arr[0];\\r\\n\\t\\tlong runningPrefSum = 0;\\r\\n\\t\\tlong minPrefSum = 0;\\r\\n\\t\\tfor (int i : arr) {\\r\\n\\t\\t\\trunningPrefSum += i;\\r\\n\\t\\t\\tmaxSubSum = Math.max(maxSubSum, runningPrefSum - minPrefSum);\\r\\n\\t\\t\\tminPrefSum = Math.min(minPrefSum, runningPrefSum);\\r\\n\\t\\t}\\r\\n\\t\\tSystem.out.println(maxSubSum);\\r\\n\\t}\\r\\n}\\n\"\n            })\n          })]\n        }), _jsxs(PySection, {\n          children: [_jsxs(_components.h3, {\n            id: \"python-implementation\",\n            children: [_jsx(_components.a, {\n              href: \"#python-implementation\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"Python Implementation\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-py\",\n              children: \"size = int(input())\\r\\narr = [int(i) for i in input().split()]\\r\\nassert len(arr) == size\\r\\n\\r\\nmax_subarray_sum = arr[0]\\r\\nmin_pref_sum = 0\\r\\nrunning_pref_sum = 0\\r\\nfor i in arr:\\r\\n\\trunning_pref_sum += i\\r\\n\\tmax_subarray_sum = max(max_subarray_sum, running_pref_sum - min_pref_sum)\\r\\n\\tmin_pref_sum = min(min_pref_sum, running_pref_sum)\\r\\nprint(max_subarray_sum)\\n\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Alternative Solution - Kadane's Algorithm\",\n      children: [_jsxs(_components.p, {\n        children: [\"Note: it is recommended that you \", _jsx(_components.strong, {\n          children: \"disregard\"\n        }), \" this solution since it is not\\r\\nrequired to solve this problem.\"]\n      }), _jsxs(_components.p, {\n        children: [\"Kadane's Algorithm finds the largest subarray sum using a greedy method.\\r\\n\", _jsx(_components.a, {\n          href: \"https://en.wikipedia.org/wiki/Maximum_subarray_problem#Kadane's_algorithm\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Click here for more information\"\n        }), \".\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsxs(CPPSection, {\n          children: [_jsxs(_components.h3, {\n            id: \"c-implementation-1\",\n            children: [_jsx(_components.a, {\n              href: \"#c-implementation-1\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"C++ Implementation\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <iostream>\\r\\n#include <vector>\\r\\n\\r\\nusing namespace std;\\r\\nusing ll = long long;\\r\\n\\r\\nint main() {\\r\\n\\tint n;\\r\\n\\tcin >> n;\\r\\n\\tvector<long long> x(n);\\r\\n\\tfor (int i = 0; i < n; i++){\\r\\n\\t\\tcin >> x[i];\\r\\n\\t}\\r\\n\\tll current_sum = x[0];\\r\\n\\tll max_subarray_sum = x[0];\\r\\n\\tfor (int i = 1; i < n; i++){\\r\\n\\t\\t/*\\r\\n\\t\\t * Continue the subarray sum or start a new\\r\\n\\t\\t * subarray sum beginning at the current element.\\r\\n\\t\\t */\\r\\n\\t\\tcurrent_sum = max(current_sum + x[i], x[i]);\\r\\n\\t\\t// Store the maximum subarray sum at each iteration.\\r\\n\\t\\tmax_subarray_sum = max(max_subarray_sum, current_sum);\\r\\n\\t}\\r\\n\\tcout << max_subarray_sum << endl;\\r\\n}\\n\"\n            })\n          })]\n        }), _jsxs(JavaSection, {\n          children: [_jsxs(_components.h3, {\n            id: \"java-implementation-1\",\n            children: [_jsx(_components.a, {\n              href: \"#java-implementation-1\",\n              \"aria-hidden\": \"true\",\n              tabIndex: \"-1\",\n              className: \"anchor before\",\n              children: _jsx(HeaderLink, {})\n            }), \"Java Implementation\"]\n          }), _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\r\\nimport java.util.*;\\r\\n\\t\\r\\npublic class MaxSubarraySumKadane {\\r\\n\\tpublic static void main (String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\t\\tint n = io.nextInt();\\r\\n\\r\\n\\t\\tlong[] x = new long[n];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < n; i++) { // read input\\r\\n\\t\\t\\tx[i] = io.nextInt();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlong currentSum = x[0];\\r\\n\\t\\tlong maxSubarraySum = x[0];\\r\\n\\r\\n\\t\\tfor (int i = 1; i < n; i++) {\\r\\n\\t\\t\\t/*\\r\\n\\t\\t\\t * Continue the subarray sum or start a new\\r\\n\\t\\t\\t * subarray sum beginning at the current element.\\r\\n\\t\\t\\t */\\r\\n\\t\\t\\tcurrentSum = Math.max(currentSum + x[i], x[i]);\\r\\n\\t\\t\\t// Store the maximum subarray sum at each iteration.\\r\\n\\t\\t\\tmaxSubarraySum = Math.max(maxSubarraySum, currentSum);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tio.println(maxSubarraySum);\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\r\\n\\n\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"2d-prefix-sums\",\n      children: [_jsx(_components.a, {\n        href: \"#2d-prefix-sums\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"2D Prefix Sums\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"sample2\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, what if we wanted to process \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"Q\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\\\"application/x-tex\\\">Q</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">Q</span></span></span></span>\"\n      }), \" queries for the sum over a subrectangle of\\r\\na 2D matrix with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \" rows and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"M\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\\\"application/x-tex\\\">M</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">M</span></span></span></span>\"\n      }), \" columns? Let's assume both rows and columns\\r\\nare 1-indexed, and we use the following matrix as an example:\"]\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"11\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"8\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"7\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"11\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"9\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"7\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Naively, each sum query would then take \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">NM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time, for a total of\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(QNM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>Q</mi><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(QNM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">QNM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". This is too slow.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's take the following example region, which we want to sum:\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"11\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"8\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"7\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"11\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"9\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-blue-100 dark:bg-blue-800\",\n              children: \"3\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"7\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"5\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"3\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Manually summing all the cells, we have a submatrix sum of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"7+11+9+6+1+3 = 37\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>7</mn><mo>+</mo><mn>11</mn><mo>+</mo><mn>9</mn><mo>+</mo><mn>6</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>37</mn></mrow><annotation encoding=\\\"application/x-tex\\\">7+11+9+6+1+3 = 37</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">11</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">9</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">6</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">37</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The first logical optimization would be to do one-dimensional prefix sums of\\r\\neach row. Then, we'd have the following row-prefix sum matrix. The desired\\r\\nsubarray sum of each row in our desired region is simply the green cell minus\\r\\nthe red cell in that respective row. We do this for each row to get\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"(28-1) + (14-4) = 37\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">(</mo><mn>28</mn><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo><mo>+</mo><mo stretchy=\\\"false\\\">(</mo><mn>14</mn><mo>−</mo><mn>4</mn><mo stretchy=\\\"false\\\">)</mo><mo>=</mo><mn>37</mn></mrow><annotation encoding=\\\"application/x-tex\\\">(28-1) + (14-4) = 37</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">28</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">14</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mclose\\\">)</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">37</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"12\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"23\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"31\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-200 dark:bg-red-800\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"8\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"19\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-200 dark:bg-green-800\",\n              children: \"28\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"32\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-200 dark:bg-red-800\",\n              children: \"4\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"10\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"11\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-200 dark:bg-green-800\",\n              children: \"14\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"16\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"7\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"12\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"16\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"18\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"21\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, if we wanted to find a submatrix sum, we could break up the submatrix into\\r\\na subarray for each row, and then add their sums, which would be calculated\\r\\nusing the prefix sums method described earlier. Since the matrix has \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \" rows,\\r\\nthe time complexity of this is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(QN)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>Q</mi><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(QN)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">QN</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \". This might be fast enough for\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"Q=10^5\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>Q</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">Q=10^5</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\">Q</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">5</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N=10^3\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">N=10^3</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">3</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \", but we can do better.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In fact, we can do two-dimensional prefix sums. In our two dimensional prefix\\r\\nsum array, we have\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\texttt{prefix}[a][b]=\\\\sum_{i=1}^{a} \\\\sum_{j=1}^{b} \\\\texttt{arr}[i][j].\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>b</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>b</mi></munderover><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{prefix}[a][b]=\\\\sum_{i=1}^{a} \\\\sum_{j=1}^{b} \\\\texttt{arr}[i][j].</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3.2499em;vertical-align:-1.4138em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.6514em;\\\"><span style=\\\"top:-1.8723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">a</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.2777em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.8361em;\\\"><span style=\\\"top:-1.8723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mtight\\\">1</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">b</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.4138em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This can be calculated as follows for row index \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq i \\\\leq n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq i \\\\leq n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7955em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" and column\\r\\nindex \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq j \\\\leq m\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq j \\\\leq m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.854em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n      }), \":\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\begin{aligned}\\r \\\\texttt{prefix}[i][j] =& \\\\, \\\\texttt{prefix}[i-1][j]+ \\\\texttt{prefix}[i][j-1] \\\\\\\\\\r &- \\\\texttt{prefix}[i-1][j-1]+ \\\\texttt{arr}[i][j]\\r \\\\end{aligned}\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mtable rowspacing=\\\"0.25em\\\" columnalign=\\\"right left\\\" columnspacing=\\\"0em\\\"><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><mrow></mrow><mtext> </mtext><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><mrow></mrow><mo>−</mo><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\\\"application/x-tex\\\">\\\\begin{aligned}\\r \\\\texttt{prefix}[i][j] =&amp; \\\\, \\\\texttt{prefix}[i-1][j]+ \\\\texttt{prefix}[i][j-1] \\\\\\\\\\r &amp;- \\\\texttt{prefix}[i-1][j-1]+ \\\\texttt{arr}[i][j]\\r \\\\end{aligned}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3em;vertical-align:-1.25em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mtable\\\"><span class=\\\"col-align-r\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.75em;\\\"><span style=\\\"top:-3.91em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span></span></span><span style=\\\"top:-2.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord\\\"></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.75em;\\\"><span style=\\\"top:-3.91em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span><span style=\\\"top:-2.41em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.25em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span>\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's calculate \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{prefix}[2][3]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mn>2</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mn>3</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{prefix}[2][3]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">2</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \". Try playing with the interactive widget\\r\\nbelow by clicking the buttons to see which numbers are added in each step.\\r\\nNotice how we overcount a subrectangle, and how we fix this by subtracting\\r\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{prefix}[i-1][j-1]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{prefix}[i-1][j-1]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(PrefixSumInteractive, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The submatrix sum between rows \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\\\"application/x-tex\\\">a</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">a</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"A\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\\\"application/x-tex\\\">A</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\">A</span></span></span></span>\"\n      }), \" and columns \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"b\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\\\"application/x-tex\\\">b</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\">b</span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"B\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\\\"application/x-tex\\\">B</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span>\"\n      }), \", can thus be\\r\\nexpressed as follows:\"]\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"\\\\begin{aligned}\\r \\\\sum_{i=a}^{A} \\\\sum_{j=b}^{B} \\\\texttt{arr}[i][j]=&\\\\,\\\\texttt{prefix}[A][B]\\r - \\\\texttt{prefix}[a-1][B] \\\\\\\\\\r &- \\\\texttt{prefix}[A][b-1] + \\\\texttt{prefix}[a-1][b-1]\\r \\\\end{aligned}\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mtable rowspacing=\\\"0.25em\\\" columnalign=\\\"right left\\\" columnspacing=\\\"0em\\\"><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>a</mi></mrow><mi>A</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>b</mi></mrow><mi>B</mi></munderover><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>j</mi><mo stretchy=\\\"false\\\">]</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><mrow></mrow><mtext> </mtext><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo><mo>−</mo><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\\\"0\\\" displaystyle=\\\"true\\\"><mrow><mrow></mrow><mo>−</mo><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo>+</mo><mtext mathvariant=\\\"monospace\\\">prefix</mtext><mo stretchy=\\\"false\\\">[</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">[</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy=\\\"false\\\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\\\"application/x-tex\\\">\\\\begin{aligned}\\r \\\\sum_{i=a}^{A} \\\\sum_{j=b}^{B} \\\\texttt{arr}[i][j]=&amp;\\\\,\\\\texttt{prefix}[A][B]\\r - \\\\texttt{prefix}[a-1][B] \\\\\\\\\\r &amp;- \\\\texttt{prefix}[A][b-1] + \\\\texttt{prefix}[a-1][b-1]\\r \\\\end{aligned}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:5.0666em;vertical-align:-2.2833em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mtable\\\"><span class=\\\"col-align-r\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.7833em;\\\"><span style=\\\"top:-4.7833em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.8283em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.8283em;\\\"><span style=\\\"top:-1.8723em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mathnormal mtight\\\">a</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">A</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.2777em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.8283em;\\\"><span style=\\\"top:-1.8479em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mord mathnormal mtight\\\">b</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">∑</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.05017em;\\\">B</span></span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.4382em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05724em;\\\">j</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span></span></span><span style=\\\"top:-2.2051em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.8283em;\\\"></span><span class=\\\"mord\\\"></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.2833em;\\\"><span></span></span></span></span></span><span class=\\\"col-align-l\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.7833em;\\\"><span style=\\\"top:-4.7833em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.8283em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span></span></span><span style=\\\"top:-2.2051em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.8283em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">prefix</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">b</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">]</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:2.2833em;\\\"><span></span></span></span></span></span></span></span></span></span></span></span>\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Summing the blue region from above using the 2D prefix sums method, we add the\\r\\nvalue of the green square, subtract the values of the red squares, and then add\\r\\nthe value of the gray square. In this example, we have\"\n    }), \"\\n\", _jsx(MATHDIV, {\n      className: \"math math-display\",\n      latex: \"65-23-6+1 = 37,\",\n      children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mn>65</mn><mo>−</mo><mn>23</mn><mo>−</mo><mn>6</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>37</mn><mo separator=\\\"true\\\">,</mo></mrow><annotation encoding=\\\"application/x-tex\\\">65-23-6+1 = 37,</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">65</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">23</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">−</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">6</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8389em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">37</span><span class=\\\"mpunct\\\">,</span></span></span></span></span>\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"as expected.\"\n    }), \"\\n\", _jsx(\"center\", {\n      children: _jsx(\"table\", {\n        className: \"text-center\",\n        children: _jsxs(\"tbody\", {\n          children: [_jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"0\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-gray-200 dark:bg-gray-700\",\n              children: \"1\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"12\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-200 dark:bg-red-800\",\n              children: \"23\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"31\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"2\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"14\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"31\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"51\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"63\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-red-200 dark:bg-red-800\",\n              children: \"6\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"24\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"42\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              className: \"bg-green-200 dark:bg-green-800\",\n              children: \"65\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"79\"\n            })]\n          }), _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: \"0\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"13\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"36\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"58\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"83\"\n            }), \"\\r\\n\", _jsx(\"td\", {\n              children: \"100\"\n            })]\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Try playing with the interactive widget below by clicking the buttons to see\\r\\nwhich numbers are added in each step.\"\n    }), \"\\n\", _jsx(PrefixSumInteractive, {\n      demo2: true\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since no matter the size of the submatrix we are summing, we only need to access\\r\\nfour values of the 2D prefix sum array, this runs in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(1)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" per query\\r\\nafter an \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(NM)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>M</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(NM)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">NM</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" preprocessing.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---forest-queries\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---forest-queries\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Forest Queries\"]\n    }), \"\\n\", _jsx(Warning, {\n      children: _jsx(_components.p, {\n        children: \"We need to be cautious of off-by-one errors, as intervals can be inclusive,\\r\\nexclusive, 1-indexed, etc.\"\n      })\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <iostream>\\r\\n#include <vector>\\r\\n\\r\\nusing namespace std;\\r\\n\\r\\nconstexpr int MAX_SIDE = 1000;\\r\\nint tree_pref[MAX_SIDE + 1][MAX_SIDE + 1];\\r\\nint forest[MAX_SIDE + 1][MAX_SIDE + 1];\\r\\n\\r\\nint main() {\\r\\n\\tios_base::sync_with_stdio(0);\\r\\n\\tcin.tie(0);\\r\\n\\r\\n\\tint N;\\r\\n\\tint Q;\\r\\n\\tcin >> N >> Q;\\r\\n\\t// read in the initial trees\\r\\n\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\tfor (int j = 0; j < N; j++) {\\r\\n\\t\\t\\tchar a;\\r\\n\\t\\t\\tcin >> a;\\r\\n\\t\\t\\tforest[i + 1][j + 1] += a == '*';\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// build the prefix sum array\\r\\n\\tfor (int i = 1; i <= N; i++) {\\r\\n\\t\\tfor (int j = 1; j <= N; j++) {\\r\\n\\t\\t\\ttree_pref[i][j] = forest[i][j]\\r\\n\\t\\t\\t\\t\\t\\t+ tree_pref[i - 1][j]\\r\\n\\t\\t\\t\\t\\t\\t+ tree_pref[i][j - 1]\\r\\n\\t\\t\\t\\t\\t\\t- tree_pref[i - 1][j - 1];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfor (int q = 0; q < Q; q++) {\\r\\n\\t\\tint x1, x2, y1, y2;\\r\\n\\t\\tcin >> x1 >> y1 >> x2 >> y2;\\r\\n\\t\\tcout << tree_pref[x2][y2]\\r\\n\\t\\t\\t\\t- tree_pref[x1-1][y2]\\r\\n\\t\\t\\t\\t- tree_pref[x2][y1-1]\\r\\n\\t\\t\\t\\t+ tree_pref[x1-1][y1-1] << '\\\\n';\\r\\n\\t}\\r\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\r\\nimport java.util.StringTokenizer;\\r\\n\\r\\npublic class ForestQueries {\\r\\n\\tstatic int N;\\r\\n\\tstatic int Q;\\r\\n\\tstatic int[][] pfx;\\r\\n\\tstatic int[][] arr;\\r\\n\\tpublic static void main(String[] args) {\\r\\n\\t\\tKattio io = new Kattio();\\r\\n\\r\\n\\t\\tN = io.nextInt();\\r\\n\\t\\tQ = io.nextInt();\\r\\n\\r\\n\\t\\tpfx = new int[N+1][N+1];\\r\\n\\t\\tarr = new int[N+1][N+1];\\r\\n\\r\\n\\t\\tfor (int i = 0; i < N; i++) {\\r\\n\\t\\t\\tString line = io.next();\\r\\n\\t\\t\\tfor (int j = 0; j < N; j++) {\\r\\n\\t\\t\\t\\tif (line.charAt(j) == '*') {\\r\\n\\t\\t\\t\\t\\tarr[i + 1][j + 1]++;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 1; i < N + 1; i++) {\\r\\n\\t\\t\\tfor (int j = 1; j < N + 1; j++) {\\r\\n\\t\\t\\t\\tpfx[i][j] = arr[i][j]\\r\\n\\t\\t\\t\\t\\t\\t+ pfx[i-1][j]\\r\\n\\t\\t\\t\\t\\t\\t+ pfx[i][j-1]\\r\\n\\t\\t\\t\\t\\t\\t- pfx[i-1][j-1];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor (int i = 0; i < Q; i++) {\\r\\n\\t\\t\\tint x1 = io.nextInt();\\r\\n\\t\\t\\tint y1 = io.nextInt();\\r\\n\\t\\t\\tint x2 = io.nextInt();\\r\\n\\t\\t\\tint y2 = io.nextInt();\\r\\n\\t\\t\\tio.println(\\r\\n\\t\\t\\t\\t\\tpfx[x2][y2]\\r\\n\\t\\t\\t\\t\\t- pfx[x1-1][y2]\\r\\n\\t\\t\\t\\t\\t- pfx[x2][y1-1]\\r\\n\\t\\t\\t\\t\\t+ pfx[x1-1][y1-1]\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t\\tio.close();\\r\\n\\t}\\r\\n\\r\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"side_len, query_num = [int(i) for i in input().split()]\\r\\ntree_prefixes = [[0 for _ in range(side_len + 1)] for _ in range(side_len + 1)]\\r\\nfor r in range(side_len):\\r\\n\\tfor ci, c in enumerate(input()):\\r\\n\\t\\ttree = c == '*'\\r\\n\\t\\ttree_prefixes[r + 1][ci + 1] += (tree_prefixes[r][ci + 1]\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t + tree_prefixes[r + 1][ci]\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t - tree_prefixes[r][ci]\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t + tree)\\r\\n\\r\\nfor _ in range(query_num):\\r\\n\\tfrom_row, from_col, to_row, to_col = [int(i) for i in input().split()]\\r\\n\\tprint(tree_prefixes[to_row][to_col]\\r\\n\\t\\t  - tree_prefixes[to_row][from_col - 1]\\r\\n\\t\\t  - tree_prefixes[from_row - 1][to_col]\\r\\n\\t\\t  + tree_prefixes[from_row - 1][from_col - 1])\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"cum2\",\n      hideSuggestProblemButton: true\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  redirects,\n  title,\n  author,\n  contributors,\n  description,\n  prerequisites,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"More on Prefix Sums","author":"Darren Yao, Neo Wang, Qi Wang","contributors":"Jesse Choe, Kevin Sheng, Brad Ma","id":"more-prefix-sums","prerequisites":["prefix-sums"],"description":"Max subarray sum, prefix sums in two dimensions, and a more complicated example.","frequency":2},"parent":{"name":"More_Prefix_Sums","relativePath":"3_Silver/More_Prefix_Sums.mdx"},"fields":{"division":"silver"},"toc":{"cpp":[{"depth":2,"value":"Max Subarray Sum","slug":"max-subarray-sum"},{"depth":3,"value":"Solution - Max Subarray Sum","slug":"solution---max-subarray-sum"},{"depth":2,"value":"2D Prefix Sums","slug":"2d-prefix-sums"},{"depth":3,"value":"Solution - Forest Queries","slug":"solution---forest-queries"},{"depth":3,"value":"Problems","slug":"problems"}],"java":[{"depth":2,"value":"Max Subarray Sum","slug":"max-subarray-sum"},{"depth":3,"value":"Solution - Max Subarray Sum","slug":"solution---max-subarray-sum"},{"depth":2,"value":"2D Prefix Sums","slug":"2d-prefix-sums"},{"depth":3,"value":"Solution - Forest Queries","slug":"solution---forest-queries"},{"depth":3,"value":"Problems","slug":"problems"}],"py":[{"depth":2,"value":"Max Subarray Sum","slug":"max-subarray-sum"},{"depth":3,"value":"Solution - Max Subarray Sum","slug":"solution---max-subarray-sum"},{"depth":2,"value":"2D Prefix Sums","slug":"2d-prefix-sums"},{"depth":3,"value":"Solution - Forest Queries","slug":"solution---forest-queries"},{"depth":3,"value":"Problems","slug":"problems"}]}},"moduleProblemLists":{"problemLists":[{"listId":"maxsum","problems":[{"uniqueId":"cses-1643","name":"Max Subarray Sum","url":"https://cses.fi/problemset/task/1643","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Prefix Sums"],"solution":{"kind":"sketch","label":null,"labelTooltip":null,"url":null,"sketch":"Enumerate the right endpoint while maintaining the lowest prefix sum that currently exists to the left"}}]},{"listId":"sample2","problems":[{"uniqueId":"cses-1652","name":"Forest Queries","url":"https://cses.fi/problemset/task/1652","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["2D Prefix Sums"],"solution":{"kind":"link","label":"In Module","labelTooltip":null,"url":"https://usaco.guide/silver/more-prefix-sums#problem-cses-1652","sketch":null}}]},{"listId":"cum2","problems":[{"uniqueId":"usaco-919","name":"Painting the Barn","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=919","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["2D Prefix Sums"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-416","name":"The Lazy Cow","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=416","source":"Old Silver","difficulty":"Easy","isStarred":false,"tags":["2D Prefix Sums"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-1063","name":"Rectangular Pasture","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1063","source":"Silver","difficulty":"Hard","isStarred":false,"tags":["2D Prefix Sums"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_prob2_silver_dec20.html","sketch":null}},{"uniqueId":"usaco-923","name":"Painting the Barn","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=923","source":"Gold","difficulty":"Hard","isStarred":true,"tags":["2D Prefix Sums","Max Subarray Sum"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_paintbarn_gold_feb19.html","sketch":null}},{"uniqueId":"usaco-744","name":"Modern Art","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=744","source":"Plat","difficulty":"Very Hard","isStarred":false,"tags":["2D Prefix Sums"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_art_platinum_open17.html","sketch":null}}]}]}},"pageContext":{"id":"more-prefix-sums"}},
    "staticQueryHashes": ["2753100047","3245546052","745520438"]}