{"version":3,"file":"component---src-templates-syllabus-template-tsx-fef1e93b626efc0d830e.js","mappings":"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","sources":["webpack://usaco-guide/./src/components/Dashboard/DashboardProgress.tsx","webpack://usaco-guide/./src/components/Frequency.tsx","webpack://usaco-guide/./src/components/MarkdownLayout/ModuleFrequencyDots.tsx","webpack://usaco-guide/./src/components/MarkdownLayout/SidebarNav/ItemLink.tsx","webpack://usaco-guide/./src/components/Dashboard/ModuleLink.tsx","webpack://usaco-guide/./src/templates/syllabusTemplate.tsx","webpack://usaco-guide/./src/utils/getProgressInfo.ts","webpack://usaco-guide/./src/utils/utils.ts"],"sourcesContent":["import * as React from 'react';\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nconst ProgressBar = ({ text, green, yellow, blue }) => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"overflow-hidden h-4 text-xs flex bg-gray-200 dark:bg-gray-700\">\r\n        <div\r\n          style={{ width: `${green}%` }}\r\n          className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500 dark:bg-green-800\"\r\n        />\r\n        <div\r\n          style={{ width: `${yellow}%` }}\r\n          className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-yellow-300 dark:bg-yellow-800\"\r\n        />\r\n        <div\r\n          style={{ width: `${blue}%` }}\r\n          className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500 dark:bg-blue-800\"\r\n        />\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <span className=\"text-sm font-semibold inline-block text-gray-800 dark:text-dark-med-emphasis\">\r\n          {text}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FancyNumber = ({ number, text, textColor, bgColor }) => (\r\n  <div className=\"text-center\">\r\n    <span\r\n      className={`text-3xl font-bold ${textColor} ${bgColor} rounded-full h-16 w-16 inline-block inline-flex items-center justify-center`}\r\n    >\r\n      {number}\r\n    </span>\r\n    <span className={`block mt-1 text-sm font-medium uppercase ${textColor}`}>\r\n      {text}\r\n    </span>\r\n  </div>\r\n);\r\n\r\ntype ProgressCounts = {\r\n  completed: number;\r\n  inProgress: number;\r\n  skipped: number;\r\n  notStarted: number;\r\n  total: number;\r\n};\r\n\r\nexport default function DashboardProgress({\r\n  completed,\r\n  inProgress,\r\n  skipped,\r\n  notStarted,\r\n  total,\r\n}: ProgressCounts): JSX.Element {\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-4 gap-2 mb-4\">\r\n        <FancyNumber\r\n          number={completed}\r\n          text=\"Completed\"\r\n          textColor=\"text-green-800 dark:text-green-100\"\r\n          bgColor=\"bg-green-100 dark:bg-green-800\"\r\n        />\r\n        <FancyNumber\r\n          number={inProgress}\r\n          text=\"In Progress\"\r\n          textColor=\"text-yellow-800 dark:text-yellow-100\"\r\n          bgColor=\"bg-yellow-100 dark:bg-yellow-800\"\r\n        />\r\n        <FancyNumber\r\n          number={skipped}\r\n          text=\"Skipped\"\r\n          textColor=\"text-blue-800 dark:text-blue-50\"\r\n          bgColor=\"bg-blue-50 dark:bg-blue-800\"\r\n        />\r\n        <FancyNumber\r\n          number={notStarted}\r\n          text=\"Not Started\"\r\n          textColor=\"text-gray-800 dark:text-gray-100\"\r\n          bgColor=\"bg-gray-100 dark:bg-gray-700\"\r\n        />\r\n      </div>\r\n      <ProgressBar\r\n        green={total === 0 ? 0 : (completed / total) * 100}\r\n        yellow={total === 0 ? 0 : (inProgress / total) * 100}\r\n        blue={total === 0 ? 0 : (skipped / total) * 100}\r\n        text={`${total} total`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProgressBarSmall = ({ className = null, text, green, yellow, blue }) => {\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"inline-block\">\r\n        <div className=\"overflow-hidden h-2 text-xs flex items-center bg-gray-200 rounded-full w-24 dark:bg-gray-700\">\r\n          <div\r\n            style={{ width: `${green}%` }}\r\n            className=\"h-2 bg-green-500 dark:bg-green-800\"\r\n          />\r\n          <div\r\n            style={{ width: `${yellow}%` }}\r\n            className=\"h-2 bg-yellow-300 dark:bg-yellow-800\"\r\n          />\r\n          <div\r\n            style={{ width: `${blue}%` }}\r\n            className=\"h-2 bg-blue-500 dark:bg-blue-800\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {/*  text-gray-800 dark:text-dark-med-emphasis */}\r\n      <div className=\"inline-block ml-1\">\r\n        {text && <span className=\"text-sm font-semibold\">&nbsp;{text}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function DashboardProgressSmall({\r\n  completed,\r\n  inProgress,\r\n  skipped,\r\n  total,\r\n}: ProgressCounts): JSX.Element {\r\n  return (\r\n    <ProgressBarSmall\r\n      text={completed + '/' + total}\r\n      green={total === 0 ? 0 : (completed / total) * 100}\r\n      yellow={total === 0 ? 0 : (inProgress / total) * 100}\r\n      blue={total === 0 ? 0 : (skipped / total) * 100}\r\n    />\r\n  );\r\n}\r\n\r\nexport function UsacoTableProgress({\r\n  completed,\r\n}: {\r\n  completed: number;\r\n}): JSX.Element {\r\n  let is_nan = false;\r\n  if (isNaN(completed)) {\r\n    completed = 0;\r\n    is_nan = true;\r\n  }\r\n  let green = completed * 100;\r\n  let yellow = 0;\r\n  let blue = 0;\r\n  if (green <= 95) {\r\n    yellow = green;\r\n    green = 0;\r\n  }\r\n  if (yellow <= 85) {\r\n    blue = yellow;\r\n    yellow = 0;\r\n  }\r\n  return (\r\n    <Tooltip\r\n      content={\r\n        is_nan\r\n          ? 'No Information Available'\r\n          : `${Math.round(completed * 1000) / 10}%`\r\n      }\r\n    >\r\n      {/* The span wrapper is needed for tippy to work */}\r\n      <span className=\"cursor-pointer\">\r\n        <ProgressBarSmall\r\n          text={''}\r\n          green={green}\r\n          yellow={yellow}\r\n          blue={blue}\r\n          className=\"h-2 inline-flex\"\r\n        />\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { ModuleFrequency } from '../models/module';\r\nimport ModuleFrequencyDots from './MarkdownLayout/ModuleFrequencyDots';\r\nimport TextTooltip from './Tooltip/TextTooltip';\r\n\r\nexport const FrequencyLabels = [\r\n  'Has Not Appeared',\r\n  'Rare',\r\n  'Not Frequent',\r\n  'Somewhat Frequent',\r\n  'Very Frequent',\r\n];\r\nexport const FrequencyTextColors = [\r\n  'text-red-700 dark:text-red-400',\r\n  'text-orange-700 dark:text-orange-400',\r\n  'text-yellow-700 dark:text-yellow-400',\r\n  'text-teal-700 dark:text-teal-400',\r\n  'text-green-700 dark:text-green-400',\r\n];\r\nexport const FrequencyCircleColors = [\r\n  'text-red-600 dark:text-red-400',\r\n  'text-orange-600 dark:text-orange-400',\r\n  'text-yellow-600 dark:text-yellow-400',\r\n  'text-teal-600 dark:text-teal-400',\r\n  'text-green-600 dark:text-green-400',\r\n];\r\nexport const FrequencyHints = [\r\n  'Historically, this module has not appeared in this division before. However, it can still show up in future contests.',\r\n  'Historically, this module has only appeared in this division once or twice.',\r\n  'Historically, this module infrequently appears in this division.',\r\n  'Historically, this module has appeared somewhat frequently for this division.',\r\n  'Historically, this module has been known to appear at least once per contest. However, this does not guarantee that it will show up again in future contests.',\r\n];\r\nexport const Frequency = ({ frequency }: { frequency: ModuleFrequency }) => {\r\n  return (\r\n    <span\r\n      className={`inline-flex items-center font-medium ${FrequencyTextColors[frequency]}`}\r\n    >\r\n      <ModuleFrequencyDots\r\n        count={frequency}\r\n        totalCount={4}\r\n        color={FrequencyCircleColors[frequency]}\r\n      />\r\n      <TextTooltip\r\n        position=\"bottom\"\r\n        content={FrequencyHints[frequency]}\r\n        className=\"ml-1\"\r\n      >\r\n        {FrequencyLabels[frequency]}\r\n      </TextTooltip>\r\n    </span>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nexport default function ModuleFrequencyDots({ count, color, totalCount }) {\r\n  const emptyCircle = 'text-gray-300 dark:text-gray-500';\r\n  return (\r\n    <>\r\n      {new Array(totalCount).fill(null).map((_, idx) => (\r\n        <svg\r\n          className={`mr-0.5 h-2.5 w-2.5 ${idx >= count ? emptyCircle : color}`}\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 8 8\"\r\n          key={idx}\r\n        >\r\n          <circle cx=\"4\" cy=\"4\" r=\"3\" />\r\n        </svg>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport tw from 'twin.macro';\r\nimport MarkdownLayoutContext from '../../../context/MarkdownLayoutContext';\r\nimport UserDataContext from '../../../context/UserDataContext/UserDataContext';\r\nimport { ModuleLinkInfo } from '../../../models/module';\r\n\r\nexport const LinkWithProgress = styled.span`\r\n  ${tw`block relative`}\r\n\r\n  &::after {\r\n    content: '';\r\n    left: 24px;\r\n    top: 18px;\r\n    height: 8px;\r\n    width: 8px;\r\n    position: absolute;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\r\n  }\r\n\r\n  &::after {\r\n    border-radius: 100%;\r\n    ${props => props.dotColorStyle};\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 2px;\r\n    display: block;\r\n    left: 27px;\r\n    top: 0;\r\n    bottom: 0;\r\n    ${props => props.lineColorStyle};\r\n  }\r\n\r\n  // Really weird bug: Single ampersand breaks stuff; double ampersand works\r\n  // This might be a styled-component issue?????\r\n  .dark &&::after {\r\n    ${props => props.darkDotColorStyle};\r\n  }\r\n  .dark &&::before {\r\n    ${props => props.darkLineColorStyle};\r\n  }\r\n\r\n  &:first-of-type::before {\r\n    top: 22px;\r\n  }\r\n\r\n  &:last-of-type::before {\r\n    bottom: calc(100% - 22px);\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.span`\r\n  ${tw`focus:outline-none transition ease-in-out duration-150 hover:text-blue-700 hover:bg-blue-50 focus:bg-blue-100 flex items-center pl-12 pr-4 py-3 text-sm leading-5`}\r\n\r\n  ${({ $textStyle }) => $textStyle}\r\n  .dark && {\r\n    ${tw`hover:bg-gray-900 hover:text-dark-high-emphasis focus:bg-gray-800`}\r\n    ${({ $darkTextStyle }) => $darkTextStyle}\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    left: 24px;\r\n    top: 18px;\r\n    height: 8px;\r\n    width: 8px;\r\n    position: absolute;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\r\n  }\r\n\r\n  &::before {\r\n    transform: ${({ $isActive }) => ($isActive ? 'scale(1)' : 'scale(0.1)')};\r\n    border-radius: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover {\r\n    &::before {\r\n      transform: scale(1);\r\n      ${tw`bg-blue-600`}\r\n    }\r\n  }\r\n\r\n  .dark &:hover {\r\n    &::before {\r\n      ${tw`bg-gray-400`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst ItemLink = ({ link }: { link: ModuleLinkInfo }) => {\r\n  const { activeIDs } = useContext(MarkdownLayoutContext);\r\n  // const isActive = markdownLayoutInfo.id === link.id;\r\n  // console.log(\"WHOOPS\",activeIDs)\r\n  const isActive = activeIDs.includes(link.id);\r\n  const itemRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (isActive) {\r\n      itemRef.current.scrollIntoView({ block: `center` });\r\n    }\r\n  }, [isActive]);\r\n\r\n  const { userProgressOnModules } = useContext(UserDataContext);\r\n  const progress = userProgressOnModules[link.id] || 'Not Started';\r\n\r\n  let lineColorStyle = tw`bg-gray-200`;\r\n  let dotColorStyle = tw`bg-gray-200`;\r\n  let activeTextStyle = tw`text-blue-700 font-medium`;\r\n  let darkLineColorStyle = tw`bg-gray-700`;\r\n  let darkDotColorStyle = tw`bg-gray-700`;\r\n  let darkActiveTextStyle = tw`text-blue-400 font-medium`;\r\n\r\n  if (isActive) {\r\n    lineColorStyle = tw`bg-blue-700`;\r\n    dotColorStyle = tw`bg-blue-700`;\r\n    darkLineColorStyle = tw`bg-blue-400`;\r\n    darkDotColorStyle = tw`bg-blue-400`;\r\n  }\r\n\r\n  if (progress === 'Reading') {\r\n    lineColorStyle = tw`bg-yellow-300`;\r\n    dotColorStyle = tw`bg-yellow-300`;\r\n    darkLineColorStyle = tw`bg-yellow-400`;\r\n    darkDotColorStyle = tw`bg-yellow-400`;\r\n    activeTextStyle = tw`text-yellow-700 font-medium`;\r\n    darkActiveTextStyle = tw`text-yellow-400 font-medium`;\r\n  } else if (progress === 'Practicing') {\r\n    lineColorStyle = tw`bg-orange-400`;\r\n    dotColorStyle = tw`bg-orange-400`;\r\n    darkLineColorStyle = tw`bg-orange-500`;\r\n    darkDotColorStyle = tw`bg-orange-500`;\r\n    activeTextStyle = tw`text-orange-700 font-medium`;\r\n    darkActiveTextStyle = tw`text-orange-400 font-medium`;\r\n  } else if (progress === 'Complete') {\r\n    lineColorStyle = tw`bg-green-400`;\r\n    dotColorStyle = tw`bg-green-400`;\r\n    darkLineColorStyle = tw`bg-green-400`;\r\n    darkDotColorStyle = tw`bg-green-400`;\r\n    activeTextStyle = tw`text-green-700 font-medium`;\r\n    darkActiveTextStyle = tw`text-green-400 font-medium`;\r\n  } else if (progress === 'Skipped') {\r\n    lineColorStyle = tw`bg-blue-300`;\r\n    dotColorStyle = tw`bg-blue-300`;\r\n    darkLineColorStyle = tw`bg-blue-700`;\r\n    darkDotColorStyle = tw`bg-blue-700`;\r\n    activeTextStyle = tw`text-blue-700 font-medium`;\r\n    darkActiveTextStyle = tw`text-blue-400 font-medium`;\r\n  } else if (progress === 'Ignored') {\r\n    lineColorStyle = tw`bg-gray-100`;\r\n    dotColorStyle = tw`bg-gray-100`;\r\n    darkLineColorStyle = tw`bg-gray-800`;\r\n    darkDotColorStyle = tw`bg-gray-800`;\r\n    activeTextStyle = tw`text-gray-400 font-medium`;\r\n    darkActiveTextStyle = tw`text-gray-500 font-medium`;\r\n  }\r\n\r\n  return (\r\n    <LinkWithProgress\r\n      lineColorStyle={lineColorStyle}\r\n      dotColorStyle={dotColorStyle}\r\n      darkLineColorStyle={darkLineColorStyle}\r\n      darkDotColorStyle={darkDotColorStyle}\r\n    >\r\n      <Link to={link.url}>\r\n        <StyledLink\r\n          $isActive={isActive}\r\n          ref={itemRef}\r\n          $textStyle={\r\n            isActive\r\n              ? activeTextStyle\r\n              : progress === 'Ignored'\r\n              ? tw`text-gray-400`\r\n              : tw`text-gray-600`\r\n          }\r\n          $darkTextStyle={\r\n            isActive\r\n              ? darkActiveTextStyle\r\n              : progress === 'Ignored'\r\n              ? tw`text-gray-600`\r\n              : tw`text-dark-med-emphasis`\r\n          }\r\n        >\r\n          {link.title}\r\n        </StyledLink>\r\n      </Link>\r\n    </LinkWithProgress>\r\n  );\r\n};\r\n\r\nexport default ItemLink;\r\n","import { Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport tw from 'twin.macro';\r\nimport UserDataContext from '../../context/UserDataContext/UserDataContext';\r\nimport { ModuleLinkInfo } from '../../models/module';\r\nimport { FrequencyLabels } from '../Frequency';\r\nimport ModuleFrequencyDots from '../MarkdownLayout/ModuleFrequencyDots';\r\nimport { LinkWithProgress as SidebarLinkWithProgress } from '../MarkdownLayout/SidebarNav/ItemLink';\r\n\r\nconst LinkWithProgress = styled(SidebarLinkWithProgress)`\r\n  &&::after {\r\n    ${({ small }) => css`\r\n      // prettier-ignore\r\n      left: calc(-1.75rem - ${small\r\n        ? '8px'\r\n        : '10px'}); // -(3rem padding plus half of width)\r\n      // prettier-ignore\r\n      top: calc(1.5rem - ${small\r\n        ? '8px'\r\n        : '10px'}); // half of (1.5 + 1.5padding) rem minus half of height\r\n      height: ${small ? '16px' : '20px'};\r\n      width: ${small ? '16px' : '20px'};\r\n    `}\r\n\r\n    @media (min-width: 768px) {\r\n      ${({ small }) => css`\r\n        // prettier-ignore\r\n        left: calc(-3rem - ${small\r\n          ? '8px'\r\n          : '10px'}); // -(3rem padding plus half of width)\r\n      `}\r\n    }\r\n  }\r\n\r\n  &&::after {\r\n    ${({ small }) => small && tw`border-2 border-gray-200 bg-white`}\r\n  }\r\n  // lol no clue why two ampersands are needed but they are...\r\n  .dark &&::after {\r\n    ${({ small }) => (small ? tw`border-2 border-gray-500` : tw`border-0`)}\r\n  }\r\n\r\n  &&::before {\r\n    left: calc(-1.75rem - 1px);\r\n    @media (min-width: 768px) {\r\n      left: calc(-3rem - 1px); // -(3rem padding plus half of width)\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.div`\r\n  ${tw`focus:outline-none transition ease-in-out duration-150 text-gray-800 hover:text-blue-700 text-xl leading-6 py-3`}\r\n\r\n  &::before {\r\n    content: '';\r\n    left: calc(-1.75rem - 11px);\r\n    @media (min-width: 768px) {\r\n      left: calc(-3rem - 11px); // -(3rem padding plus half of width)\r\n    }\r\n    top: calc(1.5rem - 11px); // half of 1.5rem minus half of height\r\n    height: 22px;\r\n    width: 22px;\r\n    position: absolute;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\r\n  }\r\n\r\n  &::before {\r\n    transform: ${({ showDot }) => (showDot ? 'scale(1)' : 'scale(0.1)')};\r\n    border-radius: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover {\r\n    &::before {\r\n      transform: scale(1);\r\n      ${tw`bg-blue-600`}\r\n    }\r\n  }\r\n  .dark &:hover {\r\n    &::before {\r\n      ${tw`bg-gray-400`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst FrequencyCircleColors = [\r\n  'group-hover:text-red-600 dark:group-hover:text-red-400',\r\n  'group-hover:text-orange-600 dark:group-hover:text-orange-400',\r\n  'group-hover:text-yellow-600 dark:group-hover:text-yellow-400',\r\n  'group-hover:text-teal-600 dark:group-hover:text-teal-400',\r\n  'group-hover:text-green-600 dark:group-hover:text-green-400',\r\n];\r\n\r\nconst FrequencyTextColors = [\r\n  'group-hover:text-red-700 dark:group-hover:text-red-400',\r\n  'group-hover:text-orange-700 dark:group-hover:text-orange-400',\r\n  'group-hover:text-yellow-700 dark:group-hover:text-yellow-400',\r\n  'group-hover:text-teal-700 dark:group-hover:text-teal-400',\r\n  'group-hover:text-green-700 dark:group-hover:text-green-400',\r\n];\r\n\r\n// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\r\nfunction time_ago(time) {\r\n  switch (typeof time) {\r\n    case 'number':\r\n      break;\r\n    case 'string':\r\n      time = +new Date(time);\r\n      break;\r\n    case 'object':\r\n      if (time.constructor === Date) time = time.getTime();\r\n      break;\r\n    default:\r\n      time = +new Date();\r\n  }\r\n  const time_formats = [\r\n    [60, 'seconds', 1], // 60\r\n    [120, '1 minute ago', '1 minute from now'], // 60*2\r\n    [3600, 'minutes', 60], // 60*60, 60\r\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n    [86400, 'hours', 3600], // 60*60*24, 60*60\r\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n    [58060800000, 'centuries', 2903040000], // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n  ];\r\n  let seconds = (+new Date() - time) / 1000,\r\n    token = 'ago',\r\n    list_choice = 1;\r\n\r\n  if (seconds == 0) {\r\n    return 'Just Now';\r\n  }\r\n  if (seconds < 0) {\r\n    seconds = Math.abs(seconds);\r\n    token = 'from now';\r\n    list_choice = 2;\r\n  }\r\n  if (seconds > 4838400) {\r\n    return '';\r\n  }\r\n  let i = 0,\r\n    format;\r\n  while ((format = time_formats[i++])) {\r\n    if (seconds < format[0]) {\r\n      if (typeof format[2] == 'string') return format[list_choice];\r\n      else {\r\n        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n      }\r\n    }\r\n  }\r\n  return time;\r\n}\r\n\r\nfunction timeAgoString(time): string {\r\n  const res = time_ago(time);\r\n  return res && `Updated: ${res}`;\r\n}\r\n\r\nconst ModuleLink = ({ link }: { link: ModuleLinkInfo }): JSX.Element => {\r\n  const { userProgressOnModules } = useContext(UserDataContext);\r\n  const progress = userProgressOnModules[link.id] || 'Not Started';\r\n\r\n  let lineColorStyle = tw`bg-gray-200`;\r\n  let dotColorStyle = tw`bg-gray-200`;\r\n  let darkLineColorStyle = tw`bg-gray-700`;\r\n  let darkDotColorStyle = tw`bg-gray-700`;\r\n\r\n  if (progress === 'Reading') {\r\n    lineColorStyle = tw`bg-yellow-300`;\r\n    dotColorStyle = tw`bg-yellow-300`;\r\n    darkLineColorStyle = tw`bg-yellow-400`;\r\n    darkDotColorStyle = tw`bg-yellow-400`;\r\n  } else if (progress === 'Practicing') {\r\n    lineColorStyle = tw`bg-orange-400`;\r\n    dotColorStyle = tw`bg-orange-400`;\r\n    darkLineColorStyle = tw`bg-orange-500`;\r\n    darkDotColorStyle = tw`bg-orange-500`;\r\n  } else if (progress === 'Complete') {\r\n    lineColorStyle = tw`bg-green-400`;\r\n    dotColorStyle = tw`bg-green-400`;\r\n    darkLineColorStyle = tw`bg-green-400`;\r\n    darkDotColorStyle = tw`bg-green-400`;\r\n  } else if (progress === 'Skipped') {\r\n    lineColorStyle = tw`bg-blue-300`;\r\n    dotColorStyle = tw`bg-blue-300`;\r\n    darkLineColorStyle = tw`bg-blue-700`;\r\n    darkDotColorStyle = tw`bg-blue-700`;\r\n  } else if (progress === 'Ignored') {\r\n    lineColorStyle = tw`bg-gray-100`;\r\n    dotColorStyle = tw`bg-gray-100`;\r\n    darkLineColorStyle = tw`bg-gray-800`;\r\n    darkDotColorStyle = tw`bg-gray-800`;\r\n  }\r\n\r\n  return (\r\n    <LinkWithProgress\r\n      lineColorStyle={lineColorStyle}\r\n      dotColorStyle={dotColorStyle}\r\n      darkLineColorStyle={darkLineColorStyle}\r\n      darkDotColorStyle={darkDotColorStyle}\r\n      small={progress === 'Not Started' || progress === 'Ignored'}\r\n    >\r\n      <Link to={link.url}>\r\n        <StyledLink className=\"group\">\r\n          <p\r\n            className={`${\r\n              progress === 'Ignored'\r\n                ? 'text-gray-400 dark:text-gray-600'\r\n                : 'text-gray-700 dark:text-gray-400'\r\n            } group-hover:text-blue-800 dark:group-hover:text-dark-high-emphasis transition mb-1 flex items-center`}\r\n          >\r\n            <span className=\"mr-2 inline-flex items-end\">\r\n              {link.title}{' '}\r\n              {link.isIncomplete\r\n                ? null\r\n                : /*\r\n                <Tooltip content=\"This module has incomplete sections. Please help! D:\">\r\n                  <svg\r\n                    className=\"h-5 w-5 text-gray-300 group-hover:text-yellow-300 ml-1.5 transition ease-in-out duration-150\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </Tooltip>\r\n              */\r\n                  null}\r\n            </span>\r\n          </p>\r\n          {link.frequency !== null && (\r\n            <p className=\"text-sm flex items-center leading-4 mb-1\">\r\n              <ModuleFrequencyDots\r\n                count={link.frequency}\r\n                totalCount={4}\r\n                color={\r\n                  'transition text-gray-400 ' +\r\n                  FrequencyCircleColors[link.frequency]\r\n                }\r\n              />\r\n              <span\r\n                className={\r\n                  `ml-1 transition text-gray-500 ` +\r\n                  FrequencyTextColors[link.frequency]\r\n                }\r\n              >\r\n                {FrequencyLabels[link.frequency]}\r\n              </span>\r\n            </p>\r\n          )}\r\n          {/* https://stackoverflow.com/questions/9229213/convert-iso-date-to-milliseconds-in-javascript */}\r\n          <p className=\"block text-sm text-gray-400 group-hover:text-blue-700 dark:group-hover:text-dark-high-emphasis transition leading-5\">\r\n            {link.description}\r\n\r\n            <i>\r\n              <br />\r\n              {timeAgoString(link.gitAuthorTime)}\r\n            </i>\r\n          </p>\r\n        </StyledLink>\r\n      </Link>\r\n    </LinkWithProgress>\r\n  );\r\n};\r\n\r\nexport default ModuleLink;\r\n","import { graphql } from 'gatsby';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport tw from 'twin.macro';\r\nimport {\r\n  moduleIDToSectionMap,\r\n  SectionID,\r\n  SECTION_LABELS,\r\n  SECTION_SEO_DESCRIPTION,\r\n  SECTION_SEO_TITLES,\r\n} from '../../content/ordering';\r\nimport DashboardProgress, {\r\n  DashboardProgressSmall,\r\n} from '../components/Dashboard/DashboardProgress';\r\nimport ModuleLink from '../components/Dashboard/ModuleLink';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport TopNavigationBar from '../components/TopNavigationBar/TopNavigationBar';\r\nimport { ModuleLinkInfo } from '../models/module';\r\n// import UserDataContext from '../context/UserDataContext/UserDataContext';\r\nimport {\r\n  getModulesProgressInfo,\r\n  getProblemsProgressInfo,\r\n} from '../utils/getProgressInfo';\r\nimport { getModulesForDivision } from '../utils/utils';\r\n\r\nconst DottedLineContainer = styled.div`\r\n  ${tw`space-y-6 relative`}\r\n\r\n  @media (min-width: 768px) {\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      width: 2px;\r\n      display: block;\r\n      left: calc(50% - 1px);\r\n      top: 0;\r\n      bottom: 0;\r\n      border-right: 2px dashed;\r\n      ${tw`border-gray-100`}\r\n    }\r\n    .dark &::before {\r\n      ${tw`border-gray-700`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n  ${tw`flex flex-col md:flex-row`}\r\n\r\n  &:hover h2 {\r\n    ${tw`text-gray-600`}\r\n  }\r\n  .dark &:hover h2 {\r\n    ${tw`text-gray-300`}\r\n  }\r\n  &:hover h2 + p {\r\n    ${tw`text-gray-500`}\r\n  }\r\n`;\r\n\r\nconst HeroBGColor: { [key in SectionID]: string } = {\r\n  report: 'bg-blue-700 dark:bg-blue-900',\r\n  general: 'bg-blue-700 dark:bg-blue-900',\r\n  bronze: 'bg-orange-800 dark:bg-orange-900',\r\n  silver: 'bg-teal-700 dark:bg-teal-900',\r\n  gold: 'bg-yellow-700 dark:bg-yellow-900',\r\n  plat: 'bg-purple-700 dark:bg-purple-900',\r\n  adv: 'bg-green-700 dark:bg-green-900',\r\n};\r\n\r\nconst HeroTextColor: { [key in SectionID]: string } = {\r\n  report: 'text-teal-200',\r\n  general: 'text-teal-200',\r\n  bronze: 'text-orange-100',\r\n  silver: 'text-teal-100',\r\n  gold: 'text-yellow-100',\r\n  plat: 'text-purple-100',\r\n  adv: 'text-green-100',\r\n};\r\n\r\nconst topicsWarning = (\r\n  <>\r\n    The topics below are not exhaustive for this division.\r\n    <br />\r\n    Contest problems may contain topics not covered in the guide, or topics\r\n    listed under different divisions!\r\n  </>\r\n);\r\nconst SECTION_DESCRIPTION: { [key in SectionID]: React.ReactNode } = {\r\n  report: topicsWarning,\r\n  general: (\r\n    <>\r\n      You don't have to complete all the modules in this section before moving\r\n      on to Bronze.\r\n      <br />\r\n      Feel free to mark some as \"skipped\" and revisit them at a later time!\r\n    </>\r\n  ),\r\n  bronze: topicsWarning,\r\n  silver: topicsWarning,\r\n  gold: topicsWarning,\r\n  plat: (\r\n    <>\r\n      {topicsWarning}\r\n      <br />\r\n      Some lower-frequency topics are included in \"Advanced.\"\r\n    </>\r\n  ),\r\n  adv: (\r\n    <>\r\n      Some of these topics have not appeared in Platinum and probably never will\r\n      (ex. Matroid Intersection).\r\n      <br />\r\n      Others have appeared in Old Gold or Platinum very infrequently (ex. BCC,\r\n      Suffix Array).\r\n    </>\r\n  ),\r\n};\r\n\r\nexport default function Template(props) {\r\n  const data = props.data;\r\n\r\n  const allModules = data.modules.edges.reduce((acc, cur) => {\r\n    acc[cur.node.frontmatter.id] = cur.node;\r\n    return acc;\r\n  }, {});\r\n\r\n  const { division } = props.pageContext;\r\n\r\n  const section = getModulesForDivision(allModules, division);\r\n\r\n  // const { userProgressOnModules, userProgressOnProblems } = React.useContext(\r\n  //   UserDataContext\r\n  // );\r\n\r\n  const moduleIDs = section.reduce(\r\n    (acc, cur) => [...acc, ...cur.items.map(x => x.frontmatter.id)],\r\n    []\r\n  );\r\n  const moduleProgressInfo = getModulesProgressInfo(moduleIDs);\r\n  const problemIDs = data.problems.edges.map(x => x.node.uniqueId);\r\n  const problemsProgressInfo = getProblemsProgressInfo(problemIDs);\r\n\r\n  const progressBarForCategory = category => {\r\n    const categoryModuleIDs = category.items.map(\r\n      module => module.frontmatter.id\r\n    );\r\n    const categoryProblemIDs = data.problems.edges\r\n      .filter(x => categoryModuleIDs.includes(x.node.module.frontmatter.id))\r\n      .map(x => x.node.uniqueId);\r\n    const problemsProgressInfo = getProblemsProgressInfo(categoryProblemIDs);\r\n    return (\r\n      categoryProblemIDs.length > 1 && (\r\n        <DashboardProgressSmall\r\n          {...problemsProgressInfo}\r\n          total={categoryProblemIDs.length}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={SECTION_SEO_TITLES[division]}\r\n        description={SECTION_SEO_DESCRIPTION[division]}\r\n      />\r\n      <div className=\"min-h-screen\">\r\n        <TopNavigationBar currentSection={division} />\r\n\r\n        <main>\r\n          <div className={`${HeroBGColor[division]} py-12 sm:py-16`}>\r\n            <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n              <h1 className=\"mb-6 text-white text-5xl tracking-tight leading-10 font-black text-white sm:leading-none md:text-6xl text-center\">\r\n                {SECTION_LABELS[division]}\r\n              </h1>\r\n              <p\r\n                className={`${HeroTextColor[division]} text-center mb-8 sm:mb-12 px-4`}\r\n              >\r\n                {SECTION_DESCRIPTION[division]}\r\n              </p>\r\n              <div className=\"grid max-w-2xl mx-auto lg:max-w-full lg:grid-cols-2 gap-8\">\r\n                <div className=\"bg-white dark:bg-gray-900 shadow sm:rounded-lg\">\r\n                  <div className=\"px-4 py-5 sm:p-6\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-dark-high-emphasis\">\r\n                      Modules Progress\r\n                    </h3>\r\n                    <div className=\"mt-6\">\r\n                      <DashboardProgress\r\n                        {...moduleProgressInfo}\r\n                        total={moduleIDs.length}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-white dark:bg-gray-900 shadow sm:rounded-lg\">\r\n                  <div className=\"px-4 py-5 sm:p-6\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-dark-high-emphasis\">\r\n                      Problems Progress\r\n                    </h3>\r\n                    <div className=\"mt-6\">\r\n                      <DashboardProgress\r\n                        {...problemsProgressInfo}\r\n                        total={problemIDs.length}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <DottedLineContainer className=\"py-12 px-4 max-w-screen-xl mx-auto\">\r\n            {section.map(category => (\r\n              <SectionContainer key={category.name}>\r\n                <div className=\"flex-1 md:text-right pr-12 group\">\r\n                  <h2 className=\"text-2xl font-semibold leading-6 py-3 text-gray-500 dark:text-dark-med-emphasis group-hover:text-gray-800 dark:group-hover:text-dark-high-emphasis transition\">\r\n                    {category.name}\r\n                  </h2>\r\n                  <div className=\"leading-6 py-3 text-gray-500 dark:text-dark-med-emphasis group-hover:text-gray-800 dark:group-hover:text-dark-high-emphasis transition\">\r\n                    {progressBarForCategory(category)}\r\n                  </div>\r\n                  <p className=\"md:max-w-sm md:ml-auto text-gray-400 dark:text-gray-500 dark:group-hover:text-dark-med-emphasis group-hover:text-gray-600 transition\">\r\n                    {category.description}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex-1 pl-12\">\r\n                  {category.items.map(item => (\r\n                    <ModuleLink\r\n                      key={item.frontmatter.id}\r\n                      link={\r\n                        new ModuleLinkInfo(\r\n                          item.frontmatter.id,\r\n                          moduleIDToSectionMap[item.frontmatter.id],\r\n                          item.frontmatter.title,\r\n                          item.frontmatter.description,\r\n                          item.frontmatter.frequency,\r\n                          item.isIncomplete,\r\n                          [],\r\n                          'None'\r\n                        )\r\n                      }\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </SectionContainer>\r\n            ))}\r\n          </DottedLineContainer>\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\nexport const pageQuery = graphql`\r\n  query ($division: String!) {\r\n    modules: allXdm(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/content/\" }\r\n        fields: { division: { eq: $division } }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            id\r\n            description\r\n            frequency\r\n          }\r\n          isIncomplete\r\n        }\r\n      }\r\n    }\r\n    problems: allProblemInfo(\r\n      filter: { module: { fields: { division: { eq: $division } } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          uniqueId\r\n          name\r\n          module {\r\n            frontmatter {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useContext } from 'react';\r\nimport UserDataContext from '../context/UserDataContext/UserDataContext';\r\n// import { ProblemProgress } from '../models/problem';\r\n// import { ModuleProgress } from '../models/module';\r\n\r\nconst getProgressInfo = (\r\n  keys: string[],\r\n  data: { [key: string]: string },\r\n  completedValues: string[],\r\n  inProgressValues: string[],\r\n  skippedValues: string[],\r\n  notStartedValues: string[]\r\n) => {\r\n  const res = {\r\n    completed: 0,\r\n    inProgress: 0,\r\n    skipped: 0,\r\n    notStarted: 0,\r\n  };\r\n  for (const key of keys) {\r\n    if (!(key in data)) res.notStarted++;\r\n    else if (completedValues.includes(data[key])) res.completed++;\r\n    else if (inProgressValues.includes(data[key])) res.inProgress++;\r\n    else if (skippedValues.includes(data[key])) res.skipped++;\r\n    else if (notStartedValues.includes(data[key])) res.notStarted++;\r\n    // otherwise ignored\r\n  }\r\n  return res;\r\n};\r\n\r\nexport function getModulesProgressInfo(moduleIDs: string[]) {\r\n  const { userProgressOnModules } = useContext(UserDataContext);\r\n  return getProgressInfo(\r\n    moduleIDs,\r\n    userProgressOnModules,\r\n    ['Complete'],\r\n    ['Reading', 'Practicing'],\r\n    ['Skipped'],\r\n    ['Not Started']\r\n  );\r\n}\r\n\r\nexport function getProblemsProgressInfo(problemIDs: string[]) {\r\n  const { userProgressOnProblems } = useContext(UserDataContext);\r\n  return getProgressInfo(\r\n    problemIDs,\r\n    userProgressOnProblems,\r\n    ['Solved', 'Reviewing'],\r\n    ['Solving'],\r\n    ['Skipped'],\r\n    ['Not Attempted']\r\n  );\r\n}\r\n","import MODULE_ORDERING from '../../content/ordering';\r\nimport { ModuleInfo } from '../models/module';\r\n\r\nexport const getModulesForDivision = (allModules, division) => {\r\n  return MODULE_ORDERING[division].map(k => {\r\n    // rip spaghetti code, clean this up\r\n    if (typeof k === 'object') {\r\n      return {\r\n        name: k.name,\r\n        items: k.items.map(k2 => {\r\n          if (!allModules.hasOwnProperty(k2)) {\r\n            throw 'Module not found: ' + k2;\r\n          }\r\n          return {\r\n            ...allModules[k2 as string],\r\n            slug: `/${division}/${allModules[k2 as string].frontmatter.id}`,\r\n          };\r\n        }),\r\n        description: k.description,\r\n      };\r\n    } else {\r\n      if (!allModules.hasOwnProperty(k)) {\r\n        throw 'Module not found: ' + k;\r\n      }\r\n      return {\r\n        ...allModules[k],\r\n        slug: `/${division}/${allModules[k].frontmatter.id}`,\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport function graphqlToModuleInfo(mdx: any): ModuleInfo {\r\n  return new ModuleInfo(\r\n    mdx.frontmatter.id,\r\n    mdx.fields.division,\r\n    mdx.frontmatter.title,\r\n    mdx.body,\r\n    mdx.frontmatter.author,\r\n    mdx.frontmatter.contributors,\r\n    mdx.frontmatter.prerequisites,\r\n    mdx.frontmatter.description,\r\n    mdx.frontmatter.frequency,\r\n    mdx.toc,\r\n    mdx.parent.relativePath,\r\n    mdx.fields.gitAuthorTime\r\n  );\r\n}\r\n"],"names":["ProgressBar","text","green","yellow","blue","className","style","width","FancyNumber","number","textColor","bgColor","DashboardProgress","completed","inProgress","skipped","notStarted","total","ProgressBarSmall","DashboardProgressSmall","UsacoTableProgress","is_nan","isNaN","content","Math","round","FrequencyLabels","FrequencyTextColors","FrequencyCircleColors","FrequencyHints","Frequency","frequency","count","totalCount","color","position","ModuleFrequencyDots","Array","fill","map","_","idx","viewBox","key","cx","cy","r","LinkWithProgress","styled","props","dotColorStyle","lineColorStyle","darkDotColorStyle","darkLineColorStyle","StyledLink","$textStyle","$darkTextStyle","$isActive","link","isActive","useContext","MarkdownLayoutContext","activeIDs","includes","id","itemRef","React","current","scrollIntoView","block","progress","UserDataContext","userProgressOnModules","activeTextStyle","darkActiveTextStyle","Link","to","url","ref","title","SidebarLinkWithProgress","small","css","showDot","timeAgoString","time","res","Date","constructor","getTime","time_formats","seconds","token","list_choice","abs","format","i","floor","time_ago","isIncomplete","description","gitAuthorTime","DottedLineContainer","SectionContainer","HeroBGColor","report","general","bronze","silver","gold","plat","adv","HeroTextColor","topicsWarning","SECTION_DESCRIPTION","Template","data","allModules","modules","edges","reduce","acc","cur","node","frontmatter","division","pageContext","section","getModulesForDivision","moduleIDs","items","x","moduleProgressInfo","getModulesProgressInfo","problemIDs","problems","uniqueId","problemsProgressInfo","getProblemsProgressInfo","SECTION_SEO_TITLES","SECTION_SEO_DESCRIPTION","TopNavigationBar","currentSection","SECTION_LABELS","length","category","name","categoryModuleIDs","module","categoryProblemIDs","filter","progressBarForCategory","item","ModuleLinkInfo","moduleIDToSectionMap","getProgressInfo","keys","completedValues","inProgressValues","skippedValues","notStartedValues","userProgressOnProblems","MODULE_ORDERING","k","k2","hasOwnProperty","slug","graphqlToModuleInfo","mdx","ModuleInfo","fields","body","author","contributors","prerequisites","toc","parent","relativePath"],"sourceRoot":""}