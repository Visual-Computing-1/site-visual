{"version":3,"file":"component---src-templates-module-template-tsx-b8a561103f0da3da9492.js","mappings":"0RAce,SAASA,EAASC,GAC/B,MAAoCA,EAAMC,KAAlCC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,mBACLC,EAASF,EAATE,KACFC,EAASC,EAAAA,SAAc,kBAAMC,EAAAA,EAAAA,GAAoBL,KAAM,CAACA,IAC9D,GAA0CM,EAAAA,EAAAA,YAAWC,EAAAA,GAA7CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,oBAoBlB,OAnBAL,EAAAA,WAAgB,WACdK,EAAoBN,EAAOO,MAC1B,KAEHC,EAAAA,EAAAA,YAAU,WAER,IAAQC,EAASC,SAATD,KACHA,GACLE,OAAOC,uBAAsB,WAC3B,IACE,IACMC,EADSC,SAASC,eAAeN,EAAKO,UAAU,IAChCC,wBAAwBC,IAAMP,OAAOQ,QAC3DR,OAAOS,OAAO,CAAEF,IAAKL,EAAQQ,KAAM,IACnC,MAAOC,GACPC,QAAQC,MAAMF,SAGjB,CAACjB,IAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKoB,MAAK,GAAKzB,EAAOyB,MAASC,YAAa1B,EAAO0B,cACnD,gBAAC,IAAD,KACE,0BAAQC,KAAK,uBAAb,qYAYiBC,EAAAA,GAAe5B,EAAO6B,SAZvC,kDAaqC7B,EAAO6B,QAb5C,gHAiBiB7B,EAAOyB,MAjBxB,kDAkBqCzB,EAAO6B,QAlB5C,IAkBuD7B,EAAOO,GAlB9D,6CAwBF,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEuB,OAAOhC,MAAAA,OAAA,EAAAA,EAAoBiC,eAAgB,IAE3C,gBAAC,IAAD,CAAgBC,aAAchC,GAC5B,uBAAKiC,UAAU,QACb,gBAAC,IAAD,CAAUlC,KAAMA,W,uGCrEjBmC,EAAwB,SAACC,EAAYC,GAChD,OAAOC,EAAAA,GAAgBD,GAAUE,KAAI,SAAAC,GAEnC,GAAiB,iBAANA,EACT,MAAO,CACLC,KAAMD,EAAEC,KACRC,MAAOF,EAAEE,MAAMH,KAAI,SAAAI,GACjB,IAAKP,EAAWQ,eAAeD,GAC7B,KAAM,qBAAuBA,EAE/B,OAAO,OAAP,UACKP,EAAWO,GADhB,CAEEE,KAAK,IAAKR,EAAN,IAAkBD,EAAWO,GAAcG,YAAYtC,QAG/DmB,YAAaa,EAAEb,aAGjB,IAAKS,EAAWQ,eAAeJ,GAC7B,KAAM,qBAAuBA,EAE/B,OAAO,OAAP,UACKJ,EAAWI,GADhB,CAEEK,KAAK,IAAKR,EAAN,IAAkBD,EAAWI,GAAGM,YAAYtC,SAMjD,SAASL,EAAoB4C,GAClC,OAAO,IAAIC,EAAAA,GACTD,EAAID,YAAYtC,GAChBuC,EAAIE,OAAOZ,SACXU,EAAID,YAAYpB,MAChBqB,EAAI/C,KACJ+C,EAAID,YAAYI,OAChBH,EAAID,YAAYK,aAChBJ,EAAID,YAAYM,cAChBL,EAAID,YAAYnB,YAChBoB,EAAID,YAAYO,UAChBN,EAAIO,IACJP,EAAIQ,OAAOC,aACXT,EAAIE,OAAOQ","sources":["webpack://usaco-guide/./src/templates/moduleTemplate.tsx","webpack://usaco-guide/./src/utils/utils.ts"],"sourcesContent":["import { graphql } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { SECTION_LABELS } from '../../content/ordering';\r\nimport Layout from '../components/layout';\r\nimport Markdown from '../components/markdown/Markdown';\r\nimport MarkdownLayout from '../components/MarkdownLayout/MarkdownLayout';\r\nimport SEO from '../components/seo';\r\nimport { ConfettiProvider } from '../context/ConfettiContext';\r\nimport { MarkdownProblemListsProvider } from '../context/MarkdownProblemListsContext';\r\nimport UserDataContext from '../context/UserDataContext/UserDataContext';\r\nimport { graphqlToModuleInfo } from '../utils/utils';\r\n\r\nexport default function Template(props): JSX.Element {\r\n  const { xdm, moduleProblemLists } = props.data; // data.markdownRemark holds your post data\r\n  const { body } = xdm;\r\n  const module = React.useMemo(() => graphqlToModuleInfo(xdm), [xdm]);\r\n  const { isLoaded, setLastViewedModule } = useContext(UserDataContext);\r\n  React.useEffect(() => {\r\n    setLastViewedModule(module.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // source: https://miguelpiedrafita.com/snippets/scrollToHash\r\n    const { hash } = location;\r\n    if (!hash) return;\r\n    window.requestAnimationFrame(() => {\r\n      try {\r\n        const anchor = document.getElementById(hash.substring(1));\r\n        const offset = anchor.getBoundingClientRect().top + window.scrollY;\r\n        window.scroll({ top: offset, left: 0 });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }, [isLoaded]);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`${module.title}`} description={module.description} />\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">{`\r\n          {\r\n            \"@context\": \"https://schema.org\",\r\n            \"@type\": \"BreadcrumbList\",\r\n            \"itemListElement\": [{\r\n              \"@type\": \"ListItem\",\r\n              \"position\": 1,\r\n              \"name\": \"Home\",\r\n              \"item\": \"https://usaco.guide/\"\r\n            },{\r\n              \"@type\": \"ListItem\",\r\n              \"position\": 2,\r\n              \"name\": \"${SECTION_LABELS[module.section]}\",\r\n              \"item\": \"https://usaco.guide/${module.section}\"\r\n            },{\r\n              \"@type\": \"ListItem\",\r\n              \"position\": 3,\r\n              \"name\": \"${module.title}\",\r\n              \"item\": \"https://usaco.guide/${module.section}/${module.id}\"\r\n            }]\r\n          }\r\n        `}</script>\r\n      </Helmet>\r\n\r\n      <ConfettiProvider>\r\n        <MarkdownProblemListsProvider\r\n          value={moduleProblemLists?.problemLists || []}\r\n        >\r\n          <MarkdownLayout markdownData={module}>\r\n            <div className=\"py-4\">\r\n              <Markdown body={body} />\r\n            </div>\r\n          </MarkdownLayout>\r\n        </MarkdownProblemListsProvider>\r\n      </ConfettiProvider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    xdm(frontmatter: { id: { eq: $id } }) {\r\n      body\r\n      frontmatter {\r\n        title\r\n        author\r\n        contributors\r\n        id\r\n        prerequisites\r\n        description\r\n        frequency\r\n      }\r\n      parent {\r\n        ... on File {\r\n          name\r\n          relativePath\r\n        }\r\n      }\r\n      fields {\r\n        division\r\n      }\r\n      toc {\r\n        cpp {\r\n          depth\r\n          value\r\n          slug\r\n        }\r\n        java {\r\n          depth\r\n          value\r\n          slug\r\n        }\r\n        py {\r\n          depth\r\n          value\r\n          slug\r\n        }\r\n      }\r\n    }\r\n    moduleProblemLists(moduleId: { eq: $id }) {\r\n      problemLists {\r\n        listId\r\n        problems {\r\n          uniqueId\r\n          name\r\n          url\r\n          source\r\n          difficulty\r\n          isStarred\r\n          tags\r\n          solution {\r\n            kind\r\n            label\r\n            labelTooltip\r\n            url\r\n            sketch\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import MODULE_ORDERING from '../../content/ordering';\r\nimport { ModuleInfo } from '../models/module';\r\n\r\nexport const getModulesForDivision = (allModules, division) => {\r\n  return MODULE_ORDERING[division].map(k => {\r\n    // rip spaghetti code, clean this up\r\n    if (typeof k === 'object') {\r\n      return {\r\n        name: k.name,\r\n        items: k.items.map(k2 => {\r\n          if (!allModules.hasOwnProperty(k2)) {\r\n            throw 'Module not found: ' + k2;\r\n          }\r\n          return {\r\n            ...allModules[k2 as string],\r\n            slug: `/${division}/${allModules[k2 as string].frontmatter.id}`,\r\n          };\r\n        }),\r\n        description: k.description,\r\n      };\r\n    } else {\r\n      if (!allModules.hasOwnProperty(k)) {\r\n        throw 'Module not found: ' + k;\r\n      }\r\n      return {\r\n        ...allModules[k],\r\n        slug: `/${division}/${allModules[k].frontmatter.id}`,\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport function graphqlToModuleInfo(mdx: any): ModuleInfo {\r\n  return new ModuleInfo(\r\n    mdx.frontmatter.id,\r\n    mdx.fields.division,\r\n    mdx.frontmatter.title,\r\n    mdx.body,\r\n    mdx.frontmatter.author,\r\n    mdx.frontmatter.contributors,\r\n    mdx.frontmatter.prerequisites,\r\n    mdx.frontmatter.description,\r\n    mdx.frontmatter.frequency,\r\n    mdx.toc,\r\n    mdx.parent.relativePath,\r\n    mdx.fields.gitAuthorTime\r\n  );\r\n}\r\n"],"names":["Template","props","data","xdm","moduleProblemLists","body","module","React","graphqlToModuleInfo","useContext","UserDataContext","isLoaded","setLastViewedModule","id","useEffect","hash","location","window","requestAnimationFrame","offset","document","getElementById","substring","getBoundingClientRect","top","scrollY","scroll","left","e","console","error","title","description","type","SECTION_LABELS","section","value","problemLists","markdownData","className","getModulesForDivision","allModules","division","MODULE_ORDERING","map","k","name","items","k2","hasOwnProperty","slug","frontmatter","mdx","ModuleInfo","fields","author","contributors","prerequisites","frequency","toc","parent","relativePath","gitAuthorTime"],"sourceRoot":""}