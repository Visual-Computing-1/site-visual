{"version":3,"file":"0b912d3c003c5e3f96c7d3efbad8c236a66fdd7a-84c23a8b3b3cf8330409.js","mappings":"mGAAA,IAAIA,EAAQ,EAAQ,OAEpBC,EAAOC,QAAUC,EACjB,IAAIC,EAAMC,OAAOC,eAEjB,SAASH,IAEP,KADWI,gBACWJ,GAAa,OAAO,IAAIA,EADnCI,KAENC,QAiCP,SAASC,EAAQC,EAAQC,GACvB,MAAsB,iBAAXD,EAA4B,IAClCC,IAAcD,EAASA,EAAOE,eAC5BF,EAAOG,QAAQb,EAAO,IAAIa,QAAQ,KAAM,MA1BjDV,EAAWW,UAAUC,KAAO,SAAUC,EAAOL,GAK3C,IAJA,IAAIM,EAAOV,KACPQ,EAAON,EAAQO,GAAwB,IAAjBL,GACtBO,EAAeH,EAEZX,EAAIe,KAAKF,EAAKG,YAAaL,IAChCE,EAAKG,YAAYF,KACjBH,EAAOG,EAAe,IAAMD,EAAKG,YAAYF,GAI/C,OADAD,EAAKG,YAAYL,GAAQ,EAClBA,GAQTZ,EAAWW,UAAUN,MAAQ,WAC3BD,KAAKa,YAAcf,OAAOgB,OAAO,OASnClB,EAAWY,KAAON,G,kBC5ClBR,EAAOC,QAAU,4xP,iCCHjB,KACEoB,IAAK,CACH,EAAK,EACL,IAAO,EACP,IAAO,EACP,IAAO,EACP,IAAO,EACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,IAERC,KAAM,CACJ,EAAK,EACL,IAAO,EACP,IAAO,EACP,IAAO,EACP,IAAO,EACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,GACN,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,GAAM,IAERC,IAAK,CACH,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,IACP,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,KAEVC,KAAM,CACJ,EAAK,GACL,IAAO,GACP,IAAO,GACP,QAAS,GACT,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,OAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,EAAK,GACL,IAAO,GACP,QAAS,GACT,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,GACP,QAAS,GACT,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,OAAQ,GACR,KAAQ,GACR,EAAK,GACL,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,IACP,QAAS,IACT,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,KAAQ,IACR,KAAQ,IACR,SAAU,IACV,SAAU,IACV,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,GAAM,IACN,KAAQ,IACR,SAAU,IACV,SAAU,IACV,KAAQ,IACR,SAAU,IACV,SAAU,KAEZC,IAAK,CACH,EAAK,GACL,IAAO,GACP,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,GACP,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,QAAS,GACT,QAAS,GACT,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,QAAS,GACT,QAAS,GACT,IAAO,GACP,QAAS,GACT,IAAO,GACP,QAAS,GACT,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,GACP,EAAK,GACL,IAAO,GACP,IAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,OAAQ,IACR,EAAK,IACL,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,IAAO,IACP,EAAK,IACL,IAAO,IACP,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,IAAO,O,iCC7mBX,KACE,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,iCACR,KAAQ,iCACR,KAAQ,iCACR,KAAQ,6BACR,KAAQ,6BACR,KAAQ,6BACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,gCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,8BACR,KAAQ,uCACR,KAAQ,oCACR,KAAQ,kCACR,KAAQ,+BACR,KAAQ,8BACR,KAAQ,gCACR,KAAQ,iCACR,KAAQ,gCACR,KAAQ,8BACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,iCACR,KAAQ,gCACR,KAAQ,oCACR,KAAQ,+BACR,KAAQ,+BACR,KAAQ,2BACR,KAAQ,4BACR,KAAQ,6BACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,6BACR,IAAO,+BACP,IAAO,iCACP,IAAO,kCACP,IAAO,2BACP,IAAO,+BACP,IAAO,6BACP,IAAO,gCACP,IAAO,6BACP,IAAO,iCACP,IAAO,6BACP,IAAO,8BACP,IAAO,6BACP,IAAO,mCACP,IAAO,kCACP,IAAO,oCACP,IAAO,2BACP,IAAO,iCACP,IAAO,8BACP,IAAO,gCACP,IAAO,iCACP,IAAO,mCACP,IAAO,mCACP,IAAO,iCACP,IAAO,+BACP,IAAO,iCACP,IAAO,kCACP,IAAO,mCACP,IAAO,8BACP,IAAO,4BACP,IAAO,+BACP,IAAO,iCACP,IAAO,iCACP,IAAO,mCACP,IAAO,iCACP,IAAO,iCACP,IAAO,mCACP,IAAO,kCACP,IAAO,qCACP,IAAO,iCACP,IAAO,8BACP,IAAO,6BACP,IAAO,gCACP,IAAO,gCACP,IAAO,kCACP,IAAO,mCACP,IAAO,gCACP,IAAO,mCACP,IAAO,gCACP,IAAO,wCACP,IAAO,mCACP,IAAO,oCACP,IAAO,6BACP,IAAO,6BACP,IAAO,+BACP,IAAO,iCACP,IAAO,kCACP,IAAO,kCACP,IAAO,8BACP,IAAO,+BACP,IAAO,8BACP,IAAO,kCACP,IAAO,gCACP,IAAO,oCACP,IAAO,6BACP,IAAO,oCACP,IAAO,+BACP,IAAO,mCACP,IAAO,oCACP,IAAO,mCACP,IAAO,gCACP,IAAO,8BACP,IAAO,kCACP,IAAO,gCACP,IAAO,iCACP,IAAO,mCACP,IAAO,4BACP,IAAO,iCACP,IAAO,8BACP,IAAO,8BACP,IAAO,kCACP,IAAO,kCACP,IAAO,8BACP,IAAO,mCACP,IAAO,gCACP,IAAO,oCACP,IAAO,kCACP,IAAO,mCACP,IAAO,gCACP,IAAO,kCACP,IAAO,6BACP,IAAO,kCACP,IAAO,kCACP,IAAO,iCACP,IAAO,iCACP,IAAO,iCACP,IAAO,+BACP,IAAO,qCACP,IAAO,kCACP,IAAO,qCACP,IAAO,8BACP,IAAO,8BACP,IAAO,gCACP,IAAO,mCACP,IAAO,+BACP,IAAO,gCACP,IAAO,kCACP,IAAO,mCACP,IAAO,mCACP,IAAO,sCACP,IAAO,mCACP,IAAO,iCACP,IAAO,6BACP,IAAO,mCACP,IAAO,+BACP,IAAO,iCACP,IAAO,oCACP,IAAO,gCACP,IAAO,kCACP,IAAO,gCACP,IAAO,oCACP,IAAO,+BACP,IAAO,iCACP,IAAO,oCACP,IAAO,iCACP,IAAO,4BACP,IAAO,gCACP,IAAO,mCACP,IAAO,+BACP,IAAO,iCACP,IAAO,mCACP,IAAO,6BACP,IAAO,mCACP,IAAO,kCACP,IAAO,sCACP,IAAO,8BACP,IAAO,8BACP,IAAO,kCACP,IAAO,kCACP,IAAO,iCACP,IAAO,mCACP,IAAO,kCACP,IAAO,oCACP,IAAO,iCACP,IAAO,kCACP,IAAO,mCACP,IAAO,iCACP,IAAO,6BACP,IAAO,0BACP,IAAO,6BACP,IAAO,iCACP,IAAO,4BACP,IAAO,gCACP,IAAO,gCACP,IAAO,4BACP,IAAO,+BACP,IAAO,oCACP,IAAO,+BACP,IAAO,mCACP,IAAO,8BACP,IAAO,gCACP,IAAO,6BACP,IAAO,iCACP,IAAO,kCACP,IAAO,gCACP,IAAO,+BACP,IAAO,+BACP,IAAO,kCACP,IAAO,kCACP,IAAO,+BACP,IAAO,qCACP,IAAO,6BACP,IAAO,+BACP,IAAO,2BACP,IAAO,gCACP,IAAO,iCACP,IAAO,iCACP,IAAO,iCACP,IAAO,6BACP,IAAO,gCACP,IAAO,oCACP,IAAO,mCACP,IAAO,gCACP,IAAO,4BACP,IAAO,6BACP,IAAO,+BACP,IAAO,8BACP,IAAO,kCACP,IAAO,8BACP,IAAO,8BACP,IAAO,8BACP,IAAO,kCACP,IAAO,kCACP,IAAO,iCACP,IAAO,oCACP,IAAO,4BACP,IAAO,4BACP,IAAO,gCACP,IAAO,8BACP,IAAO,6BACP,IAAO,8BACP,IAAO,gCACP,IAAO,8BACP,IAAO,+BACP,IAAO,kCACP,IAAO,mCACP,IAAO,mCACP,IAAO,+BACP,IAAO,4BACP,IAAO,4BACP,IAAO,iCACP,IAAO,iCACP,IAAO,+BACP,IAAO,8BACP,IAAO,iCACP,IAAO,gCACP,IAAO,uBACP,IAAO,wBACP,IAAO,wBACP,IAAO,sBACP,IAAO,0BACP,IAAO,yBACP,IAAO,2BACP,IAAO,0BACP,IAAO,0BACP,IAAO,0BACP,IAAO,0BACP,IAAO,uBACP,IAAO,wBACP,IAAO,yBACP,IAAO,4BACP,IAAO,4BACP,IAAO,yBACP,IAAO,sBACP,IAAO,4BACP,IAAO,wBACP,IAAO,sBACP,IAAO,sBACP,IAAO,2BACP,IAAO,2BACP,IAAO,0BACP,IAAO,2BACP,IAAO,4BACP,IAAO,2BACP,IAAO,0BACP,IAAO,sBACP,IAAO,yBACP,IAAO,uBACP,IAAO,4BACP,IAAO,2BACP,IAAO,yBACP,IAAO,2BACP,IAAO,6BACP,IAAO,yBACP,IAAO,2BACP,IAAO,0BACP,IAAO,kBACP,IAAO,gBACP,IAAO,4BACP,IAAO,mBACP,IAAO,2BACP,IAAO,2BACP,IAAO,4BACP,IAAO,oBACP,IAAO,qBACP,IAAO,oBACP,IAAO,kBACP,IAAO,sBACP,IAAO,uBACP,IAAO,mBACP,IAAO,mBACP,IAAO,uBACP,IAAO,kBACP,IAAO,kBACP,IAAO,eACP,IAAO,oBACP,IAAO,gBACP,IAAO,kBACP,IAAO,wBACP,IAAO,kBACP,IAAO,gBACP,IAAO,wBACP,IAAO,mBACP,IAAO,qBACP,IAAO,oBACP,IAAO,oBACP,IAAO,iBACP,IAAO,qBACP,IAAO,qBACP,IAAO,oBACP,IAAO,kBACP,IAAO,wBACP,IAAO,mBACP,IAAO,uBACP,IAAO,wBACP,IAAO,oBACP,IAAO,mBACP,IAAO,mBACP,IAAO,oBACP,IAAO,oBACP,IAAO,iBACP,IAAO,iBACP,IAAO,oBACP,IAAO,iBACP,IAAO,mBACP,IAAO,mBACP,IAAO,iBACP,IAAO,oBACP,IAAO,iBACP,IAAO,6BACP,IAAO,mBACP,IAAO,iBACP,IAAO,mBACP,IAAO,gBACP,IAAO,kBACP,IAAO,kBACP,IAAO,iBACP,IAAO,+BACP,IAAO,mBACP,IAAO,wBACP,IAAO,oBACP,IAAO,oBACP,IAAO,iBACP,IAAO,oBACP,IAAO,wBACP,IAAO,mBACP,IAAO,qBACP,IAAO,kBACP,IAAO,qBACP,IAAO,gBACP,IAAO,iBACP,IAAO,4BACP,IAAO,mBACP,IAAO,wBACP,IAAO,iBACP,IAAO,qBACP,IAAO,4BACP,IAAO,uBACP,IAAO,kBACP,IAAO,mBACP,IAAO,wBACP,IAAO,mBACP,IAAO,kBACP,IAAO,mBACP,IAAO,wBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,mBACP,IAAO,wBACP,IAAO,gBACP,IAAO,kBACP,IAAO,qBACP,IAAO,oBACP,IAAO,wBACP,IAAO,mBACP,IAAO,eACP,IAAO,iBACP,IAAO,kBACP,IAAO,mBACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,iBACP,IAAO,gBACP,IAAO,0BACP,IAAO,mBACP,IAAO,yBACP,IAAO,4BACP,IAAO,mBACP,IAAO,kBACP,IAAO,kBACP,IAAO,mBACP,IAAO,yBACP,IAAO,kBACP,IAAO,mBACP,IAAO,sBACP,IAAO,yBACP,IAAO,gBACP,IAAO,qBACP,IAAO,mBACP,IAAO,mBACP,IAAO,oBACP,IAAO,mBACP,IAAO,oBACP,IAAO,oBACP,IAAO,2BACP,IAAO,kBACP,IAAO,oBACP,IAAO,mBACP,IAAO,2BACP,IAAO,eACP,IAAO,kBACP,IAAO,kBACP,IAAO,oBACP,IAAO,oBACP,IAAO,qBACP,IAAO,iBACP,IAAO,iBACP,IAAO,oBACP,IAAO,mBACP,IAAO,iBACP,IAAO,oBACP,IAAO,sBACP,GAAM,iBACN,GAAM,kBACN,GAAM,oBACN,GAAM,oBACN,GAAM,wBACN,GAAM,kBACN,GAAM,kBACN,GAAM,mBACN,GAAM,mBACN,GAAM,0BACN,GAAM,kBACN,GAAM,oBACN,GAAM,mBACN,GAAM,kBACN,GAAM,mBACN,GAAM,4B,2PC1gBKC,G,mCAAW,CACtBC,IAAK,CAAC,OAAQ,kCACdC,IAAK,CAAC,OAAQ,+BACdC,KAAM,CAAC,QAAS,qCAChB,YAAa,CAAC,QAAS,kCACvBC,KAAM,CAAC,QAAS,4CAChBC,IAAK,CAAC,QAAS,oCACfC,KAAM,CAAC,QAAS,wCAChBC,IAAK,CAAC,QAAS,yCACfC,KAAM,CAAC,QAAS,oCAChBC,IAAK,CAAC,QAAS,oCACfC,KAAM,CAAC,QAAS,sCAChBC,IAAK,CAAC,QAAS,kCACf,SAAU,CAAC,QAAS,gDAGTC,EAAc,CACzBC,OAAQ,CACN,yDACA,4BAEFC,OAAQ,CACN,yDACA,4BAEFC,KAAM,CACJ,yDACA,4BAEFC,KAAM,CACJ,yDACA,4BAEF,aAAc,CACZ,yDACA,kDAEF,aAAc,CACZ,yDACA,kDAEF,WAAY,CACV,yDACA,kDAEFC,GAAI,CACF,sBACA,UACA,qIAEFC,GAAI,CACF,qCACA,WACA,sEAEFC,GAAI,CACF,kCACA,aACA,2EAEFC,IAAK,CACH,8CACA,aACA,gEAEFC,KAAM,CACJ,mCACA,+DAEFC,KAAM,CACJ,2BACA,4BACA,2EAEFC,IAAK,CACH,0DACA,sBACA,mEAEFC,GAAI,CACF,8BACA,aACA,kEAEFC,OAAQ,CAAC,oCAAqC,mBAC9CC,GAAI,CAAC,iCAAkC,YACvCC,IAAK,CACH,6CACA,kCAEFC,KAAM,CAAC,iCAAkC,uBACzCC,IAAK,CACH,uBACA,cACA,+DAEF,QAAS,CAAC,8BAA+B,IACzCC,GAAI,CAAC,mCAAoC,oBAiI9BC,EAAU,SAACC,GAEtB,IADA,IAAMC,EAAO,CAAC,SAAU,SAAU,SAAU,OAAQ,QAC3CC,EAAM,EAAGA,EAAMD,EAAKE,SAAUD,EACrC,GAAIF,EAAOI,SAASH,EAAKC,IAAO,OAAO,EAEzC,GAAIF,EAAOK,WAAW,MAGpB,IADA,IAAMJ,EAAO,CAAC,WAAY,UAAW,WAAY,WACxCC,EAAM,EAAGA,EAAMD,EAAKE,SAAUD,EACrC,GAAIF,EAAOM,SAASL,EAAKC,IAAO,OAAO,EAG3C,OAAO,GA0BF,SAASK,EACdC,GAMA,MAAM,cACJT,EAAQS,EAAQR,SAA8B,SAAnBQ,EAAQR,OAC/BQ,EAAQC,UACRrD,EAAAA,EAAAA,MAAKoD,EAAQR,SAHnB,KAII5C,EAAAA,EAAAA,MAAKoD,EAAQE,KAAKxD,QAAQ,MAAO,KAOvC,IAAMyD,EAAgC,SAACC,GACrC,IAAMC,EAAQD,EAAIC,MAAM,gBACxB,GAAc,OAAVA,EACF,MAAM,IAAIC,MAAM,iDAElB,OAAOC,SAASF,EAAM,KA8HjB,SAASG,EACdhB,EACAU,EACAE,GAEA,GAAIb,EAAQC,GACV,MAAM,SAAUW,EAA8BC,GACzC,GAAe,SAAXZ,EACT,MAAM,QAASW,EAA8BC,GACxC,GAAe,OAAXZ,EAAiB,CAC1B,IAAMiB,EAAML,EAAIC,MAAM,aAAa,GAC7BK,EAAON,EAAIC,MAAM,kBAAkB,GACzC,OAA4B,IAAxBD,EAAIO,QAAQ,OACR,SAAUF,EAAMC,EAEhB,MAAOD,EAAMC,EAGrB,IAAME,EAAY,SAAZA,EAAYC,GAEhB,GAA6B,OAAzBA,EAAER,MAAM,aACV,MAAM,GAAIQ,EAAE,GAAKA,EAAE,GAAnB,IAAyBD,EAAUC,EAAEC,UAAU,IAKjD,IAAMC,GAFNF,EAAIA,EAAEnE,QAAQ,WAAY,KAEZA,QAAQ,uBAAuB,SAAUsE,EAAMC,GAC3D,OAAOD,EAAKE,iBAEd,OAA8B,IAA1BH,EAAII,MAAM,KAAKxB,OAEVoB,EAAItE,cAEJsE,EAAIrE,QAAQ,OAAQ,KAG/B,MAAe,cAAX8C,EACI,UAAWoB,EAAUV,GACP,cAAXV,EACH,UAAWoB,EAAUV,GAEjBU,EAAUpB,GAApB,IAA+BoB,EAAUV,GAKxC,SAASkB,EACd5B,EACAU,EACAE,GAEA,GAAIb,EAAQC,GACV,MAAO,CACL6B,KAAM,QACNC,QAAS,GAAKnB,EAA8BC,IAEzC,GAAc,OAAVZ,EAAiB,CAC1B,IAAK,IAAI+B,EAAI,KAAMA,GAAK,OAAQA,EAAG,CACjC,IAAMC,EAAMD,EAAEE,WACVC,GAAQH,EAAI,KAAKE,WAErB,GADmB,GAAfC,EAAK/B,SAAa+B,EAAO,IAAMA,IACR,IAAvBxB,EAAKS,QAAQa,KAAuC,IAAxBtB,EAAKS,QAAQe,GAC3C,MAAO,CACLL,KAAM,MACNM,KAAMJ,GAIZ,OAAO,KACF,OACLnD,EAAYjC,eAAeqD,IACI,IAA/BpB,EAAYoB,GAAQG,OAEb,CACL0B,KAAM,0BACNO,KAAMpC,GAGH,KA6BT,IAoTaqC,EAA8C,CACzD,gBACA,UACA,SACA,YACA,UACA,WAUWC,EAAkD,CAC7D,YACA,OACA,SACA,OACA,YACA,W,kECv1BK,IAAMC,EAAQ,CACnBzE,KAAM,CAAC,YAAa,8CACpBC,IAAK,CAAC,WAAY,6BAClBF,IAAK,CAAC,WAAY,qCAClB2E,OAAQ,CAAC,yBAA0B,4BACnCC,IAAK,CACH,2DACA","sources":["webpack://usaco-guide/./node_modules/github-slugger/index.js","webpack://usaco-guide/./node_modules/github-slugger/regex.js","webpack://usaco-guide/./src/components/markdown/PGS.ts","webpack://usaco-guide/./src/components/markdown/ProblemsList/DivisionList/id_to_sol.ts","webpack://usaco-guide/./src/models/problem.ts","webpack://usaco-guide/./src/utils/books.ts"],"sourcesContent":["var regex = require('./regex.js');\n\nmodule.exports = BananaSlug;\nvar own = Object.hasOwnProperty;\n\nfunction BananaSlug() {\n  var self = this;\n  if (!(self instanceof BananaSlug)) return new BananaSlug();\n  self.reset();\n}\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\n\n\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  var self = this;\n  var slug = slugger(value, maintainCase === true);\n  var originalSlug = slug;\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++;\n    slug = originalSlug + '-' + self.occurrences[originalSlug];\n  }\n\n  self.occurrences[slug] = 0;\n  return slug;\n};\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\n\n\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null);\n};\n\nfunction slugger(string, maintainCase) {\n  if (typeof string !== 'string') return '';\n  if (!maintainCase) string = string.toLowerCase();\n  return string.replace(regex, '').replace(/ /g, '-');\n}\n\nBananaSlug.slug = slugger;","// This module is generated by `script/`.\n\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD47-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD-\\uDDCF\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC60-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD00-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D-\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g;","export default {\r\n  CPP: {\r\n    '1': 7,\r\n    '1.1': 7,\r\n    '1.2': 8,\r\n    '1.3': 8,\r\n    '1.4': 9,\r\n    '2': 10,\r\n    '2.1': 10,\r\n    '2.2': 11,\r\n    '3': 12,\r\n    '3.1': 12,\r\n    '3.2': 13,\r\n    '4': 15,\r\n    '4.1': 15,\r\n    '4.2': 16,\r\n    '4.3': 17,\r\n    '4.4': 18,\r\n    '4.5': 21,\r\n    '5': 24,\r\n    '5.1': 24,\r\n    '5.2': 25,\r\n    '5.3': 26,\r\n    '6': 27,\r\n    '6.1': 27,\r\n    '6.2': 29,\r\n    '6.3': 29,\r\n    '7': 31,\r\n    '7.1': 31,\r\n    '7.2': 31,\r\n    '7.3': 32,\r\n    '8': 34,\r\n    '8.1': 34,\r\n    '8.2': 35,\r\n    '8.3': 36,\r\n    '9': 37,\r\n    '9.1': 37,\r\n    '9.2': 38,\r\n    '9.3': 39,\r\n    '9.4': 40,\r\n    '10': 41,\r\n    '10.1': 41,\r\n    '10.2': 42,\r\n    '10.3': 43,\r\n    '10.4': 48,\r\n    '10.5': 51,\r\n    '10.6': 54,\r\n    '10.7': 57,\r\n    '10.8': 58,\r\n    '11': 60,\r\n    '11.1': 60,\r\n    '11.2': 61,\r\n    '11.3': 63,\r\n    '12': 64,\r\n    '12.1': 64,\r\n    '12.2': 65,\r\n    '12.3': 66,\r\n    '13': 68,\r\n    '13.1': 68,\r\n    '13.2': 69,\r\n    '13.3': 70,\r\n    '13.4': 70,\r\n    '14': 71,\r\n    '14.1': 71,\r\n    '14.2': 73,\r\n    '14.3': 75,\r\n    '14.4': 78,\r\n    '14.5': 78,\r\n    '15': 81,\r\n  },\r\n  JAVA: {\r\n    '1': 7,\r\n    '1.1': 7,\r\n    '1.2': 8,\r\n    '1.3': 8,\r\n    '1.4': 9,\r\n    '2': 10,\r\n    '2.1': 10,\r\n    '2.2': 14,\r\n    '3': 15,\r\n    '3.1': 15,\r\n    '3.2': 16,\r\n    '4': 18,\r\n    '4.1': 18,\r\n    '4.2': 19,\r\n    '4.3': 21,\r\n    '4.4': 24,\r\n    '5': 26,\r\n    '5.1': 26,\r\n    '5.2': 27,\r\n    '5.3': 28,\r\n    '6': 29,\r\n    '6.1': 29,\r\n    '6.2': 31,\r\n    '6.3': 32,\r\n    '7': 33,\r\n    '7.1': 33,\r\n    '7.2': 33,\r\n    '7.3': 34,\r\n    '8': 37,\r\n    '8.1': 37,\r\n    '8.2': 39,\r\n    '8.3': 39,\r\n    '9': 41,\r\n    '9.1': 41,\r\n    '9.2': 42,\r\n    '9.3': 43,\r\n    '9.4': 44,\r\n    '10': 45,\r\n    '10.1': 45,\r\n    '10.2': 46,\r\n    '10.3': 47,\r\n    '10.4': 52,\r\n    '10.5': 56,\r\n    '10.6': 59,\r\n    '10.7': 62,\r\n    '10.8': 63,\r\n    '11': 65,\r\n    '11.1': 65,\r\n    '11.2': 66,\r\n    '11.3': 68,\r\n    '12': 69,\r\n    '12.1': 69,\r\n    '12.2': 70,\r\n    '12.3': 71,\r\n    '13': 73,\r\n    '13.1': 73,\r\n    '13.2': 74,\r\n    '13.3': 75,\r\n    '13.4': 75,\r\n    '14': 76,\r\n    '14.1': 76,\r\n    '14.2': 78,\r\n    '14.3': 80,\r\n    '14.4': 83,\r\n    '14.5': 83,\r\n    '15': 86,\r\n  },\r\n  CPH: {\r\n    '1': 13,\r\n    '1.1': 13,\r\n    '1.2': 14,\r\n    '1.3': 16,\r\n    '1.4': 18,\r\n    '1.5': 20,\r\n    '1.6': 25,\r\n    '2': 27,\r\n    '2.1': 27,\r\n    '2.2': 30,\r\n    '2.3': 31,\r\n    '2.4': 31,\r\n    '3': 35,\r\n    '3.1': 35,\r\n    '3.2': 39,\r\n    '3.3': 41,\r\n    '4': 45,\r\n    '4.1': 45,\r\n    '4.2': 47,\r\n    '4.3': 48,\r\n    '4.4': 49,\r\n    '4.5': 51,\r\n    '4.6': 54,\r\n    '5': 57,\r\n    '5.1': 57,\r\n    '5.2': 59,\r\n    '5.3': 60,\r\n    '5.4': 61,\r\n    '5.5': 64,\r\n    '6': 67,\r\n    '6.1': 67,\r\n    '6.2': 68,\r\n    '6.3': 70,\r\n    '6.4': 71,\r\n    '6.5': 72,\r\n    '7': 75,\r\n    '7.1': 75,\r\n    '7.2': 80,\r\n    '7.3': 81,\r\n    '7.4': 82,\r\n    '7.5': 84,\r\n    '7.6': 85,\r\n    '8': 87,\r\n    '8.1': 87,\r\n    '8.2': 89,\r\n    '8.3': 91,\r\n    '9': 93,\r\n    '9.1': 94,\r\n    '9.2': 96,\r\n    '9.3': 99,\r\n    '9.4': 103,\r\n    '10': 105,\r\n    '10.1': 105,\r\n    '10.2': 106,\r\n    '10.3': 108,\r\n    '10.4': 110,\r\n    '10.5': 112,\r\n    '11': 119,\r\n    '11.1': 119,\r\n    '11.2': 123,\r\n    '12': 127,\r\n    '12.1': 127,\r\n    '12.2': 129,\r\n    '12.3': 131,\r\n    '13': 133,\r\n    '13.1': 133,\r\n    '13.2': 136,\r\n    '13.3': 139,\r\n    '14': 143,\r\n    '14.1': 144,\r\n    '14.2': 145,\r\n    '14.3': 147,\r\n    '14.4': 149,\r\n    '15': 151,\r\n    '15.1': 152,\r\n    '15.2': 155,\r\n    '15.3': 157,\r\n    '16': 159,\r\n    '16.1': 159,\r\n    '16.2': 161,\r\n    '16.3': 164,\r\n    '16.4': 165,\r\n    '17': 167,\r\n    '17.1': 168,\r\n    '17.2': 170,\r\n    '18': 173,\r\n    '18.1': 173,\r\n    '18.2': 174,\r\n    '18.3': 177,\r\n    '18.4': 180,\r\n    '19': 183,\r\n    '19.1': 183,\r\n    '19.2': 187,\r\n    '19.3': 188,\r\n    '19.4': 189,\r\n    '20': 191,\r\n    '20.1': 192,\r\n    '20.2': 196,\r\n    '20.3': 197,\r\n    '20.4': 200,\r\n    '21': 207,\r\n    '21.1': 207,\r\n    '21.2': 211,\r\n    '21.3': 214,\r\n    '21.4': 215,\r\n    '22': 217,\r\n    '22.1': 218,\r\n    '22.2': 220,\r\n    '22.3': 222,\r\n    '22.4': 224,\r\n    '22.5': 225,\r\n    '23': 227,\r\n    '23.1': 227,\r\n    '23.2': 230,\r\n    '23.3': 232,\r\n    '24': 235,\r\n    '24.1': 235,\r\n    '24.2': 236,\r\n    '24.3': 238,\r\n    '24.4': 240,\r\n    '24.5': 241,\r\n    '25': 245,\r\n    '25.1': 245,\r\n    '25.2': 247,\r\n    '25.3': 248,\r\n    '26': 253,\r\n    '26.1': 253,\r\n    '26.2': 254,\r\n    '26.3': 255,\r\n    '26.4': 257,\r\n    '27': 261,\r\n    '27.1': 262,\r\n    '27.2': 264,\r\n    '27.3': 265,\r\n    '28': 267,\r\n    '28.1': 268,\r\n    '28.2': 271,\r\n    '28.3': 273,\r\n    '28.4': 274,\r\n    '29': 275,\r\n    '29.1': 276,\r\n    '29.2': 278,\r\n    '29.3': 281,\r\n    '29.4': 282,\r\n    '30': 285,\r\n    '30.1': 286,\r\n    '30.2': 287,\r\n    '30.3': 288,\r\n  },\r\n  PAPS: {\r\n    '1': 15,\r\n    '1.1': 16,\r\n    '1.2': 17,\r\n    '1.2.1': 20,\r\n    '1.3': 21,\r\n    '1.4': 22,\r\n    '1.5': 24,\r\n    '1.6': 25,\r\n    '1.7': 26,\r\n    '2': 29,\r\n    '2.1': 30,\r\n    '2.1.1': 30,\r\n    '2.1.2': 31,\r\n    '2.1.3': 31,\r\n    '2.1.4': 31,\r\n    '2.2': 32,\r\n    '2.3': 35,\r\n    '2.4': 41,\r\n    '2.5': 42,\r\n    '2.6': 45,\r\n    '2.7': 48,\r\n    '2.8': 51,\r\n    '2.9': 52,\r\n    '2.10': 55,\r\n    '2.11': 59,\r\n    '2.12': 60,\r\n    '2.13': 61,\r\n    '2.14': 61,\r\n    '2.15': 62,\r\n    '3': 63,\r\n    '3.1': 64,\r\n    '3.1.1': 65,\r\n    '3.2': 67,\r\n    '3.3': 68,\r\n    '3.4': 69,\r\n    '3.5': 70,\r\n    '3.6': 72,\r\n    '3.7': 73,\r\n    '3.7.1': 73,\r\n    '3.7.2': 74,\r\n    '3.7.3': 75,\r\n    '3.8': 76,\r\n    '3.8.1': 76,\r\n    '3.9': 77,\r\n    '3.9.1': 78,\r\n    '3.9.2': 78,\r\n    '3.9.3': 79,\r\n    '3.10': 80,\r\n    '3.11': 80,\r\n    '4': 81,\r\n    '4.1': 98,\r\n    '4.2': 98,\r\n    '5': 99,\r\n    '5.1': 99,\r\n    '5.2': 103,\r\n    '5.2.1': 107,\r\n    '5.3': 110,\r\n    '5.4': 110,\r\n    '5.5': 111,\r\n    '5.6': 112,\r\n    '5.7': 113,\r\n    '6': 115,\r\n    '6.1': 115,\r\n    '6.2': 121,\r\n    '6.3': 121,\r\n    '6.4': 123,\r\n    '6.4.1': 123,\r\n    '6.4.2': 125,\r\n    '6.4.3': 125,\r\n    '6.5': 126,\r\n    '6.5.1': 127,\r\n    '6.5.2': 128,\r\n    '6.6': 132,\r\n    '7': 135,\r\n    '7.1': 135,\r\n    '7.2': 136,\r\n    '7.3': 140,\r\n    '7.4': 147,\r\n    '7.5': 150,\r\n    '7.6': 152,\r\n    '8': 153,\r\n    '8.1': 153,\r\n    '8.2': 155,\r\n    '8.3': 157,\r\n    '8.4': 160,\r\n    '9': 161,\r\n    '9.1': 162,\r\n    '9.2': 164,\r\n    '9.2.1': 165,\r\n    '9.2.2': 166,\r\n    '9.3': 167,\r\n    '9.4': 170,\r\n    '9.5': 171,\r\n    '9.6': 174,\r\n    '9.6.1': 174,\r\n    '9.6.2': 176,\r\n    '9.6.3': 177,\r\n    '9.7': 180,\r\n    '10': 181,\r\n    '10.1': 181,\r\n    '10.2': 189,\r\n    '10.3': 191,\r\n    '10.3.1': 194,\r\n    '10.3.2': 196,\r\n    '10.3.3': 197,\r\n    '10.4': 200,\r\n    '10.5': 202,\r\n    '11': 203,\r\n    '11.1': 203,\r\n    '11.2': 207,\r\n    '11.2.1': 207,\r\n    '11.2.2': 208,\r\n    '11.2.3': 210,\r\n    '11.3': 213,\r\n    '12': 215,\r\n    '12.1': 215,\r\n    '12.2': 221,\r\n    '12.3': 224,\r\n    '12.3.1': 225,\r\n    '12.3.2': 225,\r\n    '12.3.3': 227,\r\n    '12.4': 228,\r\n    '12.5': 231,\r\n    '13': 233,\r\n    '13.1': 233,\r\n    '13.2': 236,\r\n    '13.2.1': 236,\r\n    '13.2.2': 238,\r\n    '13.3': 239,\r\n    '13.4': 242,\r\n    '14': 243,\r\n    '14.1': 243,\r\n    '14.2': 249,\r\n    '14.3': 253,\r\n    '14.3.1': 260,\r\n    '14.3.2': 262,\r\n    '14.4': 264,\r\n    '15': 265,\r\n    '15.1': 265,\r\n    '15.2': 269,\r\n    '15.2.1': 270,\r\n    '15.3': 276,\r\n    '15.4': 277,\r\n    '15.4.1': 281,\r\n    '15.4.2': 284,\r\n    '15.5': 286,\r\n    '15.6': 289,\r\n    '15.7': 291,\r\n    '15.8': 296,\r\n    '16': 297,\r\n    '16.1': 297,\r\n    '16.2': 301,\r\n    '16.3': 306,\r\n    '16.4': 313,\r\n    '16.5': 316,\r\n    '16.6': 319,\r\n    '16.7': 324,\r\n    '17': 325,\r\n    '17.1': 325,\r\n    '17.1.1': 326,\r\n    '17.1.2': 328,\r\n    '17.2': 329,\r\n    '17.2.1': 329,\r\n    '17.2.2': 332,\r\n  },\r\n  CP2: {\r\n    '1': 17,\r\n    '1.1': 17,\r\n    '1.2': 18,\r\n    '1.2.1': 20,\r\n    '1.2.2': 21,\r\n    '1.2.3': 24,\r\n    '1.2.4': 26,\r\n    '1.2.5': 28,\r\n    '1.2.6': 28,\r\n    '1.3': 29,\r\n    '1.4': 35,\r\n    '2': 37,\r\n    '2.1': 37,\r\n    '2.2': 38,\r\n    '2.2.1': 38,\r\n    '2.2.2': 42,\r\n    '2.3': 45,\r\n    '2.3.1': 45,\r\n    '2.3.2': 46,\r\n    '2.3.3': 48,\r\n    '2.3.4': 51,\r\n    '2.4': 54,\r\n    '3': 55,\r\n    '3.1': 55,\r\n    '3.2': 55,\r\n    '3.2.1': 56,\r\n    '3.2.2': 57,\r\n    '3.3': 63,\r\n    '3.3.1': 63,\r\n    '3.4': 67,\r\n    '3.4.1': 67,\r\n    '3.5': 71,\r\n    '3.5.1': 71,\r\n    '3.5.2': 77,\r\n    '3.5.3': 82,\r\n    '3.6': 86,\r\n    '4': 87,\r\n    '4.1': 87,\r\n    '4.2': 87,\r\n    '4.2.1': 87,\r\n    '4.2.2': 88,\r\n    '4.2.3': 89,\r\n    '4.2.4': 90,\r\n    '4.2.5': 91,\r\n    '4.2.6': 92,\r\n    '4.2.7': 92,\r\n    '4.2.8': 93,\r\n    '4.2.9': 96,\r\n    '4.3': 100,\r\n    '4.3.1': 100,\r\n    '4.3.2': 100,\r\n    '4.3.3': 101,\r\n    '4.3.4': 102,\r\n    '4.4': 106,\r\n    '4.4.1': 106,\r\n    '4.4.2': 106,\r\n    '4.4.3': 107,\r\n    '4.4.4': 109,\r\n    '4.5': 112,\r\n    '4.5.1': 112,\r\n    '4.5.2': 112,\r\n    '4.5.3': 114,\r\n    '4.6': 117,\r\n    '4.6.1': 117,\r\n    '4.6.2': 117,\r\n    '4.6.3': 118,\r\n    '4.6.4': 120,\r\n    '4.7': 123,\r\n    '4.7.1': 123,\r\n    '4.7.2': 128,\r\n    '4.7.3': 129,\r\n    '4.7.4': 130,\r\n    '4.8': 135,\r\n    '5': 137,\r\n    '5.1': 137,\r\n    '5.2': 137,\r\n    '5.3': 141,\r\n    '5.3.1': 141,\r\n    '5.3.2': 142,\r\n    '5.4': 145,\r\n    '5.4.1': 145,\r\n    '5.4.2': 146,\r\n    '5.4.3': 147,\r\n    '5.4.4': 147,\r\n    '5.5': 149,\r\n    '5.5.1': 149,\r\n    '5.5.2': 151,\r\n    '5.5.3': 152,\r\n    '5.5.4': 152,\r\n    '5.5.5': 153,\r\n    '5.5.6': 154,\r\n    '5.5.7': 156,\r\n    '5.5.8': 157,\r\n    '5.5.9': 158,\r\n    '5.6': 158,\r\n    '5.7': 159,\r\n    '5.7.1': 159,\r\n    '5.7.2': 159,\r\n    '5.8': 161,\r\n    '5.8.1': 161,\r\n    '5.8.2': 162,\r\n    '5.8.3': 162,\r\n    '5.9': 163,\r\n    '5.9.1': 163,\r\n    '5.9.2': 164,\r\n    '5.10': 165,\r\n    '6': 167,\r\n    '6.1': 167,\r\n    '6.2': 167,\r\n    '6.3': 169,\r\n    '6.4': 172,\r\n    '6.4.1': 172,\r\n    '6.4.2': 172,\r\n    '6.4.3': 174,\r\n    '6.5': 176,\r\n    '6.5.1': 176,\r\n    '6.5.2': 177,\r\n    '6.5.3': 178,\r\n    '6.6': 179,\r\n    '6.6.1': 179,\r\n    '6.6.2': 179,\r\n    '6.6.3': 180,\r\n    '6.6.4': 182,\r\n    '6.6.5': 186,\r\n    '6.7': 190,\r\n    '7': 191,\r\n    '7.1': 191,\r\n    '7.2': 192,\r\n    '7.2.1': 192,\r\n    '7.2.2': 193,\r\n    '7.2.3': 197,\r\n    '7.2.4': 199,\r\n    '7.2.5': 201,\r\n    '7.2.6': 202,\r\n    '7.2.7': 203,\r\n    '7.3': 204,\r\n    '7.3.1': 204,\r\n    '7.3.2': 204,\r\n    '7.3.3': 204,\r\n    '7.3.4': 205,\r\n    '7.3.5': 205,\r\n    '7.3.6': 206,\r\n    '7.3.7': 207,\r\n    '7.4': 211,\r\n    '7.5': 212,\r\n    '8': 213,\r\n    '8.1': 213,\r\n    '8.2': 213,\r\n    '8.2.1': 213,\r\n    '8.2.2': 214,\r\n    '8.2.3': 215,\r\n    '8.2.4': 215,\r\n    '8.2.5': 215,\r\n    '8.2.6': 215,\r\n    '8.3': 219,\r\n    '8.3.1': 219,\r\n    '8.3.2': 220,\r\n    '8.3.3': 220,\r\n    '8.3.4': 220,\r\n    '8.4': 221,\r\n    '8.4.1': 221,\r\n    '8.4.2': 221,\r\n    '8.4.3': 222,\r\n    '8.4.4': 223,\r\n    '8.4.5': 224,\r\n    '8.4.6': 225,\r\n    '8.5': 227,\r\n  },\r\n};\r\n","export default {\r\n  '1212': 'sol_prob1_platinum_feb22.html',\r\n  '1213': 'sol_prob2_platinum_feb22.html',\r\n  '1214': 'sol_prob3_platinum_feb22.html',\r\n  '1209': 'sol_prob1_gold_feb22.html',\r\n  '1210': 'sol_prob2_gold_feb22.html',\r\n  '1211': 'sol_prob3_gold_feb22.html',\r\n  '1206': 'sol_prob1_silver_feb22.html',\r\n  '1207': 'sol_prob2_silver_feb22.html',\r\n  '1208': 'sol_prob3_silver_feb22.html',\r\n  '1203': 'sol_prob1_bronze_feb22.html',\r\n  '1204': 'sol_prob2_bronze_feb22.html',\r\n  '1205': 'sol_prob3_bronze_feb22.html',\r\n  '1188': 'sol_prob1_platinum_jan22.html',\r\n  '1189': 'sol_prob2_platinum_jan22.html',\r\n  '1190': 'sol_prob3_platinum_jan22.html',\r\n  '1185': 'sol_prob1_gold_jan22.html',\r\n  '1186': 'sol_prob2_gold_jan22.html',\r\n  '1187': 'sol_prob3_gold_jan22.html',\r\n  '1182': 'sol_prob1_silver_jan22.html',\r\n  '1183': 'sol_prob2_silver_jan22.html',\r\n  '1184': 'sol_prob3_silver_jan22.html',\r\n  '1179': 'sol_prob1_bronze_jan22.html',\r\n  '1180': 'sol_prob2_bronze_jan22.html',\r\n  '1181': 'sol_prob3_bronze_jan22.html',\r\n  '1164': 'sol_prob1_platinum_dec21.html',\r\n  '1165': 'sol_prob2_platinum_dec21.html',\r\n  '1166': 'sol_prob3_platinum_dec21.html',\r\n  '1161': 'sol_prob1_gold_dec21.html',\r\n  '1162': 'sol_prob2_gold_dec21.html',\r\n  '1163': 'sol_prob3_gold_dec21.html',\r\n  '1158': 'sol_prob1_silver_dec21.html',\r\n  '1159': 'sol_prob2_silver_dec21.html',\r\n  '1160': 'sol_prob3_silver_dec21.html',\r\n  '1155': 'sol_prob1_bronze_dec21.html',\r\n  '1156': 'sol_prob2_bronze_dec21.html',\r\n  '1157': 'sol_prob3_bronze_dec21.html',\r\n  '1140': 'sol_prob1_platinum_open21.html',\r\n  '1141': 'sol_prob2_platinum_open21.html',\r\n  '1142': 'sol_prob3_platinum_open21.html',\r\n  '1137': 'sol_prob1_gold_open21.html',\r\n  '1138': 'sol_prob2_gold_open21.html',\r\n  '1139': 'sol_prob3_gold_open21.html',\r\n  '1134': 'sol_prob1_silver_open21.html',\r\n  '1135': 'sol_prob2_silver_open21.html',\r\n  '1136': 'sol_prob3_silver_open21.html',\r\n  '1131': 'sol_prob1_bronze_open21.html',\r\n  '1132': 'sol_prob2_bronze_open21.html',\r\n  '1133': 'sol_prob3_bronze_open21.html',\r\n  '1116': 'sol_prob1_platinum_feb21.html',\r\n  '1117': 'sol_prob2_platinum_feb21.html',\r\n  '1118': 'sol_prob3_platinum_feb21.html',\r\n  '1113': 'sol_prob1_gold_feb21.html',\r\n  '1114': 'sol_prob2_gold_feb21.html',\r\n  '1115': 'sol_prob3_gold_feb21.html',\r\n  '1110': 'sol_prob1_silver_feb21.html',\r\n  '1111': 'sol_prob2_silver_feb21.html',\r\n  '1112': 'sol_prob3_silver_feb21.html',\r\n  '1107': 'sol_prob1_bronze_feb21.html',\r\n  '1108': 'sol_prob2_bronze_feb21.html',\r\n  '1109': 'sol_prob3_bronze_feb21.html',\r\n  '1092': 'sol_prob1_platinum_jan21.html',\r\n  '1093': 'sol_prob2_platinum_jan21.html',\r\n  '1094': 'sol_prob3_platinum_jan21.html',\r\n  '1089': 'sol_prob1_gold_jan21.html',\r\n  '1090': 'sol_prob2_gold_jan21.html',\r\n  '1091': 'sol_prob3_gold_jan21.html',\r\n  '1086': 'sol_prob1_silver_jan21.html',\r\n  '1087': 'sol_prob2_silver_jan21.html',\r\n  '1088': 'sol_prob3_silver_jan21.html',\r\n  '1083': 'sol_prob1_bronze_jan21.html',\r\n  '1084': 'sol_prob2_bronze_jan21.html',\r\n  '1085': 'sol_prob3_bronze_jan21.html',\r\n  '1068': 'sol_prob1_platinum_dec20.html',\r\n  '1069': 'sol_prob2_platinum_dec20.html',\r\n  '1070': 'sol_prob3_platinum_dec20.html',\r\n  '1065': 'sol_prob1_gold_dec20.html',\r\n  '1066': 'sol_prob2_gold_dec20.html',\r\n  '1067': 'sol_prob3_gold_dec20.html',\r\n  '1062': 'sol_prob1_silver_dec20.html',\r\n  '1063': 'sol_prob2_silver_dec20.html',\r\n  '1064': 'sol_prob3_silver_dec20.html',\r\n  '1059': 'sol_prob1_bronze_dec20.html',\r\n  '1060': 'sol_prob2_bronze_dec20.html',\r\n  '1061': 'sol_prob3_bronze_dec20.html',\r\n  '1044': 'sol_sprinklers2_platinum_open20.html',\r\n  '1045': 'sol_exercise_platinum_open20.html',\r\n  '1046': 'sol_circus_platinum_open20.html',\r\n  '1041': 'sol_haircut_gold_open20.html',\r\n  '1042': 'sol_fcolor_gold_open20.html',\r\n  '1043': 'sol_exercise_gold_open20.html',\r\n  '1038': 'sol_socdist_silver_open20.html',\r\n  '1039': 'sol_cereal_silver_open20.html',\r\n  '1040': 'sol_moop_silver_open20.html',\r\n  '1035': 'sol_socdist1_bronze_open20.html',\r\n  '1036': 'sol_socdist2_bronze_open20.html',\r\n  '1037': 'sol_tracing_bronze_open20.html',\r\n  '1020': 'sol_deleg_platinum_feb20.html',\r\n  '1021': 'sol_triangles_platinum_feb20.html',\r\n  '1022': 'sol_help_platinum_feb20.html',\r\n  '1017': 'sol_timeline_gold_feb20.html',\r\n  '1018': 'sol_help_gold_feb20.html',\r\n  '1019': 'sol_deleg_gold_feb20.html',\r\n  '1014': 'sol_swap_silver_feb20.html',\r\n  '1015': 'sol_triangles_silver_feb20.html',\r\n  '1016': 'sol_clocktree_silver_feb20.html',\r\n  '1011': 'sol_triangles_bronze_feb20.html',\r\n  '1012': 'sol_breedflip_bronze_feb20.html',\r\n  '1013': 'sol_swap_bronze_feb20.html',\r\n  '996': 'sol_cave_platinum_jan20.html',\r\n  '997': 'sol_nondec_platinum_jan20.html',\r\n  '998': 'sol_falling_platinum_jan20.html',\r\n  '993': 'sol_time_gold_jan20.html',\r\n  '994': 'sol_threesum_gold_jan20.html',\r\n  '995': 'sol_boards_gold_jan20.html',\r\n  '990': 'sol_berries_silver_jan20.html',\r\n  '991': 'sol_loan_silver_jan20.html',\r\n  '992': 'sol_wormsort_silver_jan20.html',\r\n  '987': 'sol_word_bronze_jan20.html',\r\n  '988': 'sol_photo_bronze_jan20.html',\r\n  '989': 'sol_race_bronze_jan20.html',\r\n  '972': 'sol_pieaters_platinum_dec19.html',\r\n  '973': 'sol_snowcow_platinum_dec19.html',\r\n  '974': 'sol_treedepth_platinum_dec19.html',\r\n  '969': 'sol_pump_gold_dec19.html',\r\n  '970': 'sol_milkvisits_gold_dec19.html',\r\n  '971': 'sol_cowmbat_gold_dec19.html',\r\n  '966': 'sol_moobuzz_silver_dec19.html',\r\n  '967': 'sol_meetings_silver_dec19.html',\r\n  '968': 'sol_milkvisits_silver_dec19.html',\r\n  '963': 'sol_gymnastics_bronze_dec19.html',\r\n  '964': 'sol_whereami_bronze_dec19.html',\r\n  '965': 'sol_lineup_bronze_dec19.html',\r\n  '948': 'sol_boxes_platinum_open19.html',\r\n  '949': 'sol_escape_platinum_open19.html',\r\n  '950': 'sol_valleys_platinum_open19.html',\r\n  '945': 'sol_snakes_gold_open19.html',\r\n  '946': 'sol_walk_gold_open19.html',\r\n  '947': 'sol_balance_gold_open19.html',\r\n  '942': 'sol_leftout_silver_open19.html',\r\n  '943': 'sol_cowjump_silver_open19.html',\r\n  '944': 'sol_fenceplan_silver_open19.html',\r\n  '939': 'sol_buckets_bronze_open19.html',\r\n  '940': 'sol_factory_bronze_open19.html',\r\n  '941': 'sol_evolution_bronze_open19.html',\r\n  '924': 'sol_cowdate_platinum_feb19.html',\r\n  '925': 'sol_mooriokart_platinum_feb19.html',\r\n  '926': 'sol_mowing_platinum_feb19.html',\r\n  '921': 'sol_cowland_gold_feb19.html',\r\n  '922': 'sol_dishes_gold_feb19.html',\r\n  '923': 'sol_paintbarn_gold_feb19.html',\r\n  '918': 'sol_herding_silver_feb19.html',\r\n  '919': 'sol_paintbarn_silver_feb19.html',\r\n  '920': 'sol_revegetate_silver_feb19.html',\r\n  '915': 'sol_herding_bronze_feb19.html',\r\n  '916': 'sol_revegetate_bronze_feb19.html',\r\n  '917': 'sol_traffic_bronze_feb19.html',\r\n  '900': 'sol_redistricting_platinum_jan19.html',\r\n  '901': 'sol_exercise_platinum_jan19.html',\r\n  '902': 'sol_tracking2_platinum_jan19.html',\r\n  '897': 'sol_poetry_gold_jan19.html',\r\n  '898': 'sol_sleepy_gold_jan19.html',\r\n  '899': 'sol_shortcut_gold_jan19.html',\r\n  '894': 'sol_planting_silver_jan19.html',\r\n  '895': 'sol_perimeter_silver_jan19.html',\r\n  '896': 'sol_mountains_silver_jan19.html',\r\n  '891': 'sol_shell_bronze_jan19.html',\r\n  '892': 'sol_sleepy_bronze_jan19.html',\r\n  '893': 'sol_guess_bronze_jan19.html',\r\n  '864': 'sol_balance_platinum_dec18.html',\r\n  '865': 'sol_itout_platinum_dec18.html',\r\n  '866': 'sol_gathering_platinum_dec18.html',\r\n  '861': 'sol_dining_gold_dec18.html',\r\n  '862': 'sol_cowpatibility_gold_dec18.html',\r\n  '863': 'sol_teamwork_gold_dec18.html',\r\n  '858': 'sol_convention_silver_dec18.html',\r\n  '859': 'sol_convention2_silver_dec18.html',\r\n  '860': 'sol_mooyomooyo_silver_dec18.html',\r\n  '855': 'sol_mixmilk_bronze_dec18.html',\r\n  '856': 'sol_blist_bronze_dec18.html',\r\n  '857': 'sol_backforth_bronze_dec18.html',\r\n  '840': 'sol_sort_platinum_open18.html',\r\n  '841': 'sol_train_platinum_open18.html',\r\n  '842': 'sol_disrupt_platinum_open18.html',\r\n  '837': 'sol_sort_gold_open18.html',\r\n  '838': 'sol_milkorder_gold_open18.html',\r\n  '839': 'sol_talent_gold_open18.html',\r\n  '834': 'sol_sort_silver_open18.html',\r\n  '835': 'sol_lemonade_silver_open18.html',\r\n  '836': 'sol_multimoo_silver_open18.html',\r\n  '831': 'sol_tttt_bronze_open18.html',\r\n  '832': 'sol_milkorder_bronze_open18.html',\r\n  '833': 'sol_family_bronze_open18.html',\r\n  '816': 'sol_slingshot_platinum_feb18.html',\r\n  '817': 'sol_newbarn_platinum_feb18.html',\r\n  '818': 'sol_gymnasts_platinum_feb18.html',\r\n  '813': 'sol_snowboots_gold_feb18.html',\r\n  '814': 'sol_dirtraverse_gold_feb18.html',\r\n  '815': 'sol_taming_gold_feb18.html',\r\n  '810': 'sol_reststops_silver_feb18.html',\r\n  '811': 'sol_snowboots_silver_feb18.html',\r\n  '812': 'sol_teleport_silver_feb18.html',\r\n  '807': 'sol_teleport_bronze_feb18.html',\r\n  '808': 'sol_hoofball_bronze_feb18.html',\r\n  '809': 'sol_taming_bronze_feb18.html',\r\n  '792': 'sol_lifeguards_platinum_jan18.html',\r\n  '793': 'sol_atlarge_platinum_jan18.html',\r\n  '794': 'sol_sprinklers_platinum_jan18.html',\r\n  '789': 'sol_mootube_gold_jan18.html',\r\n  '790': 'sol_atlarge_gold_jan18.html',\r\n  '791': 'sol_spainting_gold_jan18.html',\r\n  '786': 'sol_lifeguards_silver_jan18.html',\r\n  '787': 'sol_rental_silver_jan18.html',\r\n  '788': 'sol_mootube_silver_jan18.html',\r\n  '783': 'sol_billboard_bronze_jan18.html',\r\n  '784': 'sol_lifeguards_bronze_jan18.html',\r\n  '785': 'sol_outofplace_bronze_jan18.html',\r\n  '768': 'sol_standingout_platinum_dec17.html',\r\n  '769': 'sol_pushabox_platinum_dec17.html',\r\n  '770': 'sol_greedy_platinum_dec17.html',\r\n  '765': 'sol_piepie_gold_dec17.html',\r\n  '766': 'sol_barnpainting_gold_dec17.html',\r\n  '767': 'sol_hayfeast_gold_dec17.html',\r\n  '762': 'sol_homework_silver_dec17.html',\r\n  '763': 'sol_measurement_silver_dec17.html',\r\n  '764': 'sol_shuffle_silver_dec17.html',\r\n  '759': 'sol_billboard_bronze_dec17.html',\r\n  '760': 'sol_shuffle_bronze_dec17.html',\r\n  '761': 'sol_measurement_bronze_dec17.html',\r\n  '744': 'sol_art_platinum_open17.html',\r\n  '745': 'sol_grass_platinum_open17.html',\r\n  '746': 'sol_cowbasic_platinum_open17.html',\r\n  '741': 'sol_cownomics_gold_open17.html',\r\n  '743': 'sol_art2_gold_open17.html',\r\n  '738': 'sol_pairup_silver_open17.html',\r\n  '739': 'sol_cownomics_silver_open17.html',\r\n  '740': 'sol_where_silver_open17.html',\r\n  '735': 'sol_lostcow_bronze_open17.html',\r\n  '736': 'sol_cownomics_bronze_open17.html',\r\n  '737': 'sol_art_bronze_open17.html',\r\n  '720': 'sol_mincross_platinum_feb17.html',\r\n  '721': 'sol_nocross_platinum_feb17.html',\r\n  '722': 'sol_friendcross_platinum_feb17.html',\r\n  '717': 'sol_visitfj_gold_feb17.html',\r\n  '718': 'sol_nocross_gold_feb17.html',\r\n  '719': 'sol_circlecross_gold_feb17.html',\r\n  '714': 'sol_helpcross_silver_feb17.html',\r\n  '715': 'sol_maxcross_silver_feb17.html',\r\n  '716': 'sol_countcross_silver_feb17.html',\r\n  '711': 'sol_crossroad_bronze_feb17.html',\r\n  '712': 'sol_circlecross_bronze_feb17.html',\r\n  '713': 'sol_cowqueue_bronze_feb17.html',\r\n  '696': 'sol_promote_platinum_jan17.html',\r\n  '697': 'sol_tallbarn_platinum_jan17.html',\r\n  '698': 'sol_subrev_platinum_jan17.html',\r\n  '693': 'sol_bphoto_gold_jan17.html',\r\n  '694': 'sol_hps_gold_jan17.html',\r\n  '695': 'sol_cownav_gold_jan17.html',\r\n  '690': 'sol_cowdance_silver_jan17.html',\r\n  '691': 'sol_hps_silver_jan17.html',\r\n  '692': 'sol_cowcode_silver_jan17.html',\r\n  '687': 'sol_notlast_bronze_jan17.html',\r\n  '688': 'sol_hps_bronze_jan17.html',\r\n  '689': 'sol_cowtip_bronze_jan17.html',\r\n  '672': 'sol_triangles_platinum_dec16.html',\r\n  '673': 'sol_team_platinum_dec16.html',\r\n  '674': 'sol_roboherd_platinum_dec16.html',\r\n  '669': 'sol_moocast_gold_dec16.html',\r\n  '670': 'sol_checklist_gold_dec16.html',\r\n  '671': 'sol_lasers_gold_dec16.html',\r\n  '666': 'sol_haybales_silver_dec16.html',\r\n  '667': 'sol_citystate_silver_dec16.html',\r\n  '668': 'sol_moocast_silver_dec16.html',\r\n  '663': 'sol_square_bronze_dec16.html',\r\n  '664': 'sol_blocks_bronze_dec16.html',\r\n  '665': 'sol_cowsignal_bronze_dec16.html',\r\n  '648': 'sol_262144_platinum_open16.html',\r\n  '649': 'sol_bcs_platinum_open16.html',\r\n  '650': 'sol_landscape_platinum_open16.html',\r\n  '645': 'sol_split_gold_open16.html',\r\n  '646': 'sol_closing_gold_open16.html',\r\n  '647': 'sol_248_gold_open16.html',\r\n  '642': 'sol_reduce_silver_open16.html',\r\n  '643': 'sol_diamond_silver_open16.html',\r\n  '644': 'sol_closing_silver_open16.html',\r\n  '639': 'sol_diamond_bronze_open16.html',\r\n  '640': 'sol_bcs_bronze_open16.html',\r\n  '641': 'sol_reduce_bronze_open16.html',\r\n  '624': 'sol_balancing_platinum_feb16.html',\r\n  '625': 'sol_fencedin_platinum_feb16.html',\r\n  '626': 'sol_cbarn_platinum_feb16.html',\r\n  '621': 'sol_cbarn_gold_feb16.html',\r\n  '622': 'sol_cbarn2_gold_feb16.html',\r\n  '623': 'sol_fencedin_gold_feb16.html',\r\n  '618': 'sol_cbarn_silver_feb16.html',\r\n  '619': 'sol_balancing_silver_feb16.html',\r\n  '620': 'sol_pails_silver_feb16.html',\r\n  '615': 'sol_pails_bronze_feb16.html',\r\n  '616': 'sol_cbarn_bronze_feb16.html',\r\n  '617': 'sol_balancing_bronze_feb16.html',\r\n  '600': 'sol_fortmoo_platinum_jan16.html',\r\n  '601': 'sol_mowing_platinum_jan16.html',\r\n  '602': 'sol_lightsout_platinum_jan16.html',\r\n  '597': 'sol_angry_gold_jan16.html',\r\n  '598': 'sol_radio_gold_jan16.html',\r\n  '599': 'sol_lightsout_gold_jan16.html',\r\n  '594': 'sol_angry_silver_jan16.html',\r\n  '595': 'sol_div7_silver_jan16.html',\r\n  '596': 'sol_gates_silver_jan16.html',\r\n  '591': 'sol_promote_bronze_jan16.html',\r\n  '592': 'sol_angry_bronze_jan16.html',\r\n  '593': 'sol_mowing_bronze_jan16.html',\r\n  '576': 'sol_maxflow_platinum_dec15.html',\r\n  '577': 'sol_cardgame_platinum_dec15.html',\r\n  '578': 'sol_haybales_platinum_dec15.html',\r\n  '573': 'sol_cardgame_gold_dec15.html',\r\n  '574': 'sol_feast_gold_dec15.html',\r\n  '575': 'sol_dream_gold_dec15.html',\r\n  '570': 'sol_lightson_silver_dec15.html',\r\n  '571': 'sol_highcard_silver_dec15.html',\r\n  '572': 'sol_bcount_silver_dec15.html',\r\n  '567': 'sol_paint_bronze_dec15.html',\r\n  '568': 'sol_speeding_bronze_dec15.html',\r\n  '569': 'sol_badmilk_bronze_dec15.html',\r\n  '552': 'sol_googol_gold.html',\r\n  '553': 'sol_palpath_gold.html',\r\n  '554': 'sol_trapped_gold.html',\r\n  '549': 'sol_bgm_silver.html',\r\n  '550': 'sol_trapped_silver.html',\r\n  '551': 'sol_buffet_silver.html',\r\n  '545': 'sol_moocrypt_bronze.html',\r\n  '546': 'sol_geteven_bronze.html',\r\n  '547': 'sol_trapped_bronze.html',\r\n  '548': 'sol_palpath_bronze.html',\r\n  '532': 'sol_hopscotch_gold.html',\r\n  '533': 'sol_censor_gold.html',\r\n  '534': 'sol_fencing_gold.html',\r\n  '529': 'sol_censor_silver.html',\r\n  '530': 'sol_hopscotch_silver.html',\r\n  '531': 'sol_superbull_silver.html',\r\n  '526': 'sol_censor_bronze.html',\r\n  '527': 'sol_cow_bronze.html',\r\n  '528': 'sol_hopscotch_bronze.html',\r\n  '514': 'sol_cowrect_gold.html',\r\n  '515': 'sol_movie_gold.html',\r\n  '516': 'sol_grass_gold.html',\r\n  '511': 'sol_stampede_silver.html',\r\n  '512': 'sol_cowroute_silver.html',\r\n  '513': 'sol_meeting_silver.html',\r\n  '507': 'sol_cowroute_bronze.html',\r\n  '508': 'sol_cowroute2_bronze.html',\r\n  '509': 'sol_whatbase_bronze.html',\r\n  '510': 'sol_meeting_bronze.html',\r\n  '494': 'sol_guard_gold.html',\r\n  '495': 'sol_marathon_gold.html',\r\n  '496': 'sol_cowjog_gold.html',\r\n  '491': 'sol_piggyback_silver.html',\r\n  '492': 'sol_marathon_silver.html',\r\n  '493': 'sol_cowjog_silver.html',\r\n  '487': 'sol_marathon_bronze.html',\r\n  '488': 'sol_crosswords_bronze.html',\r\n  '489': 'sol_cowjog_bronze.html',\r\n  '490': 'sol_learning_bronze.html',\r\n  '436': 'sol_fairphoto_gold.html',\r\n  '437': 'sol_optics.html',\r\n  '438': 'sol_code.html',\r\n  '433': 'sol_fairphoto_silver.html',\r\n  '434': 'sol_gpsduel.html',\r\n  '435': 'sol_odometer_silver.html',\r\n  '430': 'sol_odometer_bronze.html',\r\n  '431': 'sol_fairphoto_bronze.html',\r\n  '432': 'sol_decorate.html',\r\n  '418': 'sol_lazy_gold.html',\r\n  '419': 'sol_sabotage.html',\r\n  '420': 'sol_fcount.html',\r\n  '415': 'sol_irrigation.html',\r\n  '416': 'sol_lazy_silver.html',\r\n  '417': 'sol_mooomoo.html',\r\n  '412': 'sol_reorder.html',\r\n  '413': 'sol_lazy_bronze.html',\r\n  '414': 'sol_cowart.html',\r\n  '400': 'sol_rblock.html',\r\n  '401': 'sol_dec.html',\r\n  '402': 'sol_boarding.html',\r\n  '397': 'sol_auto.html',\r\n  '398': 'sol_rblock.html',\r\n  '399': 'sol_scode_silver.html',\r\n  '394': 'sol_mirror.html',\r\n  '395': 'sol_auto.html',\r\n  '396': 'sol_scode_bronze.html',\r\n  '382': 'sol_curling.html',\r\n  '383': 'sol_skicourse.html',\r\n  '384': 'sol_skilevel.html',\r\n  '379': 'sol_slowdown.html',\r\n  '380': 'sol_ccski.html',\r\n  '381': 'sol_recording.html',\r\n  '376': 'sol_skidesign.html',\r\n  '377': 'sol_slowdown.html',\r\n  '378': 'sol_bteams.html',\r\n  '364': 'sol_vacationgold.html',\r\n  '365': 'sol_optmilk.html',\r\n  '366': 'sol_shufflegold.html',\r\n  '361': 'sol_msched_dec13.html',\r\n  '362': 'sol_vacation.html',\r\n  '363': 'sol_shuffle.html',\r\n  '358': 'sol_records.html',\r\n  '359': 'sol_baseball.html',\r\n  '360': 'sol_wormhole.html',\r\n  '346': 'sol_empty.html',\r\n  '347': 'sol_sight.html',\r\n  '348': 'sol_nochange.html',\r\n  '343': 'sol_nocow.html',\r\n  '344': 'sol_crowded.html',\r\n  '345': 'sol_pogocow.html',\r\n  '340': 'sol_combo.html',\r\n  '341': 'sol_milktemp.html',\r\n  '342': 'sol_nocow.html',\r\n  '285': 'sol_photo_open13_gold.html',\r\n  '286': 'sol_yinyang.html',\r\n  '287': 'sol_eight.html',\r\n  '282': 'sol_gravity.html',\r\n  '283': 'sol_fuel.html',\r\n  '284': 'sol_cruise.html',\r\n  '278': 'sol_ballet.html',\r\n  '279': 'sol_blink.html',\r\n  '280': 'sol_photo_open13_bronze.html',\r\n  '281': 'sol_haywire.html',\r\n  '265': 'sol_cowrun_mar13.html',\r\n  '266': 'sol_hillwalk.html',\r\n  '267': 'sol_necklace.html',\r\n  '262': 'sol_poker.html',\r\n  '263': 'sol_painting.html',\r\n  '264': 'sol_cowrun_mar13.html',\r\n  '259': 'sol_cowrace.html',\r\n  '260': 'sol_proximity.html',\r\n  '261': 'sol_assign.html',\r\n  '247': 'sol_partition.html',\r\n  '248': 'sol_taxi.html',\r\n  '249': 'sol_route.html',\r\n  '244': 'sol_perimeter_silver.html',\r\n  '245': 'sol_tractor.html',\r\n  '246': 'sol_msched_feb13.html',\r\n  '241': 'sol_relay.html',\r\n  '242': 'sol_crossings.html',\r\n  '243': 'sol_perimeter_bronze.html',\r\n  '229': 'sol_lineup_gold.html',\r\n  '230': 'sol_island.html',\r\n  '231': 'sol_seating.html',\r\n  '226': 'sol_paint_silver.html',\r\n  '227': 'sol_squares.html',\r\n  '228': 'sol_invite.html',\r\n  '223': 'sol_mirrors.html',\r\n  '224': 'sol_paint_bronze.html',\r\n  '225': 'sol_truth.html',\r\n  '211': 'sol_gangs.html',\r\n  '212': 'sol_first.html',\r\n  '213': 'sol_runaway.html',\r\n  '208': 'sol_crazy_silver.html',\r\n  '209': 'sol_wifi.html',\r\n  '210': 'sol_mroute.html',\r\n  '205': 'sol_greetings.html',\r\n  '206': 'sol_scramble.html',\r\n  '207': 'sol_crazy_bronze.html',\r\n  '193': 'sol_bbreeds.html',\r\n  '194': 'sol_cbs.html',\r\n  '195': 'sol_btree.html',\r\n  '190': 'sol_clumsy.html',\r\n  '191': 'sol_distant.html',\r\n  '192': 'sol_bbreeds.html',\r\n  '187': 'sol_cowfind.html',\r\n  '188': 'sol_typo.html',\r\n  '189': 'sol_hshoe.html',\r\n  '137': 'sol_tied.html',\r\n  '138': 'sol_bookshelf_gold.html',\r\n  '139': 'sol_subsets.html',\r\n  '134': 'sol_unlock_silver.html',\r\n  '135': 'sol_bookshelf_silver.html',\r\n  '136': 'sol_running.html',\r\n  '130': 'sol_cowrow.html',\r\n  '131': 'sol_3lines.html',\r\n  '132': 'sol_islands.html',\r\n  '133': 'sol_unlock_bronze.html',\r\n  '127': 'sol_banner.html',\r\n  '128': 'sol_restack.html',\r\n  '129': 'sol_skyscraper.html',\r\n  '124': 'sol_tractor_mar12.html',\r\n  '125': 'sol_fpot.html',\r\n  '126': 'sol_landscape.html',\r\n  '121': 'sol_times17.html',\r\n  '122': 'sol_connect.html',\r\n  '123': 'sol_wrongdir.html',\r\n  '118': 'sol_coupons.html',\r\n  '119': 'sol_symmetry.html',\r\n  '120': 'sol_nearcows.html',\r\n  '115': 'sol_planting_silver.html',\r\n  '116': 'sol_cowids.html',\r\n  '117': 'sol_relocate.html',\r\n  '112': 'sol_folding.html',\r\n  '113': 'sol_planting_bronze.html',\r\n  '114': 'sol_moo.html',\r\n  '109': 'sol_combos.html',\r\n  '110': 'sol_cowrun.html',\r\n  '111': 'sol_alliance.html',\r\n  '106': 'sol_delivery.html',\r\n  '107': 'sol_baleshare.html',\r\n  '108': 'sol_climb.html',\r\n  '103': 'sol_gifts.html',\r\n  '104': 'sol_stacking.html',\r\n  '105': 'sol_grazing.html',\r\n  '100': 'sol_photo.html',\r\n  '101': 'sol_simplify.html',\r\n  '102': 'sol_grassplant.html',\r\n  '97': 'sol_photo.html',\r\n  '98': 'sol_rblock.html',\r\n  '99': 'sol_umbrella.html',\r\n  '94': 'sol_haybales.html',\r\n  '95': 'sol_photo_bronze.html',\r\n  '96': 'sol_escape.html',\r\n  '91': 'sol_median.html',\r\n  '92': 'sol_bsudoku.html',\r\n  '93': 'sol_steeple.html',\r\n  '88': 'sol_pageant_silver.html',\r\n  '89': 'sol_lineup.html',\r\n  '90': 'sol_tilechng.html',\r\n  '84': 'sol_ctiming.html',\r\n  '85': 'sol_digits.html',\r\n  '86': 'sol_moosick.html',\r\n  '87': 'sol_pageant_bronze.html',\r\n};\r\n","import { slug } from 'github-slugger';\r\nimport * as defaultOrdering from '../../content/ordering';\r\nimport PGS from '../components/markdown/PGS';\r\nimport id_to_sol from '../components/markdown/ProblemsList/DivisionList/id_to_sol';\r\nimport { books } from '../utils/books';\r\nexport const contests = {\r\n  CCC: ['DMOJ', 'Canadian Computing Competition'],\r\n  CCO: ['DMOJ', 'Canadian Computing Olympiad'],\r\n  APIO: ['oj.uz', 'Asia-Pacific Informatics Olympiad'],\r\n  'Baltic OI': ['oj.uz', 'Baltic Olympiad in Informatics'],\r\n  CEOI: ['oj.uz', 'Central European Olympiad in Informatics'],\r\n  COI: ['oj.uz', 'Croatian Olympiad in Informatics'],\r\n  COCI: ['oj.uz', 'Croatian Open Contest in Informatics'],\r\n  IOI: ['oj.uz', 'International Olympiad in Informatics'],\r\n  IZhO: ['oj.uz', 'International Zhautykov Olympiad'],\r\n  JOI: ['oj.uz', 'Japanese Olympiad in Informatics'],\r\n  LMiO: ['oj.uz', 'Lithuanian Olympiad in Informatics'],\r\n  RMI: ['oj.uz', 'Romanian Master of Informatics'],\r\n  'NOI.sg': ['oj.uz', 'Singapore National Olympiad in Informatics'],\r\n};\r\n\r\nexport const probSources = {\r\n  Bronze: [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO 2015-16 to present',\r\n  ],\r\n  Silver: [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO 2015-16 to present',\r\n  ],\r\n  Gold: [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO 2015-16 to present',\r\n  ],\r\n  Plat: [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO 2015-16 to present',\r\n  ],\r\n  'Old Bronze': [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO Platinum did not exist prior to 2015-16.',\r\n  ],\r\n  'Old Silver': [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO Platinum did not exist prior to 2015-16.',\r\n  ],\r\n  'Old Gold': [\r\n    'http://www.usaco.org/index.php?page=viewproblem2&cpid=',\r\n    'USACO Platinum did not exist prior to 2015-16.',\r\n  ],\r\n  AC: [\r\n    'https://atcoder.jp/',\r\n    'AtCoder',\r\n    'The editorial button is right next to the problem title. If \"there is no editorial yet,\" check the \"Overall Editorial\" PDF below.',\r\n  ],\r\n  CC: [\r\n    'https://www.codechef.com/problems/',\r\n    'CodeChef',\r\n    'There should be a link to the editorial at the bottom of the page.',\r\n  ],\r\n  CF: [\r\n    'https://codeforces.com/contest/',\r\n    'CodeForces',\r\n    'Check contest materials, located to the right of the problem statement.',\r\n  ],\r\n  CSA: [\r\n    'https://csacademy.com/contest/archive/task/',\r\n    'CS Academy',\r\n    'The editorial tab should be right next to the statement tab.',\r\n  ],\r\n  CSES: [\r\n    'https://cses.fi/problemset/task/',\r\n    'Code Submission Evaluation System (includes CPH problemset)',\r\n  ],\r\n  DMOJ: [\r\n    'https://dmoj.ca/problem/',\r\n    'DMOJ: Modern Online Judge',\r\n    'There might be a \"Read Editorial\" button on the right side of the page.',\r\n  ],\r\n  FHC: [\r\n    'https://www.facebook.com/codingcompetitions/hacker-cup/',\r\n    'Facebook Hacker Cup',\r\n    'There should be a \"Solutions\" tab on the left side of the page.',\r\n  ],\r\n  HR: [\r\n    'https://www.hackerrank.com/',\r\n    'HackerRank',\r\n    'The editorial tab should be right next to the discussions tab.',\r\n  ],\r\n  Kattis: ['https://open.kattis.com/problems/', 'open.kattis.com'],\r\n  LC: ['https://leetcode.com/problems/', 'LeetCode'],\r\n  POI: [\r\n    'https://szkopul.edu.pl/problemset/problem/',\r\n    'Polish Olympiad in Informatics',\r\n  ],\r\n  SPOJ: ['https://www.spoj.com/problems/', 'Sphere Online Judge'],\r\n  TLX: [\r\n    'https://tlx.toki.id/',\r\n    'tlx.toki.id',\r\n    'The editorial should be available in the announcements tab.',\r\n  ],\r\n  'oj.uz': ['https://oj.uz/problem/view/', ''],\r\n  YS: ['https://judge.yosupo.jp/problem/', 'Library Checker'],\r\n};\r\n\r\n// if (sol == '' && problem.source == 'HE') {\r\n//   sol = '@Check HE';\r\n//   hover = 'The editorial tab should be right next to the problem tab.';\r\n// }\r\n\r\nexport type ProblemInfo = {\r\n  /**\r\n   * Unique ID of the problem. See Content Documentation.md for more info\r\n   */\r\n  uniqueId: string;\r\n  name: string;\r\n  url: string;\r\n  /**\r\n   * Source of the problem. More information about some problem sources can be found in the probSources and the contests map.\r\n   */\r\n  source: string;\r\n  difficulty: ProblemDifficulty;\r\n  /**\r\n   * In the context of a module, true if the problem is starred. False otherwise.\r\n   */\r\n  isStarred: boolean;\r\n  tags: string[];\r\n  solution: ProblemSolutionInfo;\r\n};\r\n\r\nexport type ProblemSolutionInfo =\r\n  | {\r\n      kind: 'internal';\r\n      // The URL for internal solutions are well defined: /problems/[problem-slug]/solution\r\n    }\r\n  | {\r\n      kind: 'link';\r\n      /**\r\n       * Ex: External Sol or CPH 5.3\r\n       */\r\n      label: string;\r\n      url: string;\r\n    }\r\n  | {\r\n      /*\r\nIf the label is just text. Used for certain sources like CodeForces\r\nEx:\r\n- label = Check CF\r\n- labelTooltip = \"Check content materials, located to the right of the problem statement\r\n*/\r\n      kind: 'label';\r\n      label: string;\r\n      labelTooltip: string | null;\r\n    }\r\n  | {\r\n      /*\r\nNot recommended -- use internal solutions instead.\r\nUsed if there's a super short solution sketch that's not a full editorial.\r\nLatex *is* allowed with the new implementation of problems.\r\n*/\r\n      kind: 'sketch';\r\n      sketch: string;\r\n    }\r\n  | null; // null if there's no solution for this problem\r\n\r\nexport type AlgoliaProblemInfo = Omit<ProblemInfo, 'uniqueId'> & {\r\n  objectID: string;\r\n  problemModules: {\r\n    id: string;\r\n    title: string;\r\n  }[];\r\n};\r\n\r\nexport type ProblemMetadata = Omit<ProblemInfo, 'solution'> & {\r\n  solutionMetadata: ProblemSolutionMetadata;\r\n};\r\n\r\nexport type ProblemSolutionMetadata =\r\n  | {\r\n      // auto generate problem solution label based off of the given site\r\n      // For sites like CodeForces: \"Check contest materials, located to the right of the problem statement.\"\r\n      kind: 'autogen-label-from-site';\r\n      // The site to generate it from. Sometimes this may differ from the source; for example, Codeforces could be the site while Baltic OI could be the source if Codeforces was hosting a Baltic OI problem.\r\n      site: string;\r\n    }\r\n  | {\r\n      // internal solution\r\n      kind: 'internal';\r\n    }\r\n  | {\r\n      // URL solution\r\n      // Use this for links to PDF solutions, etc\r\n      kind: 'link';\r\n      url: string;\r\n    }\r\n  | {\r\n      // Competitive Programming Handbook\r\n      // Ex: 5.3 or something\r\n      kind: 'CPH';\r\n      section: string;\r\n    }\r\n  | {\r\n      // USACO solution, generates it based off of the USACO problem ID\r\n      // ex. 1113 is mapped to sol_prob1_gold_feb21.html\r\n      kind: 'USACO';\r\n      usacoId: string;\r\n    }\r\n  | {\r\n      // IOI solution, generates it based off of the year\r\n      // ex. Maps year = 2001 to https://ioinformatics.org/page/ioi-2001/27\r\n      kind: 'IOI';\r\n      year: number;\r\n    }\r\n  | {\r\n      // no solution exists\r\n      kind: 'none';\r\n    }\r\n  | {\r\n      // for focus problems, when the solution is presented in the module of the problem\r\n      kind: 'in-module';\r\n      moduleId: string;\r\n    }\r\n  | {\r\n      /**\r\n       * @deprecated\r\n       */\r\n      kind: 'sketch';\r\n      sketch: string;\r\n    };\r\n\r\n// Checks if a given source is USACO\r\nexport const isUsaco = (source: string): boolean => {\r\n  const posi = ['Report', 'Bronze', 'Silver', 'Gold', 'Plat'];\r\n  for (let ind = 0; ind < posi.length; ++ind) {\r\n    if (source.includes(posi[ind])) return true;\r\n  }\r\n  if (source.startsWith('20')) {\r\n    // I think this is for the division list -- the source in this case is like 2015 December or something\r\n    const posi = ['December', 'January', 'February', 'US Open'];\r\n    for (let ind = 0; ind < posi.length; ++ind) {\r\n      if (source.endsWith(posi[ind])) return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// throws if it detects invalid USACO Metadata\r\n// TODO: add more checks?\r\nexport function checkInvalidUsacoMetadata(metadata: ProblemMetadata) {\r\n  if (!isUsaco(metadata.source)) return;\r\n  const id = metadata.uniqueId.substring(metadata.uniqueId.indexOf('-') + 1);\r\n  if (!metadata.url.endsWith('=' + id)) {\r\n    throw Error(`Invalid USACO Metadata: id=${id} url=${metadata.url}`);\r\n  }\r\n  if (metadata.solutionMetadata.kind == 'USACO') {\r\n    if (metadata.solutionMetadata.usacoId !== id) {\r\n      throw Error(\r\n        `Invalid USACO Metadata: id=${id} solutionMetadata.usacoId=${metadata.solutionMetadata.usacoId}`\r\n      );\r\n    }\r\n  } else if (\r\n    !['internal', 'in-module'].includes(metadata.solutionMetadata.kind)\r\n  ) {\r\n    throw new Error(\r\n      `Invalid USACO Metadata: id=${id} metadata.solutionMetadata.kind=${metadata.solutionMetadata.kind}`\r\n    );\r\n  }\r\n}\r\n\r\nexport function getProblemURL(\r\n  problem: Pick<ProblemInfo, 'source' | 'name' | 'uniqueId'> & {\r\n    [x: string]: any;\r\n  }\r\n): string {\r\n  // USACO and CSES sometimes have duplicate problem names\r\n  // so we should add the ID to the URL\r\n  return `/problems/${\r\n    isUsaco(problem.source) || problem.source === 'CSES'\r\n      ? problem.uniqueId\r\n      : slug(problem.source)\r\n  }-${slug(problem.name.replace(' - ', ''))}`;\r\n}\r\n\r\n/**\r\n * Retrieves the code from USACO or CSES URL's (finds trailing numbers).\r\n * Ex: https://cses.fi/problemset/task/1652 yields 1652\r\n */\r\nconst getTrailingCodeFromProblemURL = (url: string): number => {\r\n  const match = url.match(/([0-9]+)\\/?$/);\r\n  if (match === null) {\r\n    throw new Error('Could not extract USACO / CSES code from URL.');\r\n  }\r\n  return parseInt(match[1]);\r\n};\r\n\r\nexport const getProblemInfo = (\r\n  metadata: ProblemMetadata,\r\n  ordering?: any\r\n): ProblemInfo => {\r\n  // don't cache the ordering import, to make sure it gets re-fetched each time\r\n  if (!ordering) {\r\n    ordering = defaultOrdering;\r\n  }\r\n  const { solutionMetadata, ...info } = metadata;\r\n\r\n  if (\r\n    !info.source ||\r\n    !info.uniqueId ||\r\n    info.isStarred === null ||\r\n    info.isStarred === undefined ||\r\n    !info.name ||\r\n    !info.url\r\n  ) {\r\n    console.error(\"problem metadata isn't valid\", metadata);\r\n    throw new Error('Bad problem metadata');\r\n  }\r\n\r\n  let sol: ProblemSolutionInfo;\r\n  if (solutionMetadata.kind === 'autogen-label-from-site') {\r\n    const site = solutionMetadata.site;\r\n    if (!probSources.hasOwnProperty(site) || probSources[site].length !== 3) {\r\n      console.error(metadata);\r\n      throw new Error(\r\n        \"Couldn't autogenerate solution label from problem site \" + site\r\n      );\r\n    }\r\n    sol = {\r\n      kind: 'label',\r\n      label: 'Check ' + site,\r\n      labelTooltip: probSources[site][2],\r\n    };\r\n  } else if (solutionMetadata.kind === 'internal') {\r\n    sol = {\r\n      kind: 'internal',\r\n    };\r\n  } else if (solutionMetadata.kind === 'link') {\r\n    sol = {\r\n      kind: 'link',\r\n      url: solutionMetadata.url,\r\n      label: 'External Sol',\r\n    };\r\n  } else if (solutionMetadata.kind === 'CPH') {\r\n    const getSec = (dictKey, book, sec) => {\r\n      let url = book;\r\n      if (sec[sec.length - 1] == ',') sec = sec.substring(0, sec.length - 1);\r\n      if (!/^\\d.*$/.test(sec)) return url;\r\n      if (!(sec in PGS[dictKey])) {\r\n        throw `Could not find section ${sec} in source ${dictKey}`;\r\n      }\r\n      url += '#page=' + PGS[dictKey][sec];\r\n      return url;\r\n    };\r\n    const source = 'CPH';\r\n    const cphUrl = getSec(source, books[source][0], solutionMetadata.section);\r\n    sol = {\r\n      kind: 'link',\r\n      label: 'CPH ' + solutionMetadata.section,\r\n      url: cphUrl,\r\n    };\r\n  } else if (solutionMetadata.kind === 'USACO') {\r\n    if (!id_to_sol.hasOwnProperty(solutionMetadata.usacoId)) {\r\n      throw new Error(\r\n        \"Couldn't find a corresponding USACO external solution for USACO problem ID \" +\r\n          solutionMetadata.usacoId\r\n      );\r\n    }\r\n    sol = {\r\n      kind: 'link',\r\n      label: 'External Sol',\r\n      url:\r\n        `http://www.usaco.org/current/data/` +\r\n        id_to_sol[solutionMetadata.usacoId],\r\n    };\r\n  } else if (solutionMetadata.kind === 'IOI') {\r\n    const year = solutionMetadata.year;\r\n    const num = year - 1994 + 20;\r\n    sol = {\r\n      kind: 'link',\r\n      label: 'External Sol',\r\n      url: `https://ioinformatics.org/page/ioi-${year}/` + num.toString(),\r\n    };\r\n  } else if (solutionMetadata.kind === 'none') {\r\n    sol = null;\r\n  } else if (solutionMetadata.kind === 'in-module') {\r\n    if (!(solutionMetadata.moduleId in ordering.moduleIDToSectionMap)) {\r\n      throw new Error(\r\n        `Problem ${metadata.uniqueId} - solution in nonexistent module: ${solutionMetadata.moduleId}`\r\n      );\r\n    }\r\n    sol = {\r\n      kind: 'link',\r\n      label: 'In Module',\r\n      url: `https://usaco.guide/${\r\n        ordering.moduleIDToSectionMap[solutionMetadata.moduleId]\r\n      }/${solutionMetadata.moduleId}#problem-${info.uniqueId}`,\r\n    };\r\n  } else if (solutionMetadata.kind === 'sketch') {\r\n    sol = {\r\n      kind: 'sketch',\r\n      sketch: solutionMetadata.sketch,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      'Unknown solution metadata ' + JSON.stringify(solutionMetadata)\r\n    );\r\n  }\r\n\r\n  return {\r\n    ...info,\r\n    solution: sol,\r\n  };\r\n};\r\n\r\n/*\r\n * Warning: not all IDs will follow this convention. You should not assume\r\n * that the unique ID for a problem will necessarily be what this function\r\n * outputs; the user can manually change the problem ID.\r\n */\r\nexport function generateProblemUniqueId(\r\n  source: string,\r\n  name: string,\r\n  url: string\r\n): string {\r\n  if (isUsaco(source)) {\r\n    return `usaco-${getTrailingCodeFromProblemURL(url)}`;\r\n  } else if (source === 'CSES') {\r\n    return `cses-${getTrailingCodeFromProblemURL(url)}`;\r\n  } else if (source === 'CF') {\r\n    const num = url.match(/([0-9]+)/g)[0];\r\n    const char = url.match(/\\/([A-z0-9]+)$/)[1];\r\n    if (url.indexOf('gym') !== -1) {\r\n      return `cfgym-${num}${char}`;\r\n    } else {\r\n      return `cf-${num}${char}`;\r\n    }\r\n  } else {\r\n    const camelCase = x => {\r\n      // In case it's something like 2018 - Problem Name\r\n      if (x.match(/^[0-9]{4}/) !== null) {\r\n        return `${x[2]}${x[3]}-${camelCase(x.substring(7))}`;\r\n      }\r\n      // remove whitespace\r\n      x = x.replace(/[^\\w\\s]/g, '');\r\n      // camel case everything (first word uppercase)\r\n      const str = x.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\r\n        return word.toUpperCase();\r\n      });\r\n      if (str.split(' ').length === 1) {\r\n        // special case: if there's only one word, it should be lowercase\r\n        return str.toLowerCase();\r\n      } else {\r\n        return str.replace(/\\s+/g, '');\r\n      }\r\n    };\r\n    if (source === 'Baltic OI') {\r\n      return `baltic-${camelCase(name)}`;\r\n    } else if (source === 'Balkan OI') {\r\n      return `balkan-${camelCase(name)}`;\r\n    } else {\r\n      return `${camelCase(source)}-${camelCase(name)}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function autoGenerateSolutionMetadata(\r\n  source: string,\r\n  name: string,\r\n  url: string\r\n): ProblemSolutionMetadata | null {\r\n  if (isUsaco(source)) {\r\n    return {\r\n      kind: 'USACO',\r\n      usacoId: '' + getTrailingCodeFromProblemURL(url),\r\n    };\r\n  } else if (source == 'IOI') {\r\n    for (let i = 1994; i <= 2089; ++i) {\r\n      const des = i.toString();\r\n      let des2 = (i % 100).toString();\r\n      if (des2.length == 1) des2 = '0' + des2;\r\n      if (name.indexOf(des) !== -1 || name.indexOf(des2) !== -1) {\r\n        return {\r\n          kind: 'IOI',\r\n          year: i,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  } else if (\r\n    probSources.hasOwnProperty(source) &&\r\n    probSources[source].length === 3\r\n  ) {\r\n    return {\r\n      kind: 'autogen-label-from-site',\r\n      site: source,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\n// legacy code follows\r\n\r\nexport type ProblemSolution = {\r\n  kind: 'internal' | 'link' | 'text' | 'sketch';\r\n\r\n  /**\r\n   * The URL of the problem solution. Defined for kind = \"internal\" and kind = \"link\"\r\n   */\r\n  url?: string;\r\n\r\n  /**\r\n   * The label of the problem solution, defined for kind = \"link\" and kind = \"text\"\r\n   */\r\n  label?: string;\r\n\r\n  /**\r\n   * A tooltip to show in addition to the label, sometimes defined\r\n   */\r\n  labelTooltip?: string | null;\r\n\r\n  /**\r\n   * Defined for kind = \"sketch\"\r\n   */\r\n  sketch?: string;\r\n};\r\n\r\nconst isExternal = link => {\r\n  return link.startsWith('http');\r\n};\r\nconst isInternal = link => {\r\n  return /^[a-zA-Z\\-0-9]+$/.test(link);\r\n};\r\n\r\nexport class Problem {\r\n  public url: string;\r\n  public solution: ProblemSolution | null = null;\r\n  public hover = '';\r\n  public tooltipHoverDescription: string | null;\r\n  public solutionMetadata: any;\r\n\r\n  get uniqueID(): string {\r\n    let id;\r\n    if (\r\n      ['Bronze', 'Silver', 'Gold', 'Plat'].some(\r\n        x => this.source.indexOf(x) !== -1\r\n      )\r\n    ) {\r\n      // is usaco\r\n      id = `usaco-${this.id}`;\r\n    } else if (this.source === 'CSES') {\r\n      id = `cses-${this.id}`;\r\n    } else if (this.source === 'Kattis' && !this.id.startsWith('http')) {\r\n      id = `kattis-${this.id}`;\r\n    } else if (this.source === 'CF') {\r\n      const num = this.id.match(/([0-9]+)/g)[0];\r\n      const char = this.id.match(/\\/([A-z0-9]+)$/)[1];\r\n      if (this.id.indexOf('gym') !== -1) {\r\n        id = `cfgym-${num}${char}`;\r\n      } else {\r\n        id = `cf-${num}${char}`;\r\n      }\r\n    } else {\r\n      const camelCase = x => {\r\n        if (x.match(/^[0-9]{4}/) !== null) {\r\n          return `${x[2]}${x[3]}-${camelCase(x.substring(7))}`;\r\n        }\r\n        x = x.replace(/[^\\w\\s]/g, '');\r\n        const str = x.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\r\n          return word.toUpperCase();\r\n        });\r\n        if (str.split(' ').length === 1) {\r\n          return str.toLowerCase();\r\n        } else {\r\n          return str.replace(/\\s+/g, '');\r\n        }\r\n      };\r\n      if (this.source === 'Baltic OI') {\r\n        id = `baltic-${camelCase(this.name)}`;\r\n      } else if (this.source === 'Balkan OI') {\r\n        id = `balkan-${camelCase(this.name)}`;\r\n      } else {\r\n        id = `${camelCase(this.source)}-${camelCase(this.name)}`;\r\n      }\r\n    }\r\n    let extra = '';\r\n    if (this.solutionMetadata?.kind === 'internal') {\r\n      if (this.solID !== id) {\r\n        extra += '   [Current Sol ID: ' + this.solID + ']';\r\n      }\r\n    }\r\n    console.log(`${id}${extra}`);\r\n    // console.log(this.source, id);\r\n    return id;\r\n  }\r\n\r\n  private autoGenerateInfoFromSource() {\r\n    if (!(this.source in probSources) && isUsaco(this.source)) {\r\n      this.url = probSources['Bronze'][0] + this.url;\r\n      return;\r\n    }\r\n    if (this.source in probSources) {\r\n      if (!this.url.startsWith('http')) {\r\n        if (\r\n          this.source == 'CF' &&\r\n          (this.url.startsWith('problemset') ||\r\n            this.url.startsWith('contest') ||\r\n            this.url.startsWith('gym') ||\r\n            this.url.startsWith('edu'))\r\n        ) {\r\n          this.url = 'https://codeforces.com/' + this.url;\r\n        } else this.url = probSources[this.source][0] + this.url;\r\n      }\r\n      this.tooltipHoverDescription = probSources[this.source][1];\r\n    } else if (this.source in contests) {\r\n      if (!this.url.startsWith('http')) {\r\n        this.url = probSources[contests[this.source][0]][0] + this.url;\r\n      }\r\n      this.tooltipHoverDescription = contests[this.source][1];\r\n    } else {\r\n      if (!this.url.startsWith('http')) {\r\n        throw `URL ${this.id} is not valid. Did you make a typo in the problem source (${this.source}), or in the URL? Problem name: ${this.name}`;\r\n      }\r\n      if (this.source.indexOf('@') != -1) {\r\n        const ind = this.source.indexOf('@');\r\n        this.tooltipHoverDescription = this.source.substring(\r\n          ind + 1,\r\n          this.source.length\r\n        );\r\n        this.source = this.source.substring(0, ind);\r\n      }\r\n    }\r\n  }\r\n\r\n  private tryAutoGeneratingSolution() {\r\n    let autoGeneratedSolURL = null;\r\n    // console.log(\"AUTO GENERATE WITH ID\",this.id)\r\n    if (isUsaco(this.source) && this.id in id_to_sol) {\r\n      autoGeneratedSolURL =\r\n        `http://www.usaco.org/current/data/` + id_to_sol[this.id];\r\n      this.solutionMetadata = {\r\n        kind: 'USACO',\r\n        usacoId: this.id,\r\n      };\r\n      // console.log(\"GENERATED\",autoGeneratedSolURL);\r\n    } else if (this.source == 'IOI') {\r\n      for (let i = 1994; i <= 2017; ++i) {\r\n        const des = i.toString();\r\n        if (this.name.indexOf(des) != -1) {\r\n          const num = i - 1994 + 20;\r\n          autoGeneratedSolURL =\r\n            `https://ioinformatics.org/page/ioi-${i}/` + num.toString();\r\n          this.solutionMetadata = {\r\n            kind: 'IOI',\r\n            usacoId: i,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n      if (autoGeneratedSolURL === null) {\r\n        for (let i = 1994; i <= 2017; ++i) {\r\n          let des = (i % 100).toString();\r\n          if (des.length == 1) des = '0' + des;\r\n          if (this.name.indexOf(des) != -1) {\r\n            const num = i - 1994 + 20;\r\n            autoGeneratedSolURL =\r\n              `https://ioinformatics.org/page/ioi-${i}/` + num.toString();\r\n            this.solutionMetadata = {\r\n              kind: 'IOI',\r\n              usacoId: i,\r\n            };\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(\"HA\",this.source,autoGeneratedSolURL)\r\n    if (autoGeneratedSolURL !== null) {\r\n      this.solution = {\r\n        kind: 'link',\r\n        url: autoGeneratedSolURL,\r\n        label: 'External Sol',\r\n      };\r\n    } else {\r\n      if (this.source in probSources && probSources[this.source].length == 3) {\r\n        this.solution = {\r\n          kind: 'text',\r\n          label: 'Check ' + this.source,\r\n          labelTooltip: probSources[this.source][2],\r\n        };\r\n        this.solutionMetadata = {\r\n          kind: 'autogen-label-from-site',\r\n          site: this.source,\r\n        };\r\n      } else {\r\n        // this isn't necessary -- can just use hasOwnProperty instead of in\r\n        for (const source in probSources) {\r\n          if (\r\n            probSources[source].length == 3 &&\r\n            this.url.startsWith(probSources[source][0])\r\n          ) {\r\n            this.solution = {\r\n              kind: 'text',\r\n              label: 'Check ' + source,\r\n              labelTooltip: probSources[source][2],\r\n            };\r\n            this.solutionMetadata = {\r\n              kind: 'autogen-label-from-site',\r\n              site: source,\r\n            };\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public source: string,\r\n    public name: string,\r\n    public id: string,\r\n    public difficulty?: ProblemDifficulty | null,\r\n    public starred?: boolean,\r\n    public tags?: string[],\r\n    public solID?: string,\r\n    public solQuality: 'bad' | 'ok' | 'good' = 'ok',\r\n    public fraction?: number,\r\n    public moduleLink?: string\r\n  ) {\r\n    this.url = id;\r\n    this.starred = this.starred ?? false;\r\n\r\n    this.autoGenerateInfoFromSource();\r\n    solID = solID || '';\r\n    // console.log(\"WHOOPS\",solID);\r\n    // if (solID.startsWith('/')) {\r\n    //   this.solution = {\r\n    //     kind: 'link',\r\n    //     url: `${solID}`,\r\n    //     label: 'Link',\r\n    //   };\r\n    // }\r\n    if (isInternal(solID)) {\r\n      this.solution = {\r\n        kind: 'internal',\r\n        url: `/solutions/${solID}`,\r\n      };\r\n      this.solutionMetadata = {\r\n        kind: 'internal',\r\n      };\r\n    } else if (isExternal(solID)) {\r\n      this.solution = {\r\n        kind: 'link',\r\n        url: solID,\r\n        label: 'External Sol',\r\n      };\r\n      this.solutionMetadata = {\r\n        kind: 'link',\r\n        url: solID,\r\n      };\r\n    } else if (solID.startsWith('@CPH')) {\r\n      const getSec = (dictKey, book, sec) => {\r\n        let url = book;\r\n        if (sec[sec.length - 1] == ',') sec = sec.substring(0, sec.length - 1);\r\n        if (!/^\\d.*$/.test(sec)) return url;\r\n        if (!(sec in PGS[dictKey])) {\r\n          throw `Could not find section ${sec} in source ${dictKey}`;\r\n        }\r\n        url += '#page=' + PGS[dictKey][sec];\r\n        return url;\r\n      };\r\n      const source = 'CPH';\r\n      const cphUrl = getSec(source, books[source][0], solID.substring(5));\r\n      this.solution = {\r\n        kind: 'link',\r\n        label: solID.substring(1),\r\n        url: cphUrl,\r\n      };\r\n      this.solutionMetadata = {\r\n        kind: 'CPH',\r\n        section: solID.substring(5),\r\n      };\r\n    } else if (solID.startsWith('@')) {\r\n      let solMsg = null;\r\n      if (solID == '@@') {\r\n        // empty solution\r\n        this.solutionMetadata = {\r\n          kind: 'none',\r\n        };\r\n      } else if (solID == '@B') {\r\n        solMsg = 'Below'; // solution later in module\r\n        this.solutionMetadata = {\r\n          kind: 'in-module',\r\n        };\r\n      } else {\r\n        this.solutionMetadata = {\r\n          kind: 'in-module',\r\n        };\r\n        solMsg = solID.substring(1); // custom message\r\n      }\r\n      if (solMsg) {\r\n        this.solutionMetadata = {\r\n          kind: 'in-module',\r\n        };\r\n        this.solution = {\r\n          kind: 'text',\r\n          label: solMsg,\r\n        };\r\n      }\r\n    } else {\r\n      this.tryAutoGeneratingSolution();\r\n      // console.log(this.solution);\r\n      if (solID && !this.solution) {\r\n        this.solutionMetadata = {\r\n          kind: 'sketch',\r\n          sketch: solID,\r\n        };\r\n        // only try sketch if all else fails\r\n        this.solution = {\r\n          kind: 'sketch',\r\n          sketch: solID,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type ProblemProgress =\r\n  | 'Not Attempted'\r\n  | 'Solving'\r\n  | 'Solved'\r\n  | 'Reviewing'\r\n  | 'Skipped'\r\n  | 'Ignored';\r\n\r\nexport const PROBLEM_PROGRESS_OPTIONS: ProblemProgress[] = [\r\n  'Not Attempted',\r\n  'Solving',\r\n  'Solved',\r\n  'Reviewing',\r\n  'Skipped',\r\n  'Ignored',\r\n];\r\n\r\nexport type ProblemDifficulty =\r\n  | 'Very Easy'\r\n  | 'Easy'\r\n  | 'Normal'\r\n  | 'Hard'\r\n  | 'Very Hard'\r\n  | 'Insane';\r\nexport const PROBLEM_DIFFICULTY_OPTIONS: ProblemDifficulty[] = [\r\n  'Very Easy',\r\n  'Easy',\r\n  'Normal',\r\n  'Hard',\r\n  'Very Hard',\r\n  'Insane',\r\n];\r\n\r\nexport type ProblemFeedback = {\r\n  difficulty: ProblemDifficulty | null;\r\n  tags: string[];\r\n  solutionCode: string;\r\n  isCodePublic: boolean;\r\n  otherFeedback: string;\r\n};\r\n","export const books = {\r\n  PAPS: ['/PAPS.pdf', ' Principles of Algorithmic Problem Solving'],\r\n  CP2: ['/CP2.pdf', 'Competitive Programming 2'],\r\n  CPH: ['/CPH.pdf', \"Competitive Programmer's Handbook\"],\r\n  IUSACO: ['https://darrenyao.com/', 'An Introduction to USACO'],\r\n  GCP: [\r\n    'https://link.springer.com/book/10.1007/978-3-319-72547-5',\r\n    'Guide to Competitive Programming (based off CPH)',\r\n  ],\r\n};\r\n"],"names":["regex","module","exports","BananaSlug","own","Object","hasOwnProperty","this","reset","slugger","string","maintainCase","toLowerCase","replace","prototype","slug","value","self","originalSlug","call","occurrences","create","CPP","JAVA","CPH","PAPS","CP2","contests","CCC","CCO","APIO","CEOI","COI","COCI","IOI","IZhO","JOI","LMiO","RMI","probSources","Bronze","Silver","Gold","Plat","AC","CC","CF","CSA","CSES","DMOJ","FHC","HR","Kattis","LC","POI","SPOJ","TLX","YS","isUsaco","source","posi","ind","length","includes","startsWith","endsWith","getProblemURL","problem","uniqueId","name","getTrailingCodeFromProblemURL","url","match","Error","parseInt","generateProblemUniqueId","num","char","indexOf","camelCase","x","substring","str","word","index","toUpperCase","split","autoGenerateSolutionMetadata","kind","usacoId","i","des","toString","des2","year","site","PROBLEM_PROGRESS_OPTIONS","PROBLEM_DIFFICULTY_OPTIONS","books","IUSACO","GCP"],"sourceRoot":""}